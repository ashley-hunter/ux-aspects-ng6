{"version":3,"file":"ux-aspects-ux-aspects.umd.js.map","sources":["ng://@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts","ng://@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","ng://@ux-aspects/ux-aspects/directives/resize/resize.service.ts","ng://@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","ng://@ux-aspects/ux-aspects/directives/resize/resize.module.ts","ng://@ux-aspects/ux-aspects/components/card-tabs/card-tab/card-tab-content.directive.ts",null,"ng://@ux-aspects/ux-aspects/components/card-tabs/card-tabs.service.ts","ng://@ux-aspects/ux-aspects/components/card-tabs/card-tab/card-tab.component.ts","ng://@ux-aspects/ux-aspects/components/card-tabs/card-tabset/card-tabset.component.ts","ng://@ux-aspects/ux-aspects/components/card-tabs/card-tabs.module.ts","ng://@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","ng://@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","ng://@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","ng://@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","ng://@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","ng://@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","ng://@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","ng://@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","ng://@ux-aspects/ux-aspects/directives/drag/drag.directive.ts","ng://@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","ng://@ux-aspects/ux-aspects/directives/drag/drag.module.ts","ng://@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","ng://@ux-aspects/ux-aspects/components/spin-button/spin-button.component.ts","ng://@ux-aspects/ux-aspects/components/spin-button/spin-button.module.ts","ng://@ux-aspects/ux-aspects/components/time-picker/time-format.pipe.ts","ng://@ux-aspects/ux-aspects/components/time-picker/time-picker.component.ts","ng://@ux-aspects/ux-aspects/components/time-picker/time-picker.module.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.service.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.service.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.service.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.service.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","ng://@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","ng://@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","ng://@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","ng://@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","ng://@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","ng://@ux-aspects/ux-aspects/components/facets/facet-events.ts","ng://@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","ng://@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","ng://@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","ng://@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","ng://@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","ng://@ux-aspects/ux-aspects/components/tooltip/tooltip.component.ts","ng://@ux-aspects/ux-aspects/components/tooltip/tooltip.service.ts","ng://@ux-aspects/ux-aspects/components/tooltip/tooltip.directive.ts","ng://@ux-aspects/ux-aspects/components/tooltip/tooltip.module.ts","ng://@ux-aspects/ux-aspects/directives/reorderable/reorderable-handle.directive.ts","ng://@ux-aspects/ux-aspects/directives/reorderable/reorderable-model.directive.ts","ng://@ux-aspects/ux-aspects/directives/reorderable/dragula.ts","ng://@ux-aspects/ux-aspects/directives/reorderable/reorderable.service.ts","ng://@ux-aspects/ux-aspects/directives/reorderable/reorderable.directive.ts","ng://@ux-aspects/ux-aspects/directives/reorderable/reorderable.module.ts","ng://@ux-aspects/ux-aspects/components/facets/facets.module.ts","ng://@ux-aspects/ux-aspects/components/facets/models/facet.ts","ng://@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","ng://@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","ng://@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","ng://@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","ng://@ux-aspects/ux-aspects/components/filters/filter.module.ts","ng://@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","ng://@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","ng://@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.service.ts","ng://@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.component.ts","ng://@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-button.component.ts","ng://@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.module.ts","ng://@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.service.ts","ng://@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.component.ts","ng://@ux-aspects/ux-aspects/directives/click-outside/click-outside.directive.ts","ng://@ux-aspects/ux-aspects/directives/click-outside/click-outside.module.ts","ng://@ux-aspects/ux-aspects/components/popover/popover.component.ts","ng://@ux-aspects/ux-aspects/components/popover/popover.directive.ts","ng://@ux-aspects/ux-aspects/components/popover/popover.module.ts","ng://@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.module.ts","ng://@ux-aspects/ux-aspects/components/side-panel/side-panel.service.ts","ng://@ux-aspects/ux-aspects/components/side-panel/side-panel.component.ts","ng://@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","ng://@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","ng://@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","ng://@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","ng://@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","ng://@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.service.ts","ng://@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard-step.component.ts","ng://@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.component.ts","ng://@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.module.ts","ng://@ux-aspects/ux-aspects/components/navigation/navigation.component.ts","ng://@ux-aspects/ux-aspects/components/navigation/navigation-item/navigation-item.component.ts","ng://@ux-aspects/ux-aspects/components/navigation/navigation.module.ts","ng://@ux-aspects/ux-aspects/services/color/color.service.ts","ng://@ux-aspects/ux-aspects/services/color/color.module.ts","ng://@ux-aspects/ux-aspects/components/notification/notification.service.ts","ng://@ux-aspects/ux-aspects/components/notification/notification-list.component.ts","ng://@ux-aspects/ux-aspects/components/notification/notification.module.ts","ng://@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","ng://@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","ng://@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","ng://@ux-aspects/ux-aspects/components/page-header/page-header.service.ts","ng://@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","ng://@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","ng://@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","ng://@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","ng://@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","ng://@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.service.ts","ng://@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation-item.directive.ts","ng://@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.directive.ts","ng://@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation-toggle.directive.ts","ng://@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.module.ts","ng://@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","ng://@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","ng://@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","ng://@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","ng://@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-components/text/text.component.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-components/date/date.component.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-components/date-range/date-range.component.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-components/select/select.component.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","ng://@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","ng://@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","ng://@ux-aspects/ux-aspects/components/typeahead/typeahead.service.ts","ng://@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","ng://@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","ng://@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","ng://@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","ng://@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","ng://@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","ng://@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","ng://@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","ng://@ux-aspects/ux-aspects/components/typeahead/typeahead-highlight.directive.ts","ng://@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","ng://@ux-aspects/ux-aspects/components/select/select.component.ts","ng://@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","ng://@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","ng://@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","ng://@ux-aspects/ux-aspects/components/select/select.module.ts","ng://@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","ng://@ux-aspects/ux-aspects/components/side-panel/side-panel-close.directive.ts","ng://@ux-aspects/ux-aspects/components/side-panel/side-panel.module.ts","ng://@ux-aspects/ux-aspects/components/slider/slider.component.ts","ng://@ux-aspects/ux-aspects/components/slider/slider.module.ts","ng://@ux-aspects/ux-aspects/components/spark/spark.component.ts","ng://@ux-aspects/ux-aspects/components/spark/spark.module.ts","ng://@ux-aspects/ux-aspects/components/tabset/tabset.service.ts","ng://@ux-aspects/ux-aspects/components/tabset/tabset.component.ts","ng://@ux-aspects/ux-aspects/components/tabset/tab/tab.component.ts","ng://@ux-aspects/ux-aspects/components/tabset/tab/tab-heading.directive.ts","ng://@ux-aspects/ux-aspects/components/tabset/tab/tab-focus.directive.ts","ng://@ux-aspects/ux-aspects/components/tabset/tabset.module.ts","ng://@ux-aspects/ux-aspects/components/timeline/timeline.component.ts","ng://@ux-aspects/ux-aspects/components/timeline/timeline-event/timeline-event.component.ts","ng://@ux-aspects/ux-aspects/components/timeline/timeline.module.ts","ng://@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","ng://@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","ng://@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-button.directive.ts","ng://@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-field.directive.ts","ng://@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.component.ts","ng://@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.module.ts","ng://@ux-aspects/ux-aspects/services/audio/audio.service.ts","ng://@ux-aspects/ux-aspects/services/audio/audio.module.ts","ng://@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","ng://@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","ng://@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","ng://@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","ng://@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","ng://@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","ng://@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","ng://@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","ng://@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","ng://@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","ng://@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","ng://@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","ng://@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","ng://@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","ng://@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","ng://@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","ng://@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","ng://@ux-aspects/ux-aspects/directives/auto-grow/auto-grow.directive.ts","ng://@ux-aspects/ux-aspects/directives/auto-grow/auto-grow.module.ts","ng://@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.directive.ts","ng://@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.module.ts","ng://@ux-aspects/ux-aspects/directives/float-label/float-label.directive.ts","ng://@ux-aspects/ux-aspects/directives/float-label/float-label.module.ts","ng://@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","ng://@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","ng://@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","ng://@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","ng://@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","ng://@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","ng://@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","ng://@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","ng://@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","ng://@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","ng://@ux-aspects/ux-aspects/directives/selection/strategies/selection.strategy.ts","ng://@ux-aspects/ux-aspects/directives/selection/strategies/row-selection.strategy.ts","ng://@ux-aspects/ux-aspects/directives/selection/strategies/simple-selection.strategy.ts","ng://@ux-aspects/ux-aspects/directives/selection/selection.service.ts","ng://@ux-aspects/ux-aspects/directives/selection/selection-item.directive.ts","ng://@ux-aspects/ux-aspects/directives/selection/selection.directive.ts","ng://@ux-aspects/ux-aspects/directives/selection/selection.module.ts","ng://@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","ng://@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","ng://@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","ng://@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","ng://@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","ng://@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","ng://@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","ng://@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts","ng://@ux-aspects/ux-aspects/hybrid/components/contacts/contacts.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/expand-input/expand-input.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/floating-action-button/floating-action-button.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/flot/flot.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/grid/grid.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/hierarchy-bar/hierarchy-bar.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/marquee-wizard/marquee-wizard.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/nested-donut/nested-donut.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/organization-chart/organization-chart.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/partition-map/partition-map.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-bar-chart.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-line-chart.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-pie-chart.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-updating-line-chart.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/sankey-chart/sankey.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/search-toolbar/search-toolbar.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/select-table/select-table.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/slider-chart/slider-chart.directive.ts","ng://@ux-aspects/ux-aspects/hybrid/components/social-chart/social-chart.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/sort-direction-toggle/sort-direction-toggle.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/tree-grid/tree-grid.component.ts","ng://@ux-aspects/ux-aspects/hybrid/components/thumbnail/thumbnail.component.ts","ng://@ux-aspects/ux-aspects/hybrid/services/navigation-menu/navigation-menu.service.ts","ng://@ux-aspects/ux-aspects/hybrid/services/pdf/pdf.service.ts","ng://@ux-aspects/ux-aspects/hybrid/services/time-ago/time-ago.service.ts","ng://@ux-aspects/ux-aspects/hybrid/hybrid.module.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-breadcrumbs',\r\n    template: `<nav aria-label=\"Breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li *ngFor=\"let crumb of crumbs\">\r\n\r\n            <!-- If there is a router link then use a tag -->\r\n            <a *ngIf=\"crumb.routerLink || crumb.onClick\"\r\n                tabindex=\"0\"\r\n                [routerLink]=\"crumb.routerLink\"\r\n                [fragment]=\"crumb.fragment\"\r\n                [queryParams]=\"crumb.queryParams\"\r\n                (click)=\"clickCrumb($event, crumb)\">\r\n                {{ crumb.title }}\r\n            </a>\r\n\r\n            <!-- If there is not router link then display text in a span -->\r\n            <span *ngIf=\"!crumb.routerLink && !crumb.onClick\">{{ crumb.title }}</span>\r\n        </li>\r\n    </ol>\r\n</nav>`\r\n})\r\n\r\nexport class BreadcrumbsComponent {\r\n\r\n    @Input() crumbs: Breadcrumb[];\r\n\r\n    clickCrumb(event: MouseEvent, crumb: Breadcrumb) {\r\n        if (crumb.onClick) {\r\n            crumb.onClick.call(null, event);\r\n        }\r\n    }\r\n}\r\n\r\nexport interface Breadcrumb {\r\n    title: string;\r\n    routerLink?: string;\r\n    fragment?: string;\r\n    queryParams?: any;\r\n    onClick?: (event: MouseEvent) => void;\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, \r\n        RouterModule\r\n    ],\r\n    exports: [BreadcrumbsComponent],\r\n    declarations: [BreadcrumbsComponent]\r\n})\r\nexport class BreadcrumbsModule { }\r\n","import { Injectable, NgZone, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\r\nimport { BehaviorSubject, fromEvent, Subscription } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class ResizeService implements OnDestroy {\r\n\r\n    private _renderer: Renderer2;\r\n    private _subscription = new Subscription();\r\n\r\n    constructor(rendererFactory: RendererFactory2, private _ngZone: NgZone) {\r\n        this._renderer = rendererFactory.createRenderer(null, null);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    addResizeListener(nativeElement: HTMLElement): BehaviorSubject<ResizeDimensions> {\r\n\r\n        // create a behavior subject subject\r\n        const subject = new BehaviorSubject<ResizeDimensions>({ width: nativeElement.offsetWidth, height: nativeElement.offsetHeight });\r\n\r\n        // determine the style of the element\r\n        const displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\r\n\r\n        // create the iframe element\r\n        const iframe: HTMLIFrameElement = this._renderer.createElement('iframe');\r\n\r\n        // style the iframe to be invisible but fill containing element\r\n        this._renderer.setStyle(iframe, 'position', 'absolute');\r\n        this._renderer.setStyle(iframe, 'width', '100%');\r\n        this._renderer.setStyle(iframe, 'height', '100%');\r\n        this._renderer.setStyle(iframe, 'top', '0');\r\n        this._renderer.setStyle(iframe, 'right', '0');\r\n        this._renderer.setStyle(iframe, 'bottom', '0');\r\n        this._renderer.setStyle(iframe, 'left', '0');\r\n        this._renderer.setStyle(iframe, 'z-index', '-1');\r\n        this._renderer.setStyle(iframe, 'opacity', '0');\r\n        this._renderer.setStyle(iframe, 'border', 'none');\r\n        this._renderer.setStyle(iframe, 'margin', '0');\r\n        this._renderer.setStyle(iframe, 'pointer-events', 'none');\r\n        this._renderer.setStyle(iframe, 'overflow', 'hidden');\r\n\r\n        // ensure the iframe ignores any tabbing\r\n        this._renderer.setAttribute(iframe, 'tabindex', '-1');\r\n\r\n        // statically positioned elements need changed to relative for this method to work\r\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\r\n            this._renderer.setStyle(nativeElement, 'position', 'relative');\r\n        }\r\n\r\n        // add the iframe to the container element\r\n        this._renderer.appendChild(nativeElement, iframe);\r\n\r\n        this.waitUntilReady(iframe, () => {\r\n            const iframeDoc = iframe.contentDocument || iframe.contentWindow.document as Document;\r\n\r\n            const attachListener = () => {\r\n\r\n                // watch for any future resizes - run inside ngzone as an iframe event listener is not patched\r\n                this._subscription.add(fromEvent(iframe.contentWindow, 'resize').subscribe(() =>\r\n                    this._ngZone.run(() => subject.next({ width: nativeElement.offsetWidth, height: nativeElement.offsetHeight }))\r\n                ));\r\n            };\r\n\r\n            if (iframeDoc.readyState === 'complete') {\r\n                attachListener();\r\n            } else {\r\n\r\n                // wait for iframe to load\r\n                iframe.addEventListener('load', () => attachListener());\r\n            }\r\n        });\r\n\r\n\r\n        return subject;\r\n    }\r\n\r\n    private waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\r\n        if (iframe.contentDocument || iframe.contentWindow) {\r\n            callback.call(this);\r\n        } else {\r\n            setTimeout(() => this.waitUntilReady(iframe, callback));\r\n        }\r\n    }\r\n}\r\n\r\nexport interface ResizeDimensions {\r\n    width: number;\r\n    height: number;\r\n}","import { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { ResizeDimensions, ResizeService } from './resize.service';\r\n\r\n@Directive({\r\n    selector: '[uxResize]',\r\n    providers: [ResizeService]\r\n})\r\nexport class ResizeDirective implements OnInit, OnDestroy {\r\n\r\n    @Input() throttle: number = 0;\r\n    @Output() uxResize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _elementRef: ElementRef, private _resizeService: ResizeService, private _ngZone: NgZone) { }\r\n\r\n    ngOnInit(): void {\r\n        this._subscription = this._resizeService.addResizeListener(this._elementRef.nativeElement)\r\n            .pipe(debounceTime(this.throttle))\r\n            .subscribe((event: ResizeDimensions) => this._ngZone.run(() => this.uxResize.emit(event)));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { ResizeDirective } from './resize.directive';\r\nimport { ResizeService } from './resize.service';\r\n\r\n@NgModule({\r\n    exports: [ResizeDirective],\r\n    declarations: [ResizeDirective],\r\n    providers: [ResizeService]\r\n})\r\nexport class ResizeModule { }\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[uxCardTabContent]'\r\n})\r\nexport class CardTabContentDirective { }\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CardTabComponent } from './card-tab/card-tab.component';\r\n\r\n@Injectable()\r\nexport class CardTabsService implements OnDestroy {\r\n\r\n  tab$ = new BehaviorSubject<CardTabComponent>(null);\r\n  tabs$ = new BehaviorSubject<CardTabComponent[]>([]);\r\n  position$ = new BehaviorSubject<string>('top');\r\n\r\n  private _subscription: Subscription;\r\n\r\n  constructor() {\r\n\r\n    // when a tab is added or removed ensure we always select one if any are available\r\n    this._subscription = this.tabs$.pipe(\r\n      filter(tabs => !this.tab$.value || !tabs.find(tab => tab === this.tab$.value)),\r\n    ).subscribe(tabs => this.tab$.next(tabs.length > 0 ? tabs[0] : null));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Add a tab to the list of tabs\r\n   */\r\n  addTab(tab: CardTabComponent): void {\r\n    this.tabs$.next([...this.tabs$.value, tab]);\r\n  }\r\n\r\n  /**\r\n   * Remove a tab from the list\r\n   */\r\n  removeTab(tab: CardTabComponent): void {\r\n    this.tabs$.next(this.tabs$.value.filter(_tab => _tab !== tab));\r\n  }\r\n\r\n  /**\r\n   * Select the tab\r\n   */\r\n  select(tab: CardTabComponent): void {\r\n    this.tab$.next(tab);\r\n  }\r\n\r\n  /**\r\n   * Set the position of the tab content\r\n   */\r\n  setPosition(position: string): void {\r\n    this.position$.next(position);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ContentChild, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CardTabsService } from '../card-tabs.service';\r\nimport { CardTabContentDirective } from './card-tab-content.directive';\r\n\r\n@Component({\r\n  selector: 'ux-card-tab',\r\n  template: `<ng-content *ngIf=\"active$ | async\"></ng-content>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CardTabComponent implements OnDestroy {\r\n\r\n  active$: Observable<boolean> = this._tabService.tab$.pipe(map(tab => tab === this));\r\n  @ContentChild(CardTabContentDirective, { read: TemplateRef }) content: TemplateRef<any>;\r\n\r\n  constructor(private _tabService: CardTabsService) {\r\n    this._tabService.addTab(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._tabService.removeTab(this);\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\r\nimport { ResizeDimensions } from '../../../directives/resize';\r\nimport { CardTabComponent } from '../card-tab/card-tab.component';\r\nimport { CardTabsService } from '../card-tabs.service';\r\n\r\n@Component({\r\n  selector: 'ux-card-tabset',\r\n  template: `<div class=\"card-tab-content\" role=\"tabpanel\" *ngIf=\"(tabService.tab$ | async)\">\r\n    <ng-content></ng-content>\r\n</div>\r\n\r\n<div class=\"card-tabs\" #tabs>\r\n\r\n    <button class=\"card-tabs-paging-btn card-tabs-paging-btn-previous\" aria-label=\"Previous Tabs\" (click)=\"previous()\" *ngIf=\"offset < bounds.lower\">\r\n        <i class=\"hpe-icon hpe-previous\"></i>\r\n    </button>\r\n\r\n    <div class=\"card-tabs-list\" role=\"tablist\" #tablist (uxResize)=\"resize($event)\" [style.transform]=\"'translateX(' + offset + 'px)'\">\r\n\r\n        <div class=\"card-tab\"\r\n            role=\"tab\"\r\n            tabindex=\"0\" #card\r\n            *ngFor=\"let tab of tabService.tabs$ | async\"\r\n            [ngClass]=\"tabService.position$ | async\"\r\n            [class.active]=\"tab.active$ | async\"\r\n            [attr.aria-selected]=\"tab.active$ | async\"\r\n            (click)=\"select(tab, card)\"\r\n            (focus)=\"tabs.scrollLeft = 0\"\r\n            (keydown.enter)=\"select(tab, card)\">\r\n\r\n            <ng-container [ngTemplateOutlet]=\"tab.content\"></ng-container>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <button class=\"card-tabs-paging-btn card-tabs-paging-btn-next\" aria-label=\"Next Tabs\" (click)=\"next()\" *ngIf=\"offset > bounds.upper\">\r\n        <i class=\"hpe-icon hpe-next\"></i>\r\n    </button>\r\n</div>`,\r\n  providers: [CardTabsService]\r\n})\r\nexport class CardTabsetComponent {\r\n\r\n  @HostBinding('class')\r\n  @Input() set position(direction: string) {\r\n    this.tabService.setPosition(direction);\r\n  }\r\n\r\n  get position(): string {\r\n    return this.tabService.position$.getValue();\r\n  }\r\n\r\n  @ViewChild('tablist') tablist: ElementRef;\r\n\r\n  offset: number = 0;\r\n  bounds: CardTabsBounds = { lower: 0, upper: 0 };\r\n\r\n  private _width: number;\r\n  private _innerWidth: number;\r\n\r\n  constructor(public tabService: CardTabsService) {}\r\n\r\n  select(tab: CardTabComponent, element: HTMLElement): void {\r\n    // select the tab\r\n    this.tabService.select(tab);\r\n\r\n    // ensure the tab is moved into view if required\r\n    this.moveIntoView(element);\r\n  }\r\n\r\n  resize(dimensions: ResizeDimensions): void {\r\n    this._width = dimensions.width;\r\n    this._innerWidth = this.tablist.nativeElement.scrollWidth;\r\n\r\n    this.bounds.lower = 0;\r\n    this.bounds.upper = -(this._innerWidth - this._width);\r\n  }\r\n\r\n  previous(): void {\r\n    this.offset += this._width;\r\n\r\n    // ensure it remains within the allowed bounds\r\n    this.offset = Math.min(this.offset, this.bounds.lower);\r\n  }\r\n\r\n  next(): void {\r\n    this.offset -= this._width;\r\n\r\n    // ensure it remains within the allowed bounds\r\n    this.offset = Math.max(this.offset, this.bounds.upper);\r\n  }\r\n\r\n  private moveIntoView(element: HTMLElement): void {\r\n\r\n    // if we dont have the dimensions we cant check\r\n    if (!this._width || !this._innerWidth) {\r\n      return;\r\n    }\r\n\r\n    // get the current element bounds\r\n    const { offsetLeft, offsetWidth } = element;\r\n    const { marginLeft, marginRight } = getComputedStyle(element);\r\n\r\n    // calculate the visible area\r\n    const viewportStart = Math.abs(this.offset);\r\n    const viewportEnd = viewportStart + this._width;\r\n    const cardWidth = parseFloat(marginLeft) + offsetWidth + parseFloat(marginRight);\r\n\r\n    // if we need to move to the left - figure out how much\r\n    if (offsetLeft < viewportStart) {\r\n      this.offset -= (offsetLeft - parseFloat(marginLeft)) - viewportStart;\r\n    }\r\n    \r\n    // if we need to move to the right - figure out how much\r\n    if ((offsetLeft + cardWidth) > viewportEnd) {\r\n      this.offset -= (offsetLeft + cardWidth) - viewportEnd;\r\n    }\r\n  }\r\n}\r\n\r\nexport interface CardTabsBounds {\r\n  lower: number;\r\n  upper: number;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ResizeModule } from '../../directives/resize/index';\r\nimport { CardTabContentDirective } from './card-tab/card-tab-content.directive';\r\nimport { CardTabComponent } from './card-tab/card-tab.component';\r\nimport { CardTabsetComponent } from './card-tabset/card-tabset.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ResizeModule\r\n  ],\r\n  declarations: [CardTabsetComponent, CardTabComponent, CardTabContentDirective],\r\n  exports: [CardTabsetComponent, CardTabComponent, CardTabContentDirective]\r\n})\r\nexport class CardTabsModule { }\r\n","import { Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => CheckboxComponent),\r\n    multi: true\r\n};\r\n\r\nlet uniqueCheckboxId = 0;\r\n\r\n@Component({\r\n    selector: 'ux-checkbox',\r\n    template: `<label [attr.for]=\"inputId\"\r\n       class=\"ux-checkbox\"\r\n       [class.ux-checkbox-checked]=\"value === true\"\r\n       [class.ux-checkbox-indeterminate]=\"indeterminate\"\r\n       [class.ux-checkbox-simplified]=\"simplified\"\r\n       [class.ux-checkbox-disabled]=\"disabled\"\r\n       [class.ux-checkbox-focused]=\"focused\">\r\n\r\n    <div class=\"ux-checkbox-container\">\r\n        <input type=\"checkbox\"\r\n               class=\"ux-checkbox-input\"\r\n               [id]=\"inputId\"\r\n               [required]=\"required\"\r\n               [checked]=\"value\"\r\n               [attr.value]=\"value\"\r\n               [disabled]=\"disabled\"\r\n               [attr.name]=\"name\"\r\n               [tabindex]=\"tabindex\"\r\n               [indeterminate]=\"indeterminate\"\r\n               [attr.aria-label]=\"ariaLabel\"\r\n               [attr.aria-labelledby]=\"ariaLabelledby\"\r\n               [attr.aria-checked]=\"ariaChecked\"\r\n               (focus)=\"focused = true\"\r\n               (blur)=\"focused = false\"\r\n               (change)=\"$event.stopPropagation()\"\r\n               (click)=\"toggle()\">\r\n    </div>\r\n\r\n    <span class=\"ux-checkbox-label\">\r\n        <ng-content></ng-content>\r\n    </span>\r\n</label>\r\n`,\r\n    providers: [CHECKBOX_VALUE_ACCESSOR]\r\n})\r\nexport class CheckboxComponent implements ControlValueAccessor {\r\n\r\n    private _checkboxId: string = `ux-checkbox-${++uniqueCheckboxId}`;\r\n\r\n    @Input() id: string = this._checkboxId;\r\n    @Input() name: string | null;\r\n    @Input() required: boolean;\r\n    @Input() tabindex: number = 0;\r\n    @Input() clickable: boolean = true;\r\n    @Input() simplified: boolean = false;\r\n    @Input() indeterminateValue: any = -1;\r\n    @Input() disabled: boolean = false;\r\n    @Input('aria-label') ariaLabel: string = '';\r\n    @Input('aria-labelledby') ariaLabelledby: string = null;\r\n\r\n    @Output() valueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: any) {\r\n        this._value = value;\r\n\r\n        // determine if it is in the indeterminate state\r\n        this.indeterminate = this._value === this.indeterminateValue;\r\n\r\n        // determine the checked state\r\n        this.ariaChecked = this.indeterminate ? 'mixed' : this._value;\r\n\r\n        // invoke change event\r\n        this.valueChange.emit(this._value);\r\n\r\n        // call callback\r\n        this.onChangeCallback(this._value);\r\n        this.onTouchedCallback();\r\n    }\r\n\r\n    get inputId(): string { \r\n        return `${this.id || this._checkboxId}-input`;\r\n    }\r\n\r\n    private _value: any = false;\r\n\r\n    indeterminate: boolean = false;\r\n    ariaChecked: boolean | string;\r\n    focused: boolean = false;\r\n\r\n    onTouchedCallback: () => void = () => { };\r\n    onChangeCallback: (_: any) => void = () => { };\r\n\r\n    toggle(): void {\r\n\r\n        if (this.disabled || !this.clickable) {\r\n            return;\r\n        }\r\n\r\n        if (this.value === this.indeterminateValue) {\r\n            this.value = true;\r\n            return;\r\n        }\r\n\r\n        // toggle the checked state\r\n        this.value = !this.value;\r\n    }\r\n\r\n    // Functions required to update ngModel\r\n\r\n    writeValue(value: any): void {\r\n        if (value !== this._value) {\r\n            this._value = value;\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport { CheckboxComponent } from './checkbox.component';\r\n\r\n@NgModule({\r\n    imports: [FormsModule],\r\n    exports: [CheckboxComponent],\r\n    declarations: [CheckboxComponent]\r\n})\r\nexport class CheckboxModule { }\r\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-column-sorting',\r\n    template: `<div class=\"ux-column-sorting\">\r\n    <i class=\"ux-column-sorting-icon hpe-icon\" \r\n        [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \r\n        [class.hpe-descend]=\"state === columnSortingState.Descending\" \r\n        [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\r\n    <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\r\n</div>`,\r\n    exportAs: 'ux-column-sorting'\r\n})\r\nexport class ColumnSortingComponent {\r\n\r\n    @Input() state: ColumnSortingState;\r\n    @Input() key: string;\r\n    @Input() orderNumber: number;\r\n    @Output() stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\r\n\r\n    private _parent: ColumnSortingDirective;\r\n    columnSortingState = ColumnSortingState;\r\n\r\n    initParent(parent: ColumnSortingDirective) {\r\n        this._parent = parent;\r\n\r\n        // watch for any events\r\n        this._parent.events.subscribe(event => {\r\n\r\n            let idx = event.findIndex(column => column.key === this.key);\r\n\r\n            if (idx == -1) {\r\n                this.state = ColumnSortingState.NoSort;\r\n            }\r\n\r\n            // only store the number if we have 2 or more columns being sorted\r\n            if (event.length > 1) {\r\n                this.orderNumber = idx === -1 ? null : idx + 1;\r\n            } else {\r\n                this.orderNumber = null;\r\n            }\r\n\r\n            this.stateChange.emit(this.state);\r\n\r\n        });\r\n    }\r\n\r\n    changeState(): ColumnSortingOrder[] {\r\n\r\n        if (this.state === ColumnSortingState.Ascending) {\r\n            this.state = ColumnSortingState.Descending;\r\n        } else if (this.state === ColumnSortingState.Descending) {\r\n            this.state = ColumnSortingState.NoSort;\r\n        } else {\r\n            this.state = ColumnSortingState.Ascending;\r\n        }\r\n\r\n        // inform parent\r\n        return this._parent.toggleColumn(this.key, this.state);\r\n\r\n    }\r\n}\r\n\r\nexport enum ColumnSortingState {\r\n    Ascending,\r\n    Descending,\r\n    NoSort\r\n}","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\r\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[uxColumnSorting]'\r\n})\r\nexport class ColumnSortingDirective {\r\n\r\n    @Input() singleSort: boolean;\r\n    @ContentChildren(ColumnSortingComponent) components: QueryList<ColumnSortingComponent>;\r\n\r\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\r\n    order: ColumnSortingOrder[] = [];\r\n\r\n    ngAfterViewInit() {\r\n        this.components.forEach(component => component.initParent(this));\r\n    }\r\n\r\n    toggleColumn(key: string, state: ColumnSortingState) {\r\n\r\n        if (this.singleSort) {\r\n            if (state === ColumnSortingState.NoSort) {\r\n                this.order = [];\r\n            } else {\r\n                this.order = [{key: key, state: state}];\r\n            }\r\n        } else {\r\n            // reorder columns here\r\n            let idx = this.order.findIndex(column => column.key === key);\r\n\r\n            // if wasnt previously selected add to list\r\n            if (idx === -1) {\r\n                this.order.push({ key: key, state: state});\r\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\r\n                this.order.splice(idx, 1);\r\n                this.order.push({ key: key, state: state});\r\n            } else {\r\n                this.order.splice(idx, 1);\r\n            }\r\n        }\r\n\r\n            this.events.next(this.order);\r\n            // return the order\r\n            return this.order;\r\n\r\n    }\r\n}\r\n\r\nexport interface ColumnSortingOrder {\r\n    key: string;\r\n    state: ColumnSortingState; \r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { ColumnSortingComponent } from './column-sorting.component';\r\n\r\nimport { ColumnSortingDirective } from './column-sorting.directive';\r\n\r\n@NgModule({\r\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\r\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\r\n})\r\nexport class ColumnSortingModule { }","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject ,  Observable ,  Subject } from 'rxjs';\r\nimport { delay, distinctUntilChanged, filter, map } from 'rxjs/operators';\r\nimport { DashboardOptions } from './dashboard.component';\r\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\r\n\r\n@Injectable()\r\nexport class DashboardService {\r\n\r\n    private _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\r\n    private _actionWidget: DashboardAction;\r\n    private _rowHeight: number = 0;\r\n    private _cache: DashboardCache[];\r\n    private _mouseEvent: MouseEvent;\r\n\r\n    widgets$ = new BehaviorSubject<DashboardWidgetComponent[]>([]);\r\n    options$ = new BehaviorSubject<DashboardOptions>(defaultOptions);\r\n    dimensions$ = new BehaviorSubject<DashboardDimensions>({});\r\n    height$: Observable<number> = this.dimensions$.pipe(delay(0), map((dimensions: DashboardDimensions) => dimensions.height), distinctUntilChanged());\r\n    placeholder$ = new BehaviorSubject<DashboardPlaceholder>({ visible: false, x: 0, y: 0, width: 0, height: 0 });\r\n    layout$ = new Subject<DashboardLayoutData[]>();\r\n    stacked$ = new BehaviorSubject<boolean>(false);\r\n\r\n    get options() {\r\n        return this.options$.getValue();\r\n    }\r\n\r\n    get widgets() {\r\n        return this.widgets$.getValue();\r\n    }\r\n\r\n    get stacked() {\r\n        return this.stacked$.getValue();\r\n    }\r\n\r\n    get dimensions() {\r\n        return this.dimensions$.getValue();\r\n    }\r\n\r\n    get columnWidth() {\r\n        return this.dimensions.width / this.options.columns;\r\n    }\r\n\r\n    constructor() {\r\n        this.layout$.subscribe(this.setLayoutData.bind(this));\r\n        this.stacked$.pipe(filter(stacked => stacked === true)).subscribe(this.updateWhenStacked.bind(this));\r\n        this.widgets$.pipe(delay(0)).subscribe(() => this.renderDashboard());\r\n        this.dimensions$.pipe(delay(0)).subscribe(() => this.renderDashboard());\r\n    }\r\n\r\n    /**\r\n     * Add a widget to the dashboard\r\n     * @param widget The widget component to add to the dashboard\r\n     */\r\n    addWidget(widget: DashboardWidgetComponent): void {\r\n        this.widgets$.next([...this.widgets$.getValue(), widget]);\r\n    }\r\n\r\n    /**\r\n     * Remove a widget from the dashboard\r\n     * @param widget The widget to remove\r\n     */\r\n    removeWidget(widget: DashboardWidgetComponent): void {\r\n        this.widgets$.next(this.widgets$.getValue().filter(_widget => _widget !== widget));\r\n    }\r\n\r\n    /**\r\n     * Indicate that the dashboard element has been resized\r\n     * @param width The width of the dashboard element in px\r\n     * @param height The height of the dashboard element in px\r\n     */\r\n    setDimensions(width: number = this.dimensions.width, height: number = this.dimensions.height): void {\r\n        if (this.dimensions.width !== width || this.dimensions.height !== height) {\r\n            this.dimensions$.next({ width: width, height: height });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Produce an object containing all the required layout data.\r\n     * This can be useful for exporting/saving a layout\r\n     */\r\n    getLayoutData(): DashboardLayoutData[] {\r\n        return this.widgets.map(widget => {\r\n            return { id: widget.id, col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Position widgets programatically\r\n     */\r\n    setLayoutData(widgets: DashboardLayoutData[]): void {\r\n\r\n        // iterate through each widget data and find a match\r\n        widgets.forEach(widget => {\r\n\r\n            // find the matching widget\r\n            const target = this.widgets.find(_widget => _widget.id === widget.id);\r\n\r\n            if (target) {\r\n                target.setColumn(widget.col);\r\n                target.setRow(widget.row);\r\n                target.setColumnSpan(widget.colSpan);\r\n                target.setRowSpan(widget.rowSpan);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update the positions and sizes of the widgets\r\n     */\r\n    renderDashboard(): void {\r\n\r\n        // get the dimensions of the dashboard\r\n        this._rowHeight = this.options.rowHeight || this.columnWidth;\r\n\r\n        // ensure the column width is not below the min widths\r\n        this.stacked$.next(this.columnWidth < this.options.minWidth);\r\n\r\n        // ensure the row height is not below the min widths\r\n        if (this._rowHeight < this.options.minWidth) {\r\n            this._rowHeight = this.options.minWidth;\r\n        }\r\n\r\n        this.setDashboardLayout();\r\n\r\n        // iterate through each widget and set the size - except the one being resized\r\n        this.widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\r\n            .forEach(widget => widget.render());\r\n    }\r\n\r\n    /**\r\n     * Determine where widgets should be positioned based on their positions, width and the size of the container\r\n     */\r\n    setDashboardLayout(): void {\r\n\r\n        // find any widgets that do not currently have a position set\r\n        this.widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\r\n            .forEach(widget => this.setWidgetPosition(widget));\r\n\r\n        this.setDashboardHeight();\r\n    }\r\n\r\n    updateWhenStacked(): void {\r\n\r\n        // iterate through each widget set it's stacked state and\r\n        this.getWidgetsByOrder().forEach((widget, idx) => {\r\n            widget.setColumn(0);\r\n            widget.setRow(idx);\r\n        });\r\n\r\n    }\r\n\r\n    getWidgetsByOrder(): DashboardWidgetComponent[] {\r\n        return this.widgets.sort((w1, w2) => {\r\n\r\n            const w1Position = w1.getColumn() * w1.getRow();\r\n            const w2Position = w2.getColumn() * w2.getRow();\r\n\r\n            if (w1Position < w2Position) {\r\n                return -1;\r\n            }\r\n\r\n            if (w1Position > w2Position) {\r\n                return 1;\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Find a position that a widget can fit in the dashboard\r\n     * @param widget The widget to try and position\r\n     */\r\n    setWidgetPosition(widget: DashboardWidgetComponent): void {\r\n\r\n        // find a position for the widget\r\n        let position = 0;\r\n        let success = false;\r\n\r\n        // repeat until a space is found\r\n        while (!success) {\r\n\r\n            // get a position to try\r\n            const column = position % this.options.columns;\r\n            const row = Math.floor(position / this.options.columns);\r\n\r\n            // check the current position\r\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\r\n                success = true;\r\n                widget.setColumn(column);\r\n                widget.setRow(row);\r\n                return;\r\n            }\r\n\r\n            if (column === 0 && widget.colSpan > this.options.columns) {\r\n                throw new Error('Dashboard widgets have a colSpan greater than the max number of dashboard columns!');\r\n            }\r\n\r\n            position++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if a position in the dashboard is vacant or not\r\n     */\r\n    getPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\r\n\r\n        // get a list of grid spaces that are populated\r\n        const spaces = this.getOccupiedSpaces();\r\n\r\n        // check if the block would still be in bounds\r\n        if (column + columnSpan > this.options.columns) {\r\n            return false;\r\n        }\r\n\r\n        // check each required position\r\n        for (let x = column; x < column + columnSpan; x++) {\r\n            for (let y = row; y < row + rowSpan; y++) {\r\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getOccupiedSpaces(): DashboardSpace[] {\r\n\r\n        // find all spaces that are currently occupied\r\n        return this.widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\r\n            .reduce((value, widget) => {\r\n\r\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\r\n\r\n                return value;\r\n            }, []);\r\n    }\r\n\r\n    /**\r\n     * Begin resizing a widget\r\n     * @param action The the widget to resize\r\n     */\r\n    onResizeStart(action: DashboardAction): void {\r\n\r\n        // store the mouse event\r\n        this._mouseEvent = action.event;\r\n        this._actionWidget = action;\r\n\r\n        // bring the widget to the font\r\n        this.bringToFront(action.widget);\r\n    }\r\n\r\n    onResizeDrag(action: DashboardAction): void {\r\n\r\n        const mousePosX = this._mouseEvent.pageX - pageXOffset;\r\n        const mousePosY = this._mouseEvent.pageY - pageYOffset;\r\n\r\n        // if there was no movement then do nothing\r\n        if (action.event.x === mousePosX && action.event.y === mousePosY) {\r\n            return;\r\n        }\r\n\r\n        // update the stored mouse event\r\n        this._mouseEvent = action.event;\r\n\r\n        // get handle for direction\r\n        const { handle } = action;\r\n\r\n        // get the bounds of the handle\r\n        const bounds = handle.getBoundingClientRect();\r\n\r\n        // get the center of the handle\r\n        const centerX = bounds.left + (bounds.width / 2);\r\n        const centerY = bounds.top + (bounds.height / 2);\r\n\r\n        // get the current mouse position\r\n        const mouseX = mousePosX - centerX;\r\n        const mouseY = mousePosY - centerY;\r\n\r\n        // store the new proposed dimensions for the widget\r\n        const dimensions: DashboardWidgetDimensions = {\r\n            x: action.widget.x,\r\n            y: action.widget.y,\r\n            width: action.widget.width,\r\n            height: action.widget.height\r\n        };\r\n\r\n        // update widget based on the handle being dragged\r\n        switch (action.direction) {\r\n\r\n            case ActionDirection.Right:\r\n                dimensions.width += mouseX;\r\n                break;\r\n\r\n            case ActionDirection.Left:\r\n                dimensions.x += mouseX;\r\n                dimensions.width -= mouseX;\r\n\r\n                if (dimensions.width < this.options.minWidth) {\r\n                    const difference = this.options.minWidth - dimensions.width;\r\n                    dimensions.x -= difference;\r\n                    dimensions.width += difference;\r\n                }\r\n\r\n                break;\r\n\r\n            case ActionDirection.Bottom:\r\n                dimensions.height += mouseY;\r\n                break;\r\n\r\n            case ActionDirection.Top:\r\n                dimensions.y += mouseY;\r\n                dimensions.height -= mouseY;\r\n\r\n                if (dimensions.height < this.options.minHeight) {\r\n                    const difference = this.options.minHeight - dimensions.height;\r\n                    dimensions.y -= difference;\r\n                    dimensions.height += difference;\r\n                }\r\n                break;\r\n\r\n            // Support resizing on multiple axis simultaneously\r\n            case ActionDirection.TopLeft:\r\n\r\n                dimensions.x += mouseX;\r\n                dimensions.width -= mouseX;\r\n\r\n                if (dimensions.width < this.options.minWidth) {\r\n                    const difference = this.options.minWidth - dimensions.width;\r\n                    dimensions.x -= difference;\r\n                    dimensions.width += difference;\r\n                }\r\n\r\n                dimensions.y += mouseY;\r\n                dimensions.height -= mouseY;\r\n\r\n                if (dimensions.height < this.options.minHeight) {\r\n                    const difference = this.options.minHeight - dimensions.height;\r\n                    dimensions.y -= difference;\r\n                    dimensions.height += difference;\r\n                }\r\n                break;\r\n\r\n            case ActionDirection.TopRight:\r\n                dimensions.width += mouseX;\r\n                dimensions.y += mouseY;\r\n                dimensions.height -= mouseY;\r\n\r\n                if (dimensions.height < this.options.minHeight) {\r\n                    const difference = this.options.minHeight - dimensions.height;\r\n                    dimensions.y -= difference;\r\n                    dimensions.height += difference;\r\n                }\r\n                break;\r\n\r\n            case ActionDirection.BottomLeft:\r\n                dimensions.height += mouseY;\r\n                dimensions.x += mouseX;\r\n                dimensions.width -= mouseX;\r\n\r\n                if (dimensions.width < this.options.minWidth) {\r\n                    const difference = this.options.minWidth - dimensions.width;\r\n                    dimensions.x -= difference;\r\n                    dimensions.width += difference;\r\n                }\r\n                break;\r\n\r\n            case ActionDirection.BottomRight:\r\n                dimensions.height += mouseY;\r\n                dimensions.width += mouseX;\r\n                break;\r\n        }\r\n\r\n        const currentWidth = action.widget.x + action.widget.width;\r\n        const currentHeight = action.widget.y + action.widget.height;\r\n\r\n        // ensure values are within the dashboard bounds\r\n        if (dimensions.x < 0) {\r\n            dimensions.x = 0;\r\n            dimensions.width = currentWidth;\r\n        }\r\n\r\n        if (dimensions.y < 0) {\r\n            dimensions.y = 0;\r\n            dimensions.height = currentHeight;\r\n        }\r\n\r\n        if ((dimensions.x + dimensions.width) > this.dimensions.width) {\r\n            dimensions.width = this.dimensions.width - dimensions.x;\r\n        }\r\n\r\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\r\n        if (dimensions.width < this.options.minWidth) {\r\n            dimensions.x = action.widget.x;\r\n            dimensions.width = this.options.minWidth;\r\n        }\r\n\r\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\r\n        if (dimensions.height < this.options.minHeight) {\r\n            dimensions.y = action.widget.y;\r\n            dimensions.height = this.options.minHeight;\r\n        }\r\n\r\n        // update the widget actual values\r\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\r\n\r\n        // update placeholder position and value\r\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\r\n\r\n        // show the widget positions if the current positions and sizes were to persist\r\n        this.updateWidgetPositions(action.widget);\r\n    }\r\n\r\n    onResizeEnd(): void {\r\n\r\n        const placeholder = this.placeholder$.getValue();\r\n\r\n        // commit resize changes\r\n        this.commitWidgetChanges();\r\n\r\n        // hide placeholder\r\n        placeholder.visible = false;\r\n\r\n        // update the placeholder\r\n        this.placeholder$.next(placeholder);\r\n\r\n        this._actionWidget = null;\r\n        this._mouseEvent = null;\r\n\r\n        // ensure any vacant upper spaces are filled where required\r\n        this.shiftWidgetsUp();\r\n\r\n        // update dashboard height\r\n        this.setDashboardHeight();\r\n\r\n        // emit information about the layout\r\n        this.layout$.next(this.getLayoutData());\r\n    }\r\n\r\n    onDragStart(action: DashboardAction): void {\r\n        this.onResizeStart(action);\r\n\r\n        // store the starting placeholder position\r\n        this.setWidgetOrigin();\r\n\r\n        this.cacheWidgets();\r\n    }\r\n\r\n    onDragEnd(): void {\r\n        this.onResizeEnd();\r\n\r\n        this._widgetOrigin = {};\r\n    }\r\n\r\n    onDrag(action: DashboardAction): void {\r\n\r\n        // if there was no movement then do nothing\r\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\r\n            return;\r\n        }\r\n\r\n        // get the current mouse position\r\n        const mouseX = action.event.pageX - this._mouseEvent.pageX;\r\n        const mouseY = action.event.pageY - this._mouseEvent.pageY;\r\n\r\n        // store the latest event\r\n        this._mouseEvent = action.event;\r\n\r\n        const dimensions: DashboardWidgetDimensions = {\r\n            x: action.widget.x + mouseX,\r\n            y: action.widget.y + mouseY,\r\n            width: action.widget.width,\r\n            height: action.widget.height\r\n        };\r\n\r\n        this.restoreWidgets(true);\r\n\r\n        // update widget position\r\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\r\n\r\n        // update placeholder position and value\r\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\r\n\r\n        // show the widget positions if the current positions and sizes were to persist\r\n        this.shiftWidgets();\r\n\r\n        this.setDashboardHeight();\r\n    }\r\n\r\n    getRowHeight(): number {\r\n        return this._rowHeight;\r\n    }\r\n\r\n    cacheWidgets(): void {\r\n        this._cache = this.widgets.map(widget => ({ id: widget.id, column: widget.getColumn(), row: widget.getRow() }));\r\n    }\r\n\r\n    restoreWidgets(ignoreActionWidget: boolean = false): void {\r\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.id).forEach(widget => {\r\n\r\n            const match = this.widgets.find(wgt => wgt.id === widget.id);\r\n\r\n            if (match) {\r\n                match.setColumn(widget.column);\r\n                match.setRow(widget.row);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * When dragging any widgets that need to be moved should be moved to an appropriate position\r\n     */\r\n    shiftWidgets(): void {\r\n\r\n        let widgetsToMove: DashboardWidgetComponent[] = [];\r\n\r\n        const placeholder = this.placeholder$.getValue();\r\n\r\n        // check if there are any widgets under the placeholder\r\n        for (let row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\r\n            for (let column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\r\n\r\n                // store reference to any widgets that need moved\r\n                this.getOccupiedSpaces()\r\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\r\n                    .forEach(space => widgetsToMove.push(space.widget));\r\n            }\r\n        }\r\n\r\n        // remove any duplicates\r\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\r\n\r\n        // if no widgets need moved then we can stop here\r\n        if (widgetsToMove.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // create a duplicate we can use to keep track of which have been moved\r\n        const unmovedWidgets = widgetsToMove.slice();\r\n\r\n        // attempt to move any widgets to the previous widget position\r\n        widgetsToMove.forEach(widget => {\r\n\r\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\r\n            const grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\r\n\r\n            // iterate each free block\r\n            for (let row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\r\n                for (let column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\r\n\r\n                    // determine if the block can fit in this space\r\n                    let requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\r\n\r\n                    // check if widget would fit in space\r\n                    let available = requiredSpaces.every(space => {\r\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\r\n                    });\r\n\r\n                    if (available) {\r\n                        widget.setColumn(column);\r\n                        widget.setRow(row);\r\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // if we get to here then we can't simply swap the positions - next try moving right\r\n            if (this.canWidgetMoveRight(widget, true)) {\r\n\r\n                // after the shift check if placeholder position is still valid\r\n                this.validatePlaceholderPosition(ActionDirection.Right);\r\n                return;\r\n            }\r\n\r\n            // next try moving left\r\n            if (this.canWidgetMoveLeft(widget, true)) {\r\n\r\n                // after the shift check if placeholder position is still valid\r\n                this.validatePlaceholderPosition(ActionDirection.Left);\r\n                return;\r\n            }\r\n\r\n            // determine the distance that the widget needs to be moved down\r\n            let distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\r\n\r\n            // as a last resort move the widget downwards\r\n            this.moveWidgetDown(widget, distance);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * After shifts have taken place we should verify the place holder position is still valid\r\n     * @param shiftDirection - the position widgets were shifted\r\n     */\r\n    validatePlaceholderPosition(shiftDirection: ActionDirection) {\r\n\r\n        const placeholder = this.placeholder$.getValue();\r\n\r\n        // check if the placeholder is over a widget\r\n        if (this.getWidgetsAtPosition(placeholder.column, placeholder.row, true).length > 0) {\r\n\r\n            // move the placeholder the opposite direction\r\n            switch (shiftDirection) {\r\n\r\n                case ActionDirection.Left:\r\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x + this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\r\n                    break;\r\n\r\n                case ActionDirection.Right:\r\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x - this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\r\n                    break;\r\n            }\r\n\r\n            // validate this new position again\r\n            this.validatePlaceholderPosition(shiftDirection);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\r\n     */\r\n    canWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\r\n\r\n        // check if the widget is the action widget or occupies the first column\r\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\r\n            return false;\r\n        }\r\n\r\n        // find the positions required\r\n        const targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\r\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\r\n        });\r\n\r\n        // check if there are widget in the required positions and if so, can they move right?\r\n        const moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\r\n\r\n        if (performMove && moveable) {\r\n\r\n            // move all widgets to the right\r\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\r\n\r\n            // move current widget to the right\r\n            widget.setColumn(widget.getColumn() - 1);\r\n        }\r\n\r\n        return moveable;\r\n    }\r\n\r\n    /**\r\n     * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\r\n     */\r\n    canWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\r\n\r\n        // check if the widget is the dragging widget or the widget occupies the final column\r\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this.options.columns) {\r\n            return false;\r\n        }\r\n\r\n        // find the positions required\r\n        const targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\r\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\r\n        });\r\n\r\n        // check if there are widget in the required positions and if so, can they move right?\r\n        const moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\r\n\r\n        if (performMove && moveable) {\r\n\r\n            // move all widgets to the right\r\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\r\n\r\n            // move current widget to the right\r\n            widget.setColumn(widget.getColumn() + 1);\r\n        }\r\n\r\n        return moveable;\r\n    }\r\n\r\n    /**\r\n     * Store the initial position of the widget being dragged\r\n     */\r\n    setWidgetOrigin(): void {\r\n        this._widgetOrigin = {\r\n            column: this._actionWidget.widget.getColumn(),\r\n            row: this._actionWidget.widget.getRow(),\r\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\r\n            rowSpan: this._actionWidget.widget.getRowSpan()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Calculate all the required positions is a widget was to be positioned at a particular point\r\n     */\r\n    getRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\r\n        const spaces: DashboardSpace[] = [];\r\n\r\n        for (let y = row; y < row + widget.getRowSpan(); y++) {\r\n            for (let x = column; x < column + widget.getColumnSpan(); x++) {\r\n                spaces.push({ column: x, row: y, widget: widget });\r\n            }\r\n        }\r\n\r\n        return spaces;\r\n    }\r\n\r\n    /**\r\n     * Position widgets based on the position of the placeholder - this is temporary until confirmed\r\n     */\r\n    updateWidgetPositions(widget: DashboardWidgetComponent) {\r\n\r\n        const placeholder = this.placeholder$.getValue();\r\n\r\n        // check all spaces the placeholder will occupy and move any widget currently in them down\r\n        for (let column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\r\n            for (let row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\r\n\r\n                this.getWidgetsAtPosition(column, row, true)\r\n                    .filter(wgt => wgt !== widget)\r\n                    .forEach(wgt => this.moveWidgetDown(wgt));\r\n            }\r\n        }\r\n\r\n        // update the height of the dashboard\r\n        this.setDashboardHeight();\r\n\r\n        // if we arent dragging the top handle then fill spaces\r\n        if (this._actionWidget.direction !== ActionDirection.Top &&\r\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\r\n            this._actionWidget.direction !== ActionDirection.TopRight) {\r\n            this.shiftWidgetsUp();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determine if a widget is occupying a specific row and column\r\n     * @param column The columns to check if occupied\r\n     * @param row The row to check if occupied\r\n     * @param ignoreResizing Whether or not to ignore the widget currently being resized\r\n     */\r\n    getWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\r\n        return this.getOccupiedSpaces()\r\n            .filter(space => space.column === column && space.row === row)\r\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\r\n            .map(space => space.widget);\r\n    }\r\n\r\n    /**\r\n     * Update the placeholder visibility, position and size\r\n     */\r\n    setPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\r\n\r\n        const placeholder = this.placeholder$.getValue();\r\n\r\n        const rounding = this._actionWidget.direction === ActionDirection.Left ||\r\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\r\n\r\n        placeholder.visible = visible;\r\n\r\n        placeholder.column = this.getPlaceholderColumn(x, width);\r\n        placeholder.row = this.getPlaceholderRow(y, height);\r\n        placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\r\n        placeholder.rowSpan = this.getPlaceholderRowSpan(height);\r\n\r\n        // calculate the maximum number of rows\r\n        const rowCount = this.widgets.filter(widget => widget !== this._actionWidget.widget)\r\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\r\n\r\n        // constrain maximum placeholder row\r\n        placeholder.row = Math.min(placeholder.row, rowCount);\r\n\r\n        placeholder.x = (placeholder.column * this.getColumnWidth()) + this.options.padding;\r\n        placeholder.y = (placeholder.row * this._rowHeight) + this.options.padding;\r\n        placeholder.width = (placeholder.columnSpan * this.getColumnWidth()) - (this.options.padding * 2);\r\n        placeholder.height = (placeholder.rowSpan * this._rowHeight) - (this.options.padding * 2);\r\n\r\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\r\n        this._actionWidget.widget.setColumn(placeholder.column, false);\r\n        this._actionWidget.widget.setRow(placeholder.row, false);\r\n        this._actionWidget.widget.setColumnSpan(placeholder.columnSpan, false);\r\n        this._actionWidget.widget.setRowSpan(placeholder.rowSpan, false);\r\n\r\n        // update the placeholder\r\n        this.placeholder$.next(placeholder);\r\n    }\r\n\r\n    /**\r\n     * Get the placeholder column position\r\n     */\r\n    getPlaceholderColumn(x: number, width: number): number {\r\n\r\n        const column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\r\n        const columnSpan = Math.floor(width / this.getColumnWidth());\r\n        const upperLimit = this.getColumnCount() - columnSpan;\r\n\r\n        // if we arent dragging left then just return the column\r\n        if (this._actionWidget.direction !== ActionDirection.Left &&\r\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\r\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\r\n            return Math.max(Math.min(column, upperLimit), 0);\r\n        }\r\n\r\n        // get any overflow\r\n        const overflow = width % this.getColumnWidth();\r\n\r\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\r\n            Math.max(Math.min(column, upperLimit), 0) :\r\n            Math.max(Math.min(column + 1, upperLimit), 0);\r\n    }\r\n\r\n    /**\r\n     * Get the column span of the placeholder\r\n     */\r\n    getPlaceholderColumnSpan(width: number): number {\r\n\r\n        const columnSpan = this.getColumnFromPx(width);\r\n\r\n        // if we arent dragging right or left then just return the column span\r\n        if (this._actionWidget.direction !== ActionDirection.Right &&\r\n            this._actionWidget.direction !== ActionDirection.TopRight &&\r\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\r\n            this._actionWidget.direction !== ActionDirection.Left &&\r\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\r\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\r\n            return Math.max(columnSpan, 1);\r\n        }\r\n\r\n        // get the current column span and any overflow\r\n        const overflow = width % this.getColumnWidth();\r\n\r\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\r\n    }\r\n\r\n    /**\r\n     * Get the row position of the placeholder\r\n     */\r\n    getPlaceholderRow(y: number, height: number): number {\r\n\r\n        const row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\r\n        const rowSpan = Math.ceil(height / this._rowHeight);\r\n\r\n        // if we arent dragging up then just return the row\r\n        if (this._actionWidget.direction !== ActionDirection.Top &&\r\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\r\n            this._actionWidget.direction !== ActionDirection.TopRight) {\r\n            return Math.max(row, 0);\r\n        }\r\n\r\n        // get any overflow\r\n        let overflow = height < this._rowHeight ? 0 : height % this._rowHeight;\r\n\r\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this._rowHeight / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\r\n    }\r\n\r\n    /**\r\n     * Get the row span of the placeholder\r\n     */\r\n    getPlaceholderRowSpan(height: number): number {\r\n\r\n        const rowSpan = this.getRowFromPx(height);\r\n\r\n        // if we arent dragging up or down then just return the column span\r\n        if (this._actionWidget.direction !== ActionDirection.Top &&\r\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\r\n            this._actionWidget.direction !== ActionDirection.TopRight &&\r\n            this._actionWidget.direction !== ActionDirection.Bottom &&\r\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\r\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\r\n            return Math.max(rowSpan, 1);\r\n        }\r\n\r\n        // get the current column span and any overflow\r\n        const overflow = height % this._rowHeight;\r\n\r\n        return (overflow > (this._rowHeight / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\r\n    }\r\n\r\n    getColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\r\n\r\n        const column = Math.floor(x / Math.floor(this.getColumnWidth()));\r\n        const overflow = (x % Math.floor(this.getColumnWidth()));\r\n        const half = this.getColumnWidth() / 2;\r\n\r\n        switch (rounding) {\r\n\r\n            case Rounding.RoundDown:\r\n                return column;\r\n\r\n            case Rounding.RoundDownBelowHalf:\r\n                return overflow < half ? column : column + 1;\r\n\r\n            case Rounding.RoundUpOverHalf:\r\n                return overflow > half ? column + 1 : column;\r\n\r\n            case Rounding.RoundUp:\r\n                return overflow > 0 ? column + 1 : column;\r\n        }\r\n\r\n    }\r\n\r\n    getRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\r\n\r\n        const row = Math.floor(y / Math.floor(this._rowHeight));\r\n        const overflow = (y % Math.floor(this._rowHeight));\r\n        const half = this._rowHeight / 2;\r\n\r\n        switch (rounding) {\r\n\r\n            case Rounding.RoundDown:\r\n                return row;\r\n\r\n            case Rounding.RoundDownBelowHalf:\r\n                return overflow < half ? row : row + 1;\r\n\r\n            case Rounding.RoundUpOverHalf:\r\n                return overflow > half ? row + 1 : row;\r\n\r\n            case Rounding.RoundUp:\r\n                return overflow > 0 ? row + 1 : row;\r\n        }\r\n    }\r\n\r\n    commitWidgetChanges(): void {\r\n\r\n        const placeholder = this.placeholder$.getValue();\r\n\r\n        // check that we have all the values we need\r\n        if (placeholder.column === undefined || placeholder.row === undefined ||\r\n            placeholder.columnSpan === undefined || placeholder.rowSpan === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (this._actionWidget) {\r\n            this._actionWidget.widget.setColumn(placeholder.column);\r\n            this._actionWidget.widget.setRow(placeholder.row);\r\n            this._actionWidget.widget.setColumnSpan(placeholder.columnSpan);\r\n            this._actionWidget.widget.setRowSpan(placeholder.rowSpan);\r\n        }\r\n\r\n        // reset all placeholder values\r\n        placeholder.column = undefined;\r\n        placeholder.row = undefined;\r\n        placeholder.columnSpan = undefined;\r\n        placeholder.rowSpan = undefined;\r\n\r\n        // emit the new placeholder values\r\n        this.placeholder$.next(placeholder);\r\n    }\r\n\r\n    /**\r\n     * Get the current column width\r\n     */\r\n    getColumnWidth(): number {\r\n        return Math.floor(this.columnWidth);\r\n    }\r\n\r\n    /**\r\n     * Calculate the number of rows populated with widgets\r\n     */\r\n    getRowCount(): number {\r\n        return this.widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\r\n    }\r\n\r\n    /**\r\n     * Set the height of the dashboard container element\r\n     */\r\n    setDashboardHeight(): void {\r\n\r\n        // size the dashboard container to ensure all rows fit\r\n        let rowCount = this.getRowCount();\r\n\r\n        // if we should show an empty row increment the row count by 1\r\n        if (this.options.emptyRow) {\r\n            rowCount++;\r\n        }\r\n\r\n        this.setDimensions(undefined, rowCount * this._rowHeight);\r\n    }\r\n\r\n    /**\r\n     * Orders the z-index of all widgets to move the active one to the front\r\n     * @param widget The widget that should be brought to the front\r\n     */\r\n    bringToFront(widget: DashboardWidgetComponent): void {\r\n        this.widgets.forEach(_widget => _widget === widget ? _widget.bringToFront() : _widget.sendToBack());\r\n    }\r\n\r\n    /**\r\n     * Move a widget down - if widgets are in the position below, then move them down further\r\n     * @param widget The widget to move downwards\r\n     */\r\n    moveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\r\n\r\n        // move the widget down one position\r\n        widget.setRow(widget.getRow() + distance);\r\n\r\n        // check every space the widget occupies for collisions\r\n        this.forEachBlock(widget, (column, row) =>\r\n            this.getWidgetsAtPosition(column, row, true)\r\n                .filter(wgt => wgt !== widget)\r\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\r\n    }\r\n\r\n    /**\r\n     * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\r\n     */\r\n    shiftWidgetsUp(): void {\r\n\r\n        // check whether or not changes have been made - if so we need to repeat until stable\r\n        let stable = true;\r\n\r\n        // iterate each widget and\r\n        this.widgets.forEach(widget => {\r\n\r\n            // if widget is already on the top row then do nothing\r\n            if (widget.getRow() === 0) {\r\n                return;\r\n            }\r\n\r\n            // if we are currently dragging and this is the dragging widget then skip\r\n            if (this._actionWidget && this._actionWidget.widget === widget) {\r\n                return;\r\n            }\r\n\r\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\r\n                widget.setRow(widget.getRow() - 1);\r\n                stable = false;\r\n            }\r\n        });\r\n\r\n        // if changes occurred then we should repeat the process\r\n        if (!stable) {\r\n            this.shiftWidgetsUp();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Iterate over each space a widget occupied\r\n     * @param widget The widget to determine spaces\r\n     * @param callback The function to be called for each space, should expect a column and row argument witht he context being the widget\r\n     */\r\n    forEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\r\n        for (let row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\r\n            for (let column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\r\n                callback.call(widget, column, row);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the number of columns available\r\n     */\r\n    getColumnCount(): number {\r\n        return this.stacked ? 1 : this.options.columns;\r\n    }\r\n}\r\n\r\nexport const defaultOptions: DashboardOptions = { columns: 5, padding: 5, minWidth: 100, minHeight: 100, emptyRow: true };\r\n\r\nexport interface DashboardDimensions {\r\n    width?: number;\r\n    height?: number;\r\n}\r\n\r\nexport interface DashboardWidgetDimensions {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface DashboardAction {\r\n    widget: DashboardWidgetComponent;\r\n    direction: ActionDirection;\r\n    event: MouseEvent;\r\n    handle?: HTMLElement;\r\n}\r\n\r\nexport interface DashboardSpace {\r\n    widget: DashboardWidgetComponent;\r\n    column: number;\r\n    row: number;\r\n}\r\n\r\nexport interface DashboardPlaceholder {\r\n    visible: boolean;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    column?: number;\r\n    row?: number;\r\n    columnSpan?: number;\r\n    rowSpan?: number;\r\n}\r\n\r\nexport interface DashboardCache {\r\n    id: string;\r\n    column: number;\r\n    row: number;\r\n}\r\n\r\nexport interface DashboardLayoutData {\r\n    id: string;\r\n    col: number;\r\n    row: number;\r\n    colSpan: number;\r\n    rowSpan: number;\r\n}\r\n\r\nexport enum ActionDirection {\r\n    Top = 0,\r\n    TopRight = 1,\r\n    Right = 2,\r\n    BottomRight = 3,\r\n    Bottom = 4,\r\n    BottomLeft = 5,\r\n    Left = 6,\r\n    TopLeft = 7,\r\n    Move = 8\r\n}\r\n\r\nexport enum Rounding {\r\n    RoundDown,\r\n    RoundDownBelowHalf,\r\n    RoundUp,\r\n    RoundUpOverHalf\r\n}","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\r\nimport { DashboardLayoutData, DashboardService, defaultOptions } from './dashboard.service';\r\n\r\n@Component({\r\n    selector: 'ux-dashboard',\r\n    template: `<div #dashboard class=\"dashboard-container\" [style.height.px]=\"dashboardService.height$ | async\">\r\n    <div (uxResize)=\"onResize($event)\" [throttle]=\"16\" class=\"dashboard\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n    \r\n    <div class=\"position-indicator\" *ngIf=\"(dashboardService.placeholder$ | async).visible\" \r\n        [style.left.px]=\"(dashboardService.placeholder$ | async).x\" \r\n        [style.top.px]=\"(dashboardService.placeholder$ | async).y\" \r\n        [style.width.px]=\"(dashboardService.placeholder$ | async).width\"\r\n        [style.height.px]=\"(dashboardService.placeholder$ | async).height\"></div>\r\n</div>`,\r\n    providers: [DashboardService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DashboardComponent implements AfterViewInit {\r\n\r\n    @Input() set layout(layout: DashboardLayoutData[]) {\r\n        if (layout) {\r\n            this.dashboardService.layout$.next(layout);\r\n        }\r\n    }\r\n\r\n    @Input() set options(options: DashboardOptions) {\r\n        this.dashboardService.options$.next({ ...defaultOptions, ...options });\r\n    }\r\n\r\n    @Output() layoutChange = new EventEmitter<DashboardLayoutData[]>();\r\n\r\n    @ViewChild('dashboard') dashboardElement: ElementRef;\r\n\r\n    constructor(public dashboardService: DashboardService) {\r\n        dashboardService.layout$.subscribe(layout => this.layoutChange.emit(layout));\r\n    }\r\n\r\n    /**\r\n     * Set the initial dimensions\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.dashboardService.setDimensions(this.dashboardElement.nativeElement.offsetWidth, this.dashboardElement.nativeElement.offsetHeight);\r\n    }\r\n\r\n    onResize(event: ResizeDimensions): void {\r\n        this.dashboardService.setDimensions(event.width, event.height);\r\n    }\r\n}\r\n\r\nexport interface DashboardOptions {\r\n    columns?: number;\r\n    padding?: number;\r\n    minWidth?: number;\r\n    minHeight?: number;\r\n    rowHeight?: number;\r\n    emptyRow?: boolean;\r\n}","import { Component, Input, OnInit, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\r\nimport { DashboardService, ActionDirection } from '../dashboard.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'ux-dashboard-widget',\r\n    template: `<div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\r\n    <ng-content></ng-content>\r\n</div>\r\n\r\n<div uxDrag #handleTop class=\"resizer-handle handle-top\" \r\n    (dragstart)=\"dragstart(handleTop, $event, 0)\"\r\n    (drag)=\"drag(handleTop, $event, 0)\"\r\n    (dragend)=\"dragend()\"\r\n    [style.top.px]=\"padding\" \r\n    [hidden]=\"!resizable\">\r\n</div>\r\n\r\n<div uxDrag #handleTopRight class=\"resizer-handle handle-top-right\" \r\n    (dragstart)=\"dragstart(handleTopRight, $event, 1)\"\r\n    (drag)=\"drag(handleTopRight, $event, 1)\"\r\n    (dragend)=\"dragend()\"\r\n    [style.top.px]=\"padding\" \r\n    [style.right.px]=\"padding\" \r\n    [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\r\n</div>\r\n\r\n<div uxDrag #handleRight class=\"resizer-handle handle-right\" \r\n    (dragstart)=\"dragstart(handleRight, $event, 2)\"\r\n    (drag)=\"drag(handleRight, $event, 2)\"\r\n    (dragend)=\"dragend()\"\r\n    [style.right.px]=\"padding\" \r\n    [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\r\n</div>\r\n\r\n<div uxDrag #handleBottomRight class=\"resizer-handle handle-bottom-right\" \r\n    (dragstart)=\"dragstart(handleBottomRight, $event, 3)\"\r\n    (drag)=\"drag(handleBottomRight, $event, 3)\"\r\n    (dragend)=\"dragend()\"\r\n    [style.bottom.px]=\"padding\" \r\n    [style.right.px]=\"padding\" \r\n    [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\r\n</div>\r\n\r\n<div uxDrag #handleBottom class=\"resizer-handle handle-bottom\" \r\n    (dragstart)=\"dragstart(handleBottom, $event, 4)\"\r\n    (drag)=\"drag(handleBottom, $event, 4)\"\r\n    (dragend)=\"dragend()\"\r\n    [style.bottom.px]=\"padding\" \r\n    [hidden]=\"!resizable\">\r\n</div>\r\n\r\n<div uxDrag #handleBottomLeft class=\"resizer-handle handle-bottom-left\" \r\n    (dragstart)=\"dragstart(handleBottomLeft, $event, 5)\"\r\n    (drag)=\"drag(handleBottomLeft, $event, 5)\"\r\n    (dragend)=\"dragend()\"\r\n    [style.bottom.px]=\"padding\" \r\n    [style.left.px]=\"padding\" \r\n    [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\r\n</div>\r\n\r\n<div uxDrag #handleLeft class=\"resizer-handle handle-left\" \r\n    (dragstart)=\"dragstart(handleLeft, $event, 6)\"\r\n    (drag)=\"drag(handleLeft, $event, 6)\"\r\n    (dragend)=\"dragend()\"\r\n    [style.left.px]=\"padding\" \r\n    [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\r\n</div>\r\n\r\n<div uxDrag #handleTopLeft class=\"resizer-handle handle-top-left\" \r\n    (dragstart)=\"dragstart(handleTopLeft, $event, 7)\"\r\n    (drag)=\"drag(handleTopLeft, $event, 7)\"\r\n    (dragend)=\"dragend()\"\r\n    [style.top.px]=\"padding\" \r\n    [style.left.px]=\"padding\" \r\n    [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\r\n</div>`\r\n})\r\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @Input() id: string;\r\n    @Input() col: number;\r\n    @Input() row: number;\r\n    @Input() colSpan: number = 1;\r\n    @Input() rowSpan: number = 1;\r\n    @Input() resizable: boolean = false;\r\n\r\n    @HostBinding('style.left.px') x: number = 0;\r\n    @HostBinding('style.top.px') y: number = 0;\r\n    @HostBinding('style.width.px') width: number = 100;\r\n    @HostBinding('style.height.px') height: number = 100;\r\n    @HostBinding('style.padding.px') padding: number = 0;\r\n    @HostBinding('style.z-index') zIndex: number = 0;\r\n\r\n    private _column: StackableValue = { regular: undefined, stacked: undefined };\r\n    private _row: StackableValue = { regular: undefined, stacked: undefined };\r\n    private _columnSpan: StackableValue = { regular: 1, stacked: 1 };\r\n    private _rowSpan: StackableValue = { regular: 1, stacked: 1 };\r\n    private _subscription: Subscription;\r\n\r\n    constructor(public dashboardService: DashboardService) {\r\n        this._subscription = dashboardService.options$.subscribe(() => this.update());\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this._columnSpan.regular = this.colSpan;\r\n        this._rowSpan.regular = this.rowSpan;\r\n\r\n        if (!this.id) {\r\n            console.warn('Dashboard Widget is missing an ID.');\r\n\r\n            // set random id - keeps things working but prevents exporting of positions\r\n            this.id = Math.floor(Math.random() * 100000).toString();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // add the widget to the dashboard\r\n        this.dashboardService.addWidget(this);\r\n\r\n        // apply the current options\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * If component is removed, then unregister it from the service\r\n     */\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n        this.dashboardService.removeWidget(this);\r\n    }\r\n\r\n    /**\r\n     * Apply the current dashboard options\r\n     */\r\n    update(): void {\r\n\r\n        // get the current options at the time \r\n        const { padding, columns } = this.dashboardService.options;\r\n\r\n        this.padding = padding;\r\n        this._columnSpan.stacked = columns;\r\n    }\r\n\r\n    /**\r\n     * Set the actual position and size values\r\n     */\r\n    render(): void {\r\n        this.x = this.getColumn() * this.dashboardService.getColumnWidth();\r\n        this.y = this.getRow() * this.dashboardService.getRowHeight();\r\n        this.width = this.getColumnSpan() * this.dashboardService.getColumnWidth();\r\n        this.height = this.getRowSpan() * this.dashboardService.getRowHeight();\r\n    }\r\n\r\n    getColumn(): number {\r\n        return this.getStackableValue(this._column);\r\n    }\r\n\r\n    getRow(): number {\r\n        return this.getStackableValue(this._row);\r\n    }\r\n\r\n    setColumn(column: number, render: boolean = true): void {\r\n        this.setStackableValue(this._column, column);\r\n\r\n        if (render) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setRow(row: number, render: boolean = true): void {\r\n        this.setStackableValue(this._row, row);\r\n\r\n        if (render) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    getColumnSpan(): number {\r\n        return this.getStackableValue(this._columnSpan);\r\n    }\r\n\r\n    getRowSpan(): number {\r\n        return this.getStackableValue(this._rowSpan);\r\n    }\r\n\r\n    setColumnSpan(columnSpan: number, render: boolean = true): void {\r\n        this.setStackableValue(this._columnSpan, columnSpan);\r\n\r\n        if (render) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setRowSpan(rowSpan: number, render: boolean = true): void {\r\n        this.setStackableValue(this._rowSpan, rowSpan);\r\n\r\n        if (render) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    bringToFront(): void {\r\n        this.zIndex = 1;\r\n    }\r\n\r\n    sendToBack(): void {\r\n        this.zIndex = 0;\r\n    }\r\n\r\n    setBounds(x: number, y: number, width: number, height: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    dragstart(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\r\n        this.dashboardService.onResizeStart({ widget: this, direction: direction, event: event, handle: handle });\r\n    }\r\n\r\n    drag(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\r\n        this.dashboardService.onResizeDrag({ widget: this, direction: direction, event: event, handle: handle });\r\n    }\r\n\r\n    dragend(): void {\r\n        this.dashboardService.onResizeEnd();\r\n    }\r\n\r\n    /**\r\n     * Allows automatic setting of stackable value\r\n     * @param property The current StackableValue object\r\n     * @param value The value to set in the appropriate field\r\n     */\r\n    private setStackableValue(property: StackableValue, value: number): void {\r\n\r\n        if (this.dashboardService.stacked) {\r\n            property.stacked = value;\r\n        } else {\r\n            property.regular = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the appropriate value from a stackable value\r\n     * @param property The Stackable value object\r\n     */\r\n    private getStackableValue(property: StackableValue): number {\r\n        return this.dashboardService.stacked ? property.stacked : property.regular;\r\n    }\r\n}\r\n\r\nexport interface StackableValue {\r\n    regular: number;\r\n    stacked: number;\r\n}","import { Directive, ElementRef, EventEmitter, NgZone, OnDestroy, Output } from '@angular/core';\r\nimport { fromEvent ,  Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Directive({\r\n    selector: '[uxDrag]'\r\n})\r\nexport class DragDirective implements OnDestroy {\r\n\r\n    @Output() dragstart = new EventEmitter<MouseEvent>();\r\n    @Output() drag = new EventEmitter<MouseEvent>();\r\n    @Output() dragend = new EventEmitter<void>();\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone) {\r\n        const mousedown$ = fromEvent<MouseEvent>(elementRef.nativeElement, 'mousedown');\r\n        const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\r\n        const mouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\r\n\r\n        this._subscription = mousedown$.subscribe(event => {\r\n            event.preventDefault();\r\n\r\n            // emit the drag start event\r\n            ngZone.run(() => this.dragstart.emit(event));\r\n\r\n            mousemove$.pipe(takeUntil<MouseEvent>(mouseup$)).subscribe(moveevent => {\r\n                moveevent.preventDefault();\r\n\r\n                // emit the drag start event\r\n                ngZone.run(() => this.drag.emit(moveevent));\r\n            }, null,\r\n            () => ngZone.run(() => this.dragend.emit()));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n}","import { Directive, NgZone, ElementRef } from '@angular/core';\r\n\r\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\r\nimport { DashboardService, ActionDirection } from '../dashboard.service';\r\nimport { DragDirective } from '../../../directives/drag/drag.directive';\r\n\r\n@Directive({\r\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\r\n})\r\nexport class DashboardDragHandleDirective extends DragDirective {\r\n\r\n    constructor(widget: DashboardWidgetComponent, dashboardService: DashboardService, elementRef: ElementRef, ngZone: NgZone) {\r\n        super(elementRef, ngZone);\r\n\r\n        this.dragstart.subscribe((event: MouseEvent) => dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: event }));\r\n        this.drag.subscribe((event: MouseEvent) => dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: event }));\r\n        this.dragend.subscribe(() => dashboardService.onDragEnd());\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { DragDirective } from './drag.directive';\r\n\r\n@NgModule({\r\n    exports: [DragDirective],\r\n    declarations: [DragDirective]\r\n})\r\nexport class DragModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\r\nimport { DashboardService } from './dashboard.service';\r\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\r\nimport { ResizeModule } from '../../directives/resize/index';\r\nimport { DragModule } from '../../directives/drag/index';\r\n\r\nconst DECLARATIONS: any[] = [\r\n    DashboardComponent,\r\n    DashboardWidgetComponent,\r\n    DashboardDragHandleDirective\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ResizeModule,\r\n        DragModule\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS,\r\n    providers: [DashboardService],\r\n})\r\nexport class DashboardModule { }\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const SPIN_BUTTON_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SpinButtonComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ux-spin-button',\r\n    template: `<button class=\"spin-button\"\r\n        *ngIf=\"spinners\"\r\n        tabindex=\"-1\"\r\n        [disabled]=\"disabled\"\r\n        [attr.aria-label]=\"incrementAriaLabel\"\r\n        [attr.aria-disabled]=\"disabled\"\r\n        (click)=\"triggerIncrement()\">\r\n\r\n  <span class=\"hpe-icon hpe-up\"></span>\r\n</button>\r\n\r\n<input [type]=\"type\"\r\n       role=\"spinbutton\"\r\n       [min]=\"min\"\r\n       [max]=\"max\"\r\n       [tabindex]=\"0\"\r\n       class=\"form-control\"\r\n       [placeholder]=\"placeholder\"\r\n       [readOnly]=\"readOnly\"\r\n       [disabled]=\"disabled\"\r\n       [attr.aria-label]=\"inputAriaLabel\"\r\n       [attr.aria-disabled]=\"disabled\"\r\n       [attr.aria-valuemin]=\"min\"\r\n       [attr.aria-valuenow]=\"value\"\r\n       [attr.aria-valuemax]=\"max\"\r\n       [attr.aria-readonly]=\"readOnly\"\r\n       [ngModel]=\"value\"\r\n       (ngModelChange)=\"valueChange.emit($event)\"\r\n       (wheel)=\"scroll($event)\"\r\n       (keydown.arrowup)=\"arrowkeys ? triggerIncrement() : null; $event.preventDefault()\"\r\n       (keydown.arrowdown)=\"arrowkeys ? triggerDecrement() : null; $event.preventDefault()\">\r\n\r\n<button class=\"spin-button\"\r\n        *ngIf=\"spinners\"\r\n        tabindex=\"-1\"\r\n        [disabled]=\"disabled\"\r\n        [attr.aria-label]=\"decrementAriaLabel\"\r\n        [attr.aria-disabled]=\"disabled\"\r\n        (click)=\"triggerDecrement()\">\r\n\r\n  <span class=\"hpe-icon hpe-down\"></span>\r\n</button>`,\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [SPIN_BUTTON_VALUE_ACCESSOR]\r\n})\r\nexport class SpinButtonComponent implements ControlValueAccessor {\r\n\r\n    @Input() set value(value: any) {\r\n        this._value = value;\r\n        this.onChangeCallback(value);\r\n        this.onTouchedCallback();\r\n    }\r\n\r\n    get value(): any {\r\n        return this._value;\r\n    }\r\n\r\n    @Input() type: string = 'text';\r\n    @Input() min: number;\r\n    @Input() max: number;\r\n    @Input() placeholder: string = '';\r\n    @Input() disabled: boolean = false;\r\n    @Input() spinners: boolean = true;\r\n    @Input() readOnly: boolean = true;\r\n    @Input() scrolling: boolean = true;\r\n    @Input() arrowkeys: boolean = true;\r\n\r\n    @Input() incrementAriaLabel: string;\r\n    @Input() inputAriaLabel: string;\r\n    @Input() decrementAriaLabel: string;\r\n\r\n    @Output() valueChange = new EventEmitter<any>();\r\n\r\n    @Output() increment = new EventEmitter<void>();\r\n    @Output() decrement = new EventEmitter<void>();\r\n\r\n    onTouchedCallback: () => void = () => { };\r\n    onChangeCallback: (_: any) => void = () => { };\r\n\r\n    private _value: any;\r\n\r\n    scroll(event: WheelEvent): void {\r\n\r\n        if (!this.scrolling) {\r\n            return;\r\n        }\r\n\r\n        if (event.deltaY > 0) {\r\n            this.triggerDecrement();\r\n        } else {\r\n            this.triggerIncrement();\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    triggerIncrement(): void {\r\n        if (!this.disabled) {\r\n            this.increment.emit();\r\n        }\r\n    }\r\n\r\n    triggerDecrement(): void {\r\n        if (!this.disabled) {\r\n            this.decrement.emit();\r\n        }\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void): void {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SpinButtonComponent } from './spin-button.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    exports: [SpinButtonComponent],\r\n    declarations: [SpinButtonComponent]\r\n})\r\nexport class SpinButtonModule { }","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'timeFormat'\r\n})\r\nexport class TimeFormatPipe implements PipeTransform {\r\n\r\n  transform(value: number): string | number {\r\n    return value < 10 ? '0' + value : value;\r\n  }\r\n\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, ViewEncapsulation, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BehaviorSubject ,  Observable ,  Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nexport const TIME_PICKER_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TimePickerComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ux-time-picker',\r\n    template: `<div class=\"time-picker\" aria-label=\"Time picker\">\r\n\r\n    <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showHours\">\r\n\r\n        <ux-spin-button\r\n            type=\"number\"\r\n            class=\"time-spinner\"\r\n            placeholder=\"HH\"\r\n            [min]=\"0\"\r\n            [max]=\"showMeridian ? 12 : 23\"\r\n            [value]=\"hour$ | async | timeFormat\"\r\n            (valueChange)=\"hourChange($event)\"\r\n            [spinners]=\"showSpinners\"\r\n            [disabled]=\"disabled\"\r\n            [readOnly]=\"readOnly\"\r\n            inputAriaLabel=\"hour\"\r\n            incrementAriaLabel=\"Increment the hour\"\r\n            decrementAriaLabel=\"Decrement the hour\"\r\n            (increment)=\"incrementHour()\"\r\n            (decrement)=\"decrementHour()\">\r\n        </ux-spin-button>\r\n\r\n    </div>\r\n\r\n    <div class=\"time-picker-separator\" *ngIf=\"showMinutes\">:</div>\r\n\r\n    <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showMinutes\">\r\n\r\n        <ux-spin-button\r\n            type=\"number\"\r\n            class=\"time-spinner\"\r\n            placeholder=\"MM\"\r\n            [min]=\"0\"\r\n            [max]=\"59\"\r\n            [value]=\"minute$ | async | timeFormat\"\r\n            (valueChange)=\"minuteChange($event)\"\r\n            [spinners]=\"showSpinners\"\r\n            [disabled]=\"disabled\"\r\n            [readOnly]=\"readOnly\"\r\n            inputAriaLabel=\"minute\"\r\n            incrementAriaLabel=\"Increment the minute\"\r\n            decrementAriaLabel=\"Decrement the minute\"\r\n            (increment)=\"incrementMinute()\"\r\n            (decrement)=\"decrementMinute()\">\r\n        </ux-spin-button>\r\n\r\n    </div>\r\n\r\n    <div class=\"time-picker-separator\" *ngIf=\"showSeconds\">:</div>\r\n\r\n    <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showSeconds\">\r\n\r\n        <ux-spin-button\r\n            type=\"number\"\r\n            class=\"time-spinner\"\r\n            type=\"number\"\r\n            placeholder=\"SS\"\r\n            [min]=\"0\"\r\n            [max]=\"59\"\r\n            [value]=\"second$ | async | timeFormat\"\r\n            (valueChange)=\"secondChange($event)\"\r\n            [spinners]=\"showSpinners\"\r\n            [disabled]=\"disabled\"\r\n            [readOnly]=\"readOnly\"\r\n            inputAriaLabel=\"seconds\"\r\n            incrementAriaLabel=\"Increment the second\"\r\n            decrementAriaLabel=\"Decrement the second\"\r\n            (increment)=\"incrementSecond()\"\r\n            (decrement)=\"decrementSecond()\">\r\n        </ux-spin-button>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class=\"time-picker-meridian\" *ngIf=\"showMeridian\">\r\n\r\n    <div class=\"btn-group\" role=\"radiogroup\">\r\n\r\n        <button class=\"btn button-toggle-accent\"\r\n                *ngFor=\"let meridian of meridians\"\r\n                role=\"radio\"\r\n                tabindex=\"0\"\r\n                [disabled]=\"disabled\"\r\n                (click)=\"selectMeridian(meridian)\"\r\n                [class.active]=\"meridian === (meridian$ | async)\"\r\n                [attr.aria-label]=\"meridian\"\r\n                [attr.aria-checked]=\"meridian === (meridian$ | async)\"\r\n                [attr.aria-disabled]=\"disabled\">\r\n                {{ meridian }}\r\n        </button>\r\n\r\n    </div>\r\n</div>`,\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [TIME_PICKER_VALUE_ACCESSOR],\r\n    host: {\r\n        'aria-label': 'Time Picker'\r\n    }\r\n})\r\nexport class TimePickerComponent implements ControlValueAccessor, OnDestroy {\r\n\r\n    @Input() arrowkeys: boolean = true;\r\n    @Input() mousewheel: boolean = true;\r\n    @Input() disabled: boolean = false;\r\n    @Input() readOnly: boolean = false;\r\n\r\n    @Input() showMeridian: boolean = false;\r\n    @Input() showHours: boolean = true;\r\n    @Input() showMinutes: boolean = true;\r\n    @Input() showSeconds: boolean = false;\r\n    @Input() showSpinners: boolean = true;\r\n\r\n    @Input() hourStep: number = 1;\r\n    @Input() minuteStep: number = 1;\r\n    @Input() secondStep: number = 1;\r\n\r\n    @Input() min: Date;\r\n    @Input() max: Date;\r\n    @Input() meridians: string[] = ['AM', 'PM'];\r\n\r\n    @Input() set value(value: Date) {\r\n        this.value$.next(new Date(value));\r\n        this.valueChange.emit(this.value$.value);\r\n\r\n        this.onChangeCallback(this.value$.value);\r\n        this.onTouchedCallback();\r\n    }\r\n\r\n    get value(): Date {\r\n        return new Date(this.value$.value);\r\n    }\r\n\r\n    @Output() valueChange = new EventEmitter<Date>();\r\n    @Output() isValid = new EventEmitter<boolean>();\r\n\r\n    onTouchedCallback: () => void = () => { };\r\n    onChangeCallback: (_: Date) => void = () => { };\r\n\r\n    value$ = new BehaviorSubject<Date>(new Date());\r\n\r\n    // create observables that are derived from the latest value\r\n    hour$: Observable<number> = this.value$.pipe(map(date => date.getHours()), map(hour => this.showMeridian ? this.getMeridianTime(hour) : hour));\r\n    minute$: Observable<number> = this.value$.pipe(map(date => date.getMinutes()));\r\n    second$: Observable<number> = this.value$.pipe(map(date => date.getSeconds()));\r\n    meridian$: Observable<string> = this.value$.pipe(map(date => date.getHours() < 12 ? this.meridians[0] : this.meridians[1]));\r\n    valid$: Observable<boolean> = this.value$.pipe(map(date => this.checkValidity(date)));\r\n\r\n    private _meridian: string = this.meridians[0];\r\n    private _subscription: Subscription;\r\n\r\n    constructor() {\r\n        this._subscription = this.valid$.pipe(distinctUntilChanged()).subscribe(valid => this.isValid.emit(valid));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    writeValue(value: Date): void {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: Date) => void): void {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    getMeridianTime(hour: number): number {\r\n        return hour > 12 ? hour - 12 : hour;\r\n    }\r\n\r\n    setHour(hour: number): void {\r\n        const date = this.value;\r\n        date.setHours(hour ? hour : 0);\r\n\r\n        this.value = date;\r\n    }\r\n\r\n    setMinute(minute: number): void {\r\n        const date = this.value;\r\n        date.setMinutes(minute ? minute : 0);\r\n\r\n        this.value = date;\r\n    }\r\n\r\n    setSeconds(seconds: number): void {\r\n        const date = this.value;\r\n        date.setSeconds(seconds ? seconds : 0);\r\n\r\n        this.value = date;\r\n    }\r\n\r\n    incrementHour(arrowkey: boolean = false): void {\r\n        if (this.disabled || arrowkey && !this.arrowkeys) {\r\n            return;\r\n        }\r\n\r\n        this.setHour(this.value.getHours() + this.hourStep);\r\n    }\r\n\r\n    decrementHour(arrowkey: boolean = false): void {\r\n        if (this.disabled || arrowkey && !this.arrowkeys) {\r\n            return;\r\n        }\r\n\r\n        this.setHour(this.value.getHours() - this.hourStep);\r\n    }\r\n\r\n    incrementMinute(arrowkey: boolean = false): void {\r\n        if (this.disabled || arrowkey && !this.arrowkeys) {\r\n            return;\r\n        }\r\n\r\n        this.setMinute(this.value.getMinutes() + this.minuteStep);\r\n    }\r\n\r\n    decrementMinute(arrowkey: boolean = false): void {\r\n        if (this.disabled || arrowkey && !this.arrowkeys) {\r\n            return;\r\n        }\r\n\r\n        this.setMinute(this.value.getMinutes() - this.minuteStep);\r\n    }\r\n\r\n    incrementSecond(arrowkey: boolean = false): void {\r\n        if (this.disabled || arrowkey && !this.arrowkeys) {\r\n            return;\r\n        }\r\n\r\n        this.setSeconds(this.value.getSeconds() + this.secondStep);\r\n    }\r\n\r\n    decrementSecond(arrowkey: boolean = false): void {\r\n        if (this.disabled || arrowkey && !this.arrowkeys) {\r\n            return;\r\n        }\r\n\r\n        this.setSeconds(this.value.getSeconds() - this.secondStep);\r\n    }\r\n\r\n    selectMeridian(meridian: string): void {\r\n        this._meridian = meridian;\r\n\r\n        // get the current time\r\n        const hour = this.value.getHours();\r\n\r\n        // if we have selected AM\r\n        if (meridian === this.meridians[0]) {\r\n            if (hour >= 12) {\r\n                this.setHour(hour - 12);\r\n            }\r\n        }\r\n\r\n        // if we have selected PM\r\n        if (meridian === this.meridians[1]) {\r\n            if (hour < 12) {\r\n                this.setHour(hour + 12);\r\n            }\r\n        }\r\n    }\r\n\r\n    checkValidity(date: Date): boolean {\r\n        let valid = true;\r\n\r\n        if (this.min && date.getTime() <= this.min.getTime()) {\r\n            valid = false;\r\n        }\r\n\r\n        if (this.max && date.getTime() >= this.max.getTime()) {\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    hourChange(value: string): void {\r\n\r\n        // convert the string to a number\r\n        let hour = parseInt(value);\r\n        let currentHour = this.value.getHours();\r\n\r\n        // if the value hasn't changed, do nothing\r\n        if (hour === currentHour) {\r\n            return;\r\n        }\r\n\r\n        // ensure the hours is valid\r\n        if (!isNaN(hour)) {\r\n            if (hour < 0) {\r\n                hour = 0;\r\n            }\r\n\r\n            if (hour > (this.showMeridian ? 12 : 23)) {\r\n                hour = this.showMeridian ? 12 : 23;\r\n            }\r\n        }\r\n\r\n        hour = isNaN(hour) ? currentHour : hour;\r\n\r\n        // if the number is invalid then restore it to the previous value\r\n        if (this._meridian === this.meridians[0]) {\r\n            if (hour >= 12) {\r\n                hour -= 12;\r\n            }\r\n        }\r\n\r\n        // if we have selected PM\r\n        if (this._meridian === this.meridians[1]) {\r\n            if (hour < 12) {\r\n                hour += 12;\r\n            }\r\n        }\r\n\r\n        this.setHour(hour);\r\n    }\r\n\r\n    minuteChange(value: string): void {\r\n\r\n        // convert the string to a number\r\n        let minute = parseInt(value);\r\n        let currentMinute = this.value.getMinutes();\r\n\r\n        // if the value hasn't changed, do nothing\r\n        if (minute === currentMinute) {\r\n            return;\r\n        }\r\n\r\n        // ensure the hours is valid\r\n        if (!isNaN(minute)) {\r\n            if (minute < 0) {\r\n                minute = 59;\r\n            }\r\n\r\n            if (minute > 59) {\r\n                minute = 0;\r\n            }\r\n        }\r\n\r\n        // if the number is invalid then restore it to the previous value\r\n        this.setMinute(isNaN(minute) ? currentMinute : minute);\r\n    }\r\n\r\n    secondChange(value: string): void {\r\n        // convert the string to a number\r\n        let second = parseInt(value);\r\n        let currentSecond = this.value.getSeconds();\r\n\r\n        // if the value hasn't changed, do nothing\r\n        if (second === currentSecond) {\r\n            return;\r\n        }\r\n\r\n        // ensure the hours is valid\r\n        if (!isNaN(second)) {\r\n            if (second < 0) {\r\n                second = 0;\r\n            }\r\n\r\n            if (second > 59) {\r\n                second = 59;\r\n            }\r\n        }\r\n\r\n        // if the number is invalid then restore it to the previous value\r\n        this.setSeconds(isNaN(second) ? currentSecond : second);\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SpinButtonModule } from '../spin-button/index';\r\nimport { TimeFormatPipe } from './time-format.pipe';\r\nimport { TimePickerComponent } from './time-picker.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        SpinButtonModule\r\n    ],\r\n    exports: [TimePickerComponent],\r\n    declarations: [TimePickerComponent, TimeFormatPipe],\r\n})\r\nexport class TimePickerModule { }","import { DateTimePickerTimezone } from './date-time-picker.service';\r\n\r\n\r\n/**\r\n * Convert a single dimension array to a double dimension array\r\n * @param items the single dimension array to convert\r\n * @param columns the number of items each array should have\r\n */\r\nexport function gridify<T>(items: T[], columns: number): T[][] {\r\n\r\n    // create a copy of array so not to effect the original\r\n    items = items.slice(0);\r\n\r\n    const grid: T[][] = [];\r\n\r\n    while (items.length) {\r\n        grid.push(items.splice(0, columns));\r\n    }\r\n\r\n    return grid;\r\n}\r\n\r\n/**\r\n * Create an array of numbers between two limits\r\n * @param start the lower limit\r\n * @param end the upper limit\r\n */\r\nexport function range(start: number, end: number): number[] {\r\n    const list: number[] = [];\r\n\r\n    for (let idx = start; idx <= end; idx++) {\r\n        list.push(idx);\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n/**\r\n * Create an array of dates between two points\r\n * @param start the date to start the array\r\n * @param end the date to end the array\r\n */\r\nexport function dateRange(start: Date, end: Date): Date[] {\r\n\r\n    let dates: Date[] = [];\r\n\r\n    // loop through all the days between the date range\r\n    while (start <= end) {\r\n\r\n        // add the date to the array\r\n        dates.push(new Date(start));\r\n\r\n        // move to the next day\r\n        start.setDate(start.getDate() + 1);\r\n    }\r\n\r\n    return dates;\r\n}\r\n\r\n/**\r\n * Compare two dates to see if they are on the same day\r\n * @param day1 the first date to compare\r\n * @param day2 the second date to compare\r\n */\r\nexport function compareDays(day1: Date, day2: Date): boolean {\r\n    return day1.getDate() === day2.getDate() &&\r\n        day1.getMonth() === day2.getMonth() &&\r\n        day1.getFullYear() === day2.getFullYear();\r\n}\r\n\r\n/**\r\n * Date comparison for use primarily with distinctUntilChanged\r\n */\r\nexport function dateComparator(dateOne: Date, dateTwo: Date): boolean {\r\n    return dateOne.getTime() === dateTwo.getTime();\r\n}\r\n\r\n/**\r\n * Timezone comparison for use primarily with distinctUntilChanged\r\n */\r\nexport function timezoneComparator(zoneOne: DateTimePickerTimezone, zoneTwo: DateTimePickerTimezone): boolean {\r\n    return zoneOne.name === zoneTwo.name && zoneOne.offset === zoneTwo.offset;\r\n}\r\n\r\n/**\r\n * Export an array of all the available months\r\n */\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const monthsShort = months.map(month => month.substring(0, 3));\r\n\r\n/**\r\n * Export an array of all the available days of the week\r\n */\r\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\nexport const weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","/**\r\n * Add a config service to allow an application\r\n * to customize the date time picker default settings\r\n * across the entire application\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { weekdaysShort } from './date-time-picker.utils';\r\nimport { DateTimePickerTimezone } from './date-time-picker.service';\r\n\r\n@Injectable()\r\nexport class DateTimePickerConfig {\r\n\r\n    showDate: boolean = true;\r\n    showTime: boolean = true;\r\n    showTimezone: boolean = true;\r\n    showSeconds: boolean = false;\r\n    showMeridian: boolean = true;\r\n    showSpinners: boolean = true;\r\n    weekdays: string[] = weekdaysShort;\r\n    nowBtnText: string = 'Today';\r\n\r\n    timezones: DateTimePickerTimezone[] = [\r\n        { name: 'GMT-11', offset: 660 },\r\n        { name: 'GMT-10', offset: 600 },\r\n        { name: 'GMT-9', offset: 540 },\r\n        { name: 'GMT-8', offset: 480 },\r\n        { name: 'GMT-7', offset: 420 },\r\n        { name: 'GMT-6', offset: 360 },\r\n        { name: 'GMT-5', offset: 300 },\r\n        { name: 'GMT-4', offset: 240 },\r\n        { name: 'GMT-3', offset: 180 },\r\n        { name: 'GMT-2', offset: 120 },\r\n        { name: 'GMT-1', offset: 60 },\r\n        { name: 'GMT', offset: 0 },\r\n        { name: 'GMT+1', offset: -60 },\r\n        { name: 'GMT+2', offset: -120 },\r\n        { name: 'GMT+3', offset: -180 },\r\n        { name: 'GMT+4', offset: -240 },\r\n        { name: 'GMT+5', offset: -300 },\r\n        { name: 'GMT+6', offset: -360 },\r\n        { name: 'GMT+7', offset: -420 },\r\n        { name: 'GMT+8', offset: -480 },\r\n        { name: 'GMT+9', offset: -540 },\r\n        { name: 'GMT+10', offset: -600 },\r\n        { name: 'GMT+11', offset: -660 },\r\n        { name: 'GMT+12', offset: -720 }\r\n    ];\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject ,  Subject ,  Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { DateTimePickerConfig } from './date-time-picker.config';\r\nimport { dateComparator } from './date-time-picker.utils';\r\n\r\n@Injectable()\r\nexport class DateTimePickerService {\r\n\r\n    mode$: BehaviorSubject<DatePickerMode> = new BehaviorSubject<DatePickerMode>(DatePickerMode.Day);\r\n    date$: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\r\n    timezone$ = new BehaviorSubject<DateTimePickerTimezone>(this.getCurrentTimezone());\r\n    selected$: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\r\n\r\n    // the month and year to display in the viewport\r\n    month$: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getMonth());\r\n    year$: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getFullYear());\r\n\r\n    showDate$ = new BehaviorSubject<boolean>(this._config.showDate);\r\n    showTime$ = new BehaviorSubject<boolean>(this._config.showTime);\r\n    showTimezone$ = new BehaviorSubject<boolean>(this._config.showTimezone);\r\n    showSeconds$ = new BehaviorSubject<boolean>(this._config.showSeconds);\r\n    showMeridian$ = new BehaviorSubject<boolean>(this._config.showMeridian);\r\n    showSpinners$ = new BehaviorSubject<boolean>(this._config.showSpinners);\r\n    weekdays$ = new BehaviorSubject<string[]>(this._config.weekdays);\r\n    nowBtnText$ = new BehaviorSubject<string>(this._config.nowBtnText);\r\n    timezones$ = new BehaviorSubject<DateTimePickerTimezone[]>(this._config.timezones);\r\n\r\n    header$ = new BehaviorSubject<string>(null);\r\n    headerEvent$ = new Subject<DatePickerHeaderEvent>();\r\n    modeDirection: ModeDirection = ModeDirection.None;\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _config: DateTimePickerConfig) {\r\n\r\n        // when the active date changes set the currently selected date\r\n        this._subscription = this.selected$.pipe(distinctUntilChanged(dateComparator)).subscribe(date => {\r\n\r\n            // the month and year displayed in the viewport should reflect the newly selected items\r\n            this.setViewportMonth(date.getMonth());\r\n            this.setViewportYear(date.getFullYear());\r\n\r\n            // emit the new date to the component host\r\n            this.date$.next(date);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    setViewportMonth(month: number): void {\r\n        if (month < 0) {\r\n            this.month$.next(11);\r\n            this.year$.next(this.year$.value - 1);\r\n        } else if (month > 11) {\r\n            this.month$.next(0);\r\n            this.year$.next(this.year$.value + 1);\r\n        } else {\r\n            this.month$.next(month);\r\n        }\r\n    }\r\n\r\n    setViewportYear(year: number): void {\r\n        this.year$.next(year);\r\n    }\r\n\r\n    setDate(day: number, month: number, year: number): void {\r\n        const date = new Date(this.selected$.value);\r\n\r\n        date.setDate(day);\r\n        date.setMonth(month);\r\n        date.setFullYear(year);\r\n\r\n        this.selected$.next(date);\r\n    }\r\n\r\n    setDateToNow(): void {\r\n        this.selected$.next(new Date());\r\n    }\r\n\r\n    setViewportMode(mode: DatePickerMode): void {\r\n        this.mode$.next(mode);\r\n    }\r\n\r\n    goToChildMode(): void {\r\n        this.modeDirection = ModeDirection.Descend;\r\n\r\n        switch (this.mode$.value) {\r\n\r\n            case DatePickerMode.Year:\r\n                return this.setViewportMode(DatePickerMode.Month);\r\n\r\n            case DatePickerMode.Month:\r\n                return this.setViewportMode(DatePickerMode.Day);\r\n        }\r\n    }\r\n\r\n    goToParentMode(): void {\r\n        this.modeDirection = ModeDirection.Ascend;\r\n\r\n        switch (this.mode$.value) {\r\n\r\n            case DatePickerMode.Day:\r\n                return this.setViewportMode(DatePickerMode.Month);\r\n\r\n            case DatePickerMode.Month:\r\n                return this.setViewportMode(DatePickerMode.Year);\r\n        }\r\n    }\r\n\r\n    goToNext(): void {\r\n        this.headerEvent$.next(DatePickerHeaderEvent.Next);\r\n    }\r\n\r\n    goToPrevious(): void {\r\n        this.headerEvent$.next(DatePickerHeaderEvent.Previous);\r\n    }\r\n\r\n    setHeader(header: string): void {\r\n        this.header$.next(header);\r\n    }\r\n\r\n    getCurrentTimezone(): DateTimePickerTimezone {\r\n        const offset = new Date().getTimezoneOffset();\r\n        return this._config.timezones.find(timezone => timezone.offset === offset);\r\n    }\r\n\r\n    setTimezone(timezone: DateTimePickerTimezone): void {\r\n        this.timezone$.next(timezone);\r\n    }\r\n}\r\n\r\nexport enum DatePickerMode {\r\n    Day,\r\n    Month,\r\n    Year\r\n}\r\n\r\nexport enum ModeDirection {\r\n    None,\r\n    Ascend,\r\n    Descend\r\n}\r\n\r\nexport enum DatePickerHeaderEvent {\r\n    Previous,\r\n    Next\r\n}\r\n\r\nexport interface DateTimePickerTimezone {\r\n    name: string;\r\n    offset: number;\r\n}","import { Component, EventEmitter, Input, OnDestroy, Output, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { DatePickerMode, DateTimePickerService, DateTimePickerTimezone } from './date-time-picker.service';\r\nimport { dateComparator, timezoneComparator } from './date-time-picker.utils';\r\n\r\n@Component({\r\n  selector: 'ux-date-time-picker',\r\n  template: `<div class=\"calendar-container\">\r\n\r\n  <ux-date-time-picker-header></ux-date-time-picker-header>\r\n\r\n  <ng-container *ngIf=\"datepicker.showDate$ | async\" [ngSwitch]=\"datepicker.mode$ | async\">\r\n\r\n      <!-- Display days in the current month -->\r\n      <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\"></ux-date-time-picker-day-view>\r\n\r\n      <!-- Display the months in the current year -->\r\n      <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\"></ux-date-time-picker-month-view>\r\n\r\n      <!-- Display a decade -->\r\n      <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\"></ux-date-time-picker-year-view>\r\n\r\n  </ng-container>\r\n\r\n  <!-- Display a Time Picker -->\r\n  <ux-date-time-picker-time-view *ngIf=\"datepicker.showTime$ | async\"></ux-date-time-picker-time-view>\r\n\r\n</div>\r\n\r\n<button class=\"now-button\" aria-label=\"Set date to now\" (click)=\"setToNow()\">{{ datepicker.nowBtnText$ | async }}</button>`,\r\n  providers: [DateTimePickerService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DateTimePickerComponent implements OnDestroy {\r\n\r\n  private _timezone: DateTimePickerTimezone;\r\n\r\n  @Input() set showDate(value: boolean) {\r\n    this.datepicker.showDate$.next(value);\r\n  }\r\n\r\n  @Input() set showTime(value: boolean) {\r\n    this.datepicker.showTime$.next(value);\r\n  }\r\n\r\n  @Input() set showTimezone(value: boolean) {\r\n    this.datepicker.showTimezone$.next(value);\r\n  }\r\n\r\n  @Input() set showSeconds(value: boolean) {\r\n    this.datepicker.showSeconds$.next(value);\r\n  }\r\n\r\n  @Input() set showMeridian(value: boolean) {\r\n    this.datepicker.showMeridian$.next(value);\r\n  }\r\n\r\n  @Input() set showSpinners(value: boolean) {\r\n    this.datepicker.showSpinners$.next(value);\r\n  }\r\n\r\n  @Input() set weekdays(value: string[]) {\r\n    this.datepicker.weekdays$.next(value);\r\n  }\r\n\r\n  @Input() set nowBtnText(value: string) {\r\n    this.datepicker.nowBtnText$.next(value);\r\n  }\r\n\r\n  @Input() set timezones(value: DateTimePickerTimezone[]) {\r\n    this.datepicker.timezones$.next(value);\r\n  }\r\n\r\n\r\n  @Output() dateChange: EventEmitter<Date> = new EventEmitter<Date>();\r\n  @Output() timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\r\n\r\n  @Input()\r\n  set date(value: Date) {\r\n    if (!dateComparator(value, this.datepicker.selected$.value)) {\r\n      this.datepicker.selected$.next(new Date(value));\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set timezone(value: DateTimePickerTimezone) {\r\n    this.datepicker.timezone$.next(value);\r\n  }\r\n\r\n  // expose enum to view\r\n  DatePickerMode = DatePickerMode;\r\n\r\n  private _subscription = new Subscription();\r\n\r\n  constructor(public datepicker: DateTimePickerService) {\r\n    const valueChange = datepicker.selected$.pipe(distinctUntilChanged(dateComparator))\r\n      .subscribe(date => this.dateChange.emit(date));\r\n\r\n    const timezoneChange = datepicker.timezone$.pipe(distinctUntilChanged(timezoneComparator))\r\n      .subscribe((timezone: DateTimePickerTimezone) => this.timezoneChange.emit(timezone));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Change the date to the current date and time\r\n   */\r\n  setToNow(): void {\r\n\r\n    // set the date to the current moment\r\n    this.datepicker.setDateToNow();\r\n  }\r\n}","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription ,  combineLatest } from 'rxjs';\r\nimport { DateTimePickerService, ModeDirection } from '../date-time-picker.service';\r\nimport { compareDays, dateRange, gridify, months } from '../date-time-picker.utils';\r\n\r\n@Injectable()\r\nexport class DayViewService implements OnDestroy {\r\n\r\n    grid$ = new BehaviorSubject<DayViewItem[][]>([[]]);\r\n    focused$ = new BehaviorSubject<FocusedDayItem>(null);\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _datepicker: DateTimePickerService) {\r\n        this._subscription = combineLatest(_datepicker.month$, _datepicker.year$)\r\n            .subscribe(([month, year]) => this.createDayGrid(month, year));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    setFocus(day: number, month: number, year: number): void {\r\n        this.focused$.next({ day: day, month: month, year: year });\r\n\r\n        // update the date picker to show the required month and year\r\n        this._datepicker.setViewportMonth(month);\r\n        this._datepicker.setViewportYear(year);\r\n    }\r\n\r\n    private createDayGrid(month: number, year: number): void {\r\n\r\n        // update the header\r\n        this._datepicker.setHeader(months[month] + ' ' + year);\r\n\r\n        // find the lower and upper boundaries\r\n        const start = new Date(year, month, 1);\r\n        const end = new Date(year, month + 1, 0);\r\n\r\n        // we always want to show from the sunday - this may include showing some dates from the previous month\r\n        start.setDate(start.getDate() - start.getDay());\r\n\r\n        // we also want to make sure that the range ends on a saturday\r\n        end.setDate(end.getDate() + (6 - end.getDay()));\r\n\r\n        // create an array of all the days to display\r\n        const dates: DayViewItem[] = dateRange(start, end).map(date => ({\r\n            day: date.getDate(),\r\n            month: date.getMonth(),\r\n            year: date.getFullYear(),\r\n            date: date,\r\n            isToday: this.isToday(date),\r\n            isActive: this.isActive(date),\r\n            isCurrentMonth: date.getMonth() === month\r\n        }));\r\n\r\n        // turn the dates into a grid\r\n        const items: DayViewItem[][] = gridify(dates, 7);\r\n\r\n        this.grid$.next(items);\r\n\r\n        // if no item has yet been focused then focus the first day of the month\r\n        if ((this._datepicker.modeDirection === ModeDirection.None || this._datepicker.modeDirection === ModeDirection.Descend) && this.focused$.value === null) {\r\n\r\n            // check if the selected item is visible\r\n            const selectedDay = dates.find(day => day.isCurrentMonth && day.isActive);\r\n\r\n            if (selectedDay) {\r\n                this.setFocus(selectedDay.day, selectedDay.month, selectedDay.year);\r\n            } else {\r\n\r\n                // find the first day of the month\r\n                const first = dates.find(date => date.day === 1);\r\n    \r\n                // focus the date\r\n                this.setFocus(first.day, first.month, first.year);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n   * Determine whether or not a specific date is today\r\n   * @param date The date to check\r\n   */\r\n    private isToday(date: Date): boolean {\r\n        return compareDays(new Date(), date);\r\n    }\r\n\r\n    /**\r\n     * Determines whether or not a specific date is the selected one\r\n     * @param date the date to check\r\n     */\r\n    private isActive(date: Date): boolean {\r\n        return compareDays(this._datepicker.selected$.value, date);\r\n    }\r\n}\r\n\r\nexport interface DayViewItem {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    date: Date;\r\n    isToday: boolean;\r\n    isActive: boolean;\r\n    isCurrentMonth: boolean;\r\n}\r\n\r\nexport interface FocusedDayItem {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n}","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\r\nimport { DayViewItem, DayViewService } from './day-view.service';\r\n\r\n@Component({\r\n  selector: 'ux-date-time-picker-day-view',\r\n  template: `<table class=\"calendar\">\r\n    <thead>\r\n        <tr>\r\n            <th *ngFor=\"let day of datePicker.weekdays$ | async\" class=\"weekday\" [attr.aria-label]=\"day\">{{ day }}</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody role=\"grid\">\r\n        <tr role=\"row\" *ngFor=\"let row of dayService.grid$ | async; trackBy: trackWeekByFn\">\r\n\r\n            <td *ngFor=\"let item of row; trackBy: trackDayByFn\" class=\"date-cell\" role=\"gridcell\">\r\n\r\n                <button class=\"date-button\"\r\n                        [focusIf]=\"(dayService.focused$ | async)?.day === item.day && (dayService.focused$ | async)?.month === item.month && (dayService.focused$ | async)?.year === item.year\"\r\n                        [attr.aria-label]=\"item.date | date\"\r\n                        [attr.aria-selected]=\"item.isActive\"\r\n                        [attr.aria-hidden]=\"!item.isCurrentMonth\"\r\n                        [class.current]=\"item.isToday\"\r\n                        [class.active]=\"item.isActive\"\r\n                        [class.preview]=\"!item.isCurrentMonth\"\r\n                        [tabindex]=\"getTabbable(item) ? 0 : -1\"\r\n                        (click)=\"select(item.date); $event.stopPropagation()\"\r\n                        (keydown.ArrowLeft)=\"focusDate(item, -1); $event.preventDefault()\"\r\n                        (keydown.ArrowRight)=\"focusDate(item, 1); $event.preventDefault()\"\r\n                        (keydown.ArrowUp)=\"focusDate(item, -7); $event.preventDefault()\"\r\n                        (keydown.ArrowDown)=\"focusDate(item, 7); $event.preventDefault()\">\r\n\r\n                    {{ item.date.getDate() }}\r\n                </button>\r\n\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>`,\r\n  providers: [DayViewService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DayViewComponent implements OnDestroy {\r\n\r\n  private _subscription: Subscription;\r\n\r\n  constructor(public datePicker: DateTimePickerService, public dayService: DayViewService) {\r\n    this._subscription = datePicker.headerEvent$\r\n      .subscribe(event => event === DatePickerHeaderEvent.Next ? this.next() : this.previous());\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Navigate to the previous page of dates\r\n   */\r\n  previous(): void {\r\n    this.datePicker.setViewportMonth(this.datePicker.month$.value - 1);\r\n  }\r\n\r\n  /**\r\n   * Navigate to the next page of dates\r\n   */\r\n  next(): void {\r\n    this.datePicker.setViewportMonth(this.datePicker.month$.value + 1);\r\n  }\r\n\r\n  /**\r\n   * Select a particular date\r\n   * @param date the date to select\r\n   */\r\n  select(date: Date): void {\r\n    // update the current date object\r\n    this.datePicker.setDate(date.getDate(), date.getMonth(), date.getFullYear());\r\n\r\n    // focus the newly selected date\r\n    this.dayService.setFocus(date.getDate(), date.getMonth(), date.getFullYear());\r\n  }\r\n\r\n  trackWeekByFn(index: number): number {\r\n    return index;\r\n  }\r\n\r\n  trackDayByFn(index: number, item: DayViewItem): string {\r\n    return `${ item.day } ${ item.month } ${ item.year }`;\r\n  }\r\n\r\n  focusDate(item: DayViewItem, dayOffset: number): void {\r\n\r\n    // determine the date of the day\r\n    const target = new Date(item.date.setDate(item.date.getDate() + dayOffset));\r\n\r\n    // identify which date should be focused\r\n    this.dayService.setFocus(target.getDate(), target.getMonth(), target.getFullYear());\r\n  }\r\n\r\n  getTabbable(item: DayViewItem): boolean {\r\n    const focused = this.dayService.focused$.value;\r\n    const grid = this.dayService.grid$.value;\r\n\r\n    // if there is a focused month check if this is it\r\n    if (focused) {\r\n\r\n      // check if the focused day is visible\r\n      const isFocusedDayVisible = !!grid.find(row => !!row.find(_item => _item.day === focused.day && _item.month === focused.month && _item.year === focused.year));\r\n\r\n      if (isFocusedDayVisible) {\r\n        return focused.day === item.day && focused.month === item.month && focused.year === item.year;\r\n      }\r\n    }\r\n\r\n    // if there is no focusable day then check if there is a selected day\r\n    const isSelectedDayVisible = !!grid.find(row => !!row.find(day => day.isActive));\r\n\r\n    if (isSelectedDayVisible) {\r\n        return item.isActive;\r\n    }\r\n\r\n    // otherwise make the first day tabbable\r\n    return item.day === 1;\r\n  }\r\n\r\n}","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { DatePickerMode, DateTimePickerService } from '../date-time-picker.service';\r\n\r\n@Component({\r\n    selector: 'ux-date-time-picker-header',\r\n    template: `<header class=\"header\">\r\n\r\n  <button class=\"header-navigation\"\r\n          (click)=\"previous(); $event.stopPropagation()\"\r\n          [attr.aria-label]=\"previousAria$ | async\"\r\n          tabindex=\"0\">\r\n\r\n    <i class=\"hpe-icon hpe-previous\"></i>\r\n  </button>\r\n\r\n  <button class=\"header-title\"\r\n          [attr.aria-label]=\"headerAria$ | async\"\r\n          [class.active]=\"canAscend$ | async\"\r\n          (click)=\"ascend(); $event.stopPropagation()\"\r\n          [tabindex]=\"(canAscend$ | async) ? 0 : -1\">\r\n       {{ datepicker.header$ | async }}\r\n  </button>\r\n\r\n  <button class=\"header-navigation\"\r\n          (click)=\"next(); $event.stopPropagation()\"\r\n          [attr.aria-label]=\"nextAria$ | async\"\r\n          tabindex=\"0\">\r\n\r\n    <i class=\"hpe-icon hpe-next\"></i>\r\n  </button>\r\n</header>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeaderComponent {\r\n\r\n    canAscend$: Observable<boolean> = this.datepicker.mode$.pipe(map(mode => mode !== DatePickerMode.Year));\r\n    \r\n    mode$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\r\n        switch (mode) {\r\n            case DatePickerMode.Day:\r\n                return 'Day';\r\n            case DatePickerMode.Month:\r\n                return 'Month';\r\n            case DatePickerMode.Year:\r\n                return 'Year';\r\n        }\r\n    }));\r\n\r\n    headerAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\r\n        switch (mode) {\r\n            case DatePickerMode.Day:\r\n                return 'Switch to show months in the year';\r\n            case DatePickerMode.Month:\r\n                return 'Switch to show years in the decade';\r\n            case DatePickerMode.Year:\r\n                return '';\r\n        }\r\n    }));\r\n\r\n    previousAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\r\n        switch (mode) {\r\n            case DatePickerMode.Day:\r\n                return 'Previous month';\r\n            case DatePickerMode.Month:\r\n                return 'Previous year';\r\n            case DatePickerMode.Year:\r\n                return 'Previous decade';\r\n        }\r\n    }));\r\n\r\n    nextAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\r\n        switch (mode) {\r\n            case DatePickerMode.Day:\r\n                return 'Next month';\r\n            case DatePickerMode.Month:\r\n                return 'Next year';\r\n            case DatePickerMode.Year:\r\n                return 'Next decade';\r\n        }\r\n    }));\r\n\r\n    constructor(public datepicker: DateTimePickerService) { }\r\n\r\n    previous(): void {\r\n        this.datepicker.goToPrevious();\r\n    }\r\n\r\n    ascend(): void {\r\n        this.datepicker.goToParentMode();\r\n    }\r\n\r\n    next(): void {\r\n        this.datepicker.goToNext();\r\n    }\r\n}","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription } from 'rxjs';\r\nimport { DateTimePickerService, ModeDirection } from '../date-time-picker.service';\r\nimport { gridify, monthsShort, range } from '../date-time-picker.utils';\r\n\r\n@Injectable()\r\nexport class MonthViewService implements OnDestroy {\r\n\r\n    grid$ = new BehaviorSubject<MonthViewItem[][]>([[]]);\r\n    focused$ = new BehaviorSubject<FocusedMonthItem>(null);\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _datepicker: DateTimePickerService) {\r\n        this._subscription = _datepicker.year$.subscribe(year => this.createMonthGrid(year));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    setFocus(month: number, year: number): void {\r\n        this.focused$.next({ month: month, year: year });\r\n\r\n        // update the viewport to ensure focused month is visible\r\n        this._datepicker.setViewportYear(year);\r\n    }\r\n\r\n    private createMonthGrid(year: number): void {\r\n\r\n        // update the header\r\n        this._datepicker.setHeader(year.toString());\r\n\r\n        // get the current year and month\r\n        const currentMonth = new Date().getMonth();\r\n        const currentYear = new Date().getFullYear();\r\n\r\n        // get the currently selected month\r\n        const activeMonth = this._datepicker.selected$.value.getMonth();\r\n        const activeYear = this._datepicker.selected$.value.getFullYear();\r\n\r\n        // create a 4x3 grid of month numbers\r\n        const months: MonthViewItem[] = range(0, 11).map(month => {\r\n            return {\r\n                name: monthsShort[month],\r\n                month: month,\r\n                year: year,\r\n                isCurrentMonth: year === currentYear && month === currentMonth,\r\n                isActiveMonth: year === activeYear && month === activeMonth\r\n            };\r\n        });\r\n\r\n        // map these to the appropriate format\r\n        const items: MonthViewItem[][] = gridify(months, 4);\r\n\r\n        // update the grid\r\n        this.grid$.next(items);\r\n\r\n        // if there is no focused month select the first one\r\n        if (this._datepicker.modeDirection === ModeDirection.Descend && this.focused$.value === null) {\r\n            \r\n            // check if the selected month is in view\r\n            const selectedMonth = months.find(month => month.isActiveMonth);\r\n\r\n            this.setFocus(selectedMonth ? selectedMonth.month : 0, year);\r\n        }\r\n    }\r\n}\r\n\r\nexport interface MonthViewItem {\r\n    name: string;\r\n    month: number;\r\n    year: number;\r\n    isCurrentMonth: boolean;\r\n    isActiveMonth: boolean;\r\n}\r\n\r\nexport interface FocusedMonthItem {\r\n    month: number;\r\n    year: number;\r\n}","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\r\nimport { MonthViewItem, MonthViewService } from './month-view.service';\r\n\r\n@Component({\r\n    selector: 'ux-date-time-picker-month-view',\r\n    template: `<div class=\"calendar\" role=\"grid\">\r\n  <div class=\"calendar-row\" *ngFor=\"let row of monthService.grid$ | async; trackBy: trackRowByFn\" role=\"row\">\r\n\r\n    <button role=\"gridcell\"\r\n         class=\"calendar-item\"\r\n         *ngFor=\"let item of row; trackBy: trackMonthByFn\"\r\n         [focusIf]=\"(monthService.focused$ | async)?.month === item.month && (monthService.focused$ | async)?.year === item.year\"\r\n         [tabindex]=\"getTabbable(item) ? 0 : -1\"\r\n         [attr.aria-label]=\"item.name + ' ' + item.year\"\r\n         [attr.aria-selected]=\"item.isActiveMonth\"\r\n         [class.active]=\"item.isActiveMonth\"\r\n         [class.current]=\"item.isCurrentMonth\"\r\n         (click)=\"select(item.month); $event.stopPropagation()\"\r\n         (keydown.ArrowLeft)=\"focusMonth(item, -1); $event.preventDefault()\"\r\n         (keydown.ArrowRight)=\"focusMonth(item, 1); $event.preventDefault()\"\r\n         (keydown.ArrowUp)=\"focusMonth(item, -4); $event.preventDefault()\"\r\n         (keydown.ArrowDown)=\"focusMonth(item, 4); $event.preventDefault()\">\r\n         {{ item.name }}\r\n    </button>\r\n  </div>\r\n</div>\r\n`,\r\n    providers: [MonthViewService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MonthViewComponent implements OnDestroy {\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _datePicker: DateTimePickerService, public monthService: MonthViewService) {\r\n        this._subscription = _datePicker.headerEvent$\r\n            .subscribe(event => event === DatePickerHeaderEvent.Next ? this.next() : this.previous());\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Go to the previous year\r\n     */\r\n    previous(): void {\r\n        this._datePicker.setViewportYear(this._datePicker.year$.value - 1);\r\n    }\r\n\r\n    /**\r\n     * Go to the next year\r\n     */\r\n    next(): void {\r\n        this._datePicker.setViewportYear(this._datePicker.year$.value + 1);\r\n    }\r\n\r\n    /**\r\n     * Select a month in the calendar\r\n     * @param month the index of the month to select\r\n     */\r\n    select(month: number): void {\r\n        this._datePicker.setViewportMonth(month);\r\n\r\n        // show the day picker\r\n        this._datePicker.goToChildMode();\r\n    }\r\n\r\n    focusMonth(item: MonthViewItem, monthOffset: number): void {\r\n        let targetMonth = item.month + monthOffset;\r\n        let targetYear = item.year;\r\n\r\n        if (targetMonth < 0) {\r\n            targetMonth += 12;\r\n            targetYear -= 1;\r\n        }\r\n\r\n        if (targetMonth >= 12) {\r\n            targetMonth -= 12;\r\n            targetYear += 1;\r\n        }\r\n\r\n        this.monthService.setFocus(targetMonth, targetYear);\r\n    }\r\n\r\n    trackRowByFn(index: number): number {\r\n        return index;\r\n    }\r\n\r\n    trackMonthByFn(index: number, item: MonthViewItem): string {\r\n        return `${item.month} ${item.year}`;\r\n    }\r\n\r\n    getTabbable(item: MonthViewItem): boolean {\r\n        const focused = this.monthService.focused$.value;\r\n        const grid = this.monthService.grid$.value;\r\n\r\n        // if there is a focused month check if this is it\r\n        if (focused) {\r\n\r\n            // check if the focused month is visible\r\n            const isFocusedMonthVisible = !!grid.find(row => !!row.find(_item => _item.month === focused.month && _item.year === focused.year));\r\n            \r\n            if (isFocusedMonthVisible) {\r\n                return focused.month === item.month && focused.year === item.year;\r\n            }\r\n        }\r\n\r\n        // if there is no focusable month then check if there is a selected month\r\n        const isSelectedMonthVisible = !!grid.find(row => !!row.find(month => month.isActiveMonth));\r\n\r\n        if (isSelectedMonthVisible) {\r\n            return item.isActiveMonth;\r\n        }\r\n\r\n        // otherwise make the first month tabbable\r\n        return item.month === 0;\r\n    }\r\n}","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DateTimePickerService } from '../date-time-picker.service';\r\n\r\n@Component({\r\n    selector: 'ux-date-time-picker-time-view',\r\n    template: `<ux-time-picker *ngIf=\"datepicker.showTime$ | async\"\r\n    [value]=\"datepicker.selected$ | async\"\r\n    (valueChange)=\"datepicker.selected$.next($event)\"\r\n    [showSeconds]=\"datepicker.showSeconds$ | async\"\r\n    [showMeridian]=\"datepicker.showMeridian$ | async\"\r\n    [showSpinners]=\"datepicker.showSpinners$ | async\">\r\n</ux-time-picker>\r\n\r\n<ng-container *ngIf=\"datepicker.showTimezone$ | async\">\r\n\r\n    <div class=\"time-zone-picker\" *ngIf=\"datepicker.showSpinners$ | async\">\r\n\r\n        <ux-spin-button\r\n            class=\"time-zone-spinner\"\r\n            [value]=\"(datepicker.timezone$ | async).name\"\r\n            [readOnly]=\"true\"\r\n            (increment)=\"incrementTimezone()\"\r\n            (decrement)=\"decrementTimezone()\"\r\n            inputAriaLabel=\"Time Zone\"\r\n            incrementAriaLabel=\"Switch to the next time zone\"\r\n            decrementAriaLabel=\"Switch to the previous time zone\">\r\n        </ux-spin-button>\r\n    </div>\r\n\r\n    <div class=\"time-zone-picker\" *ngIf=\"!(datepicker.showSpinners$ | async)\">\r\n\r\n        <select class=\"form-control time-zone-select\"\r\n                tabindex=\"0\"\r\n                [ngModel]=\"(datepicker.timezone$ | async).name\"\r\n                (ngModelChange)=\"selectTimezone($event)\"\r\n                aria-label=\"Timezone\"\r\n                [attr.aria-valuenow]=\"(datepicker.timezone$ | async).name\">\r\n\r\n            <option *ngFor=\"let zone of datepicker.timezones$ | async\"\r\n                    [selected]=\"zone.name === (datepicker.timezone$ | async).name\"\r\n                    [value]=\"zone.name\">\r\n                {{ zone?.name }}\r\n            </option>\r\n\r\n        </select>\r\n    </div>\r\n\r\n</ng-container>\r\n`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimeViewComponent {\r\n\r\n    constructor(public datepicker: DateTimePickerService) { }\r\n\r\n    selectTimezone(name: string): void {\r\n        const timezones = this.datepicker.timezones$.value;\r\n        \r\n        // find matching timezone\r\n        const timezone = timezones.find(_timezone => _timezone.name === name);\r\n\r\n        if (timezone) {\r\n            this.datepicker.setTimezone(timezone);\r\n        }\r\n    }\r\n\r\n    incrementTimezone(): void {\r\n        const timezone = this.datepicker.timezone$.value;\r\n        const timezones = this.datepicker.timezones$.value;\r\n\r\n        const currentZone = timezones.findIndex(zone => zone.name === timezone.name && zone.offset === timezone.offset);\r\n\r\n        // try to get the previous zone\r\n        this.datepicker.setTimezone(timezones[currentZone + 1] ? timezones[currentZone + 1] : timezones[currentZone]);\r\n    }\r\n\r\n    decrementTimezone(): void {\r\n        const timezone = this.datepicker.timezone$.value;\r\n        const timezones = this.datepicker.timezones$.value;\r\n\r\n        const currentZone = timezones.findIndex(zone => zone.name === timezone.name && zone.offset === timezone.offset);\r\n\r\n        // try to get the previous zone\r\n        this.datepicker.setTimezone(timezones[currentZone - 1] ? timezones[currentZone - 1] : timezones[currentZone]);\r\n    }\r\n}","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription } from 'rxjs';\r\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\r\nimport { gridify, range } from '../date-time-picker.utils';\r\n\r\n@Injectable()\r\nexport class YearViewService implements OnDestroy {\r\n\r\n    grid$ = new BehaviorSubject<YearViewItem[][]>([[]]);\r\n    focused$ = new BehaviorSubject<number>(null);\r\n\r\n    private _year: number = new Date().getFullYear();\r\n\r\n    private _subscription = new Subscription();\r\n\r\n    constructor(private _datepicker: DateTimePickerService) {\r\n        const year = _datepicker.year$.subscribe(_year => this.createYearGrid(_year));\r\n\r\n        const event = _datepicker.headerEvent$\r\n            .subscribe(_event => _event === DatePickerHeaderEvent.Next ? this.goToNextDecade() : this.goToPreviousDecade());\r\n\r\n        this._subscription.add(year);\r\n        this._subscription.add(event);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    setFocus(year: number): void {\r\n        this.focused$.next(year);\r\n        this.createYearGrid(year);\r\n    }\r\n\r\n    goToPreviousDecade(): void {\r\n        this.createYearGrid(this._year - 10);\r\n    }\r\n\r\n    goToNextDecade(): void {\r\n        this.createYearGrid(this._year + 10);\r\n    }\r\n\r\n    private createYearGrid(year: number = this._year): void {\r\n\r\n        this._year = year;\r\n\r\n        // get the years to display\r\n        const decade = this.getDecade(year);\r\n\r\n        const currentYear = new Date().getFullYear();\r\n\r\n        // produce items in the correct format\r\n        const items: YearViewItem[] = decade.range.map(_year => {\r\n            return {\r\n                year: _year,\r\n                isCurrentYear: _year === currentYear,\r\n                isActiveYear: _year === this._datepicker.year$.value\r\n            };\r\n        });\r\n\r\n        // update the header text\r\n        this._datepicker.setHeader(decade.start + ' - ' + decade.end);\r\n\r\n        // create the grid\r\n        this.grid$.next(gridify(items, 4));\r\n    }\r\n\r\n    /**\r\n     * Get the years in the current decade to display\r\n     */\r\n    private getDecade(year: number): YearRange {\r\n\r\n        // figure the start and end points\r\n        const start = (year - (year % 10));\r\n        const end = start + 9;\r\n\r\n        // create an array containing all the numbers between the start and end points\r\n        return { start: start, end: end, range: range(start, end) };\r\n    }\r\n}\r\n\r\n\r\nexport interface YearRange {\r\n    start: number;\r\n    end: number;\r\n    range: number[];\r\n}\r\n\r\nexport interface YearViewItem {\r\n    year: number;\r\n    isCurrentYear: boolean;\r\n    isActiveYear: boolean;\r\n}","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { DateTimePickerService } from '../date-time-picker.service';\r\nimport { YearViewItem, YearViewService } from './year-view.service';\r\n\r\n@Component({\r\n  selector: 'ux-date-time-picker-year-view',\r\n  template: `<div class=\"calendar\" role=\"grid\">\r\n  <div class=\"calendar-row\" role=\"row\" *ngFor=\"let row of yearService.grid$ | async; trackBy: trackRowByFn\">\r\n\r\n    <button *ngFor=\"let item of row; trackBy: trackYearByFn\"\r\n         role=\"gridcell\"\r\n         class=\"calendar-item\"\r\n         [focusIf]=\"(yearService.focused$ | async) === item.year\"\r\n         [attr.aria-label]=\"item.year\"\r\n         [attr.aria-selected]=\"item.isActiveYear\"\r\n         [class.current]=\"item.isCurrentYear\"\r\n         [class.active]=\"item.isActiveYear\"\r\n         (click)=\"select(item.year); $event.stopPropagation()\"\r\n         (keydown.ArrowLeft)=\"focusYear(item, -1); $event.preventDefault()\"\r\n         (keydown.ArrowRight)=\"focusYear(item, 1); $event.preventDefault()\"\r\n         (keydown.ArrowUp)=\"focusYear(item, -4); $event.preventDefault()\"\r\n         (keydown.ArrowDown)=\"focusYear(item, 4); $event.preventDefault()\"\r\n         [tabindex]=\"getTabbable(item) ? 0 : -1\">\r\n         {{ item.year }}\r\n    </button>\r\n  </div>\r\n</div>\r\n`,\r\n  providers: [YearViewService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class YearViewComponent {\r\n\r\n  constructor(private _datePicker: DateTimePickerService, public yearService: YearViewService) {}\r\n\r\n  select(year: number): void {\r\n    this._datePicker.setViewportYear(year);\r\n\r\n    // show the month picker\r\n    this._datePicker.goToChildMode();\r\n  }\r\n\r\n  focusYear(item: YearViewItem, yearOffset: number): void {\r\n    this.yearService.setFocus(item.year + yearOffset);\r\n  }\r\n\r\n  trackRowByFn(index: number): number {\r\n    return index;\r\n  }\r\n\r\n  trackYearByFn(index: number, item: YearViewItem): number {\r\n    return item.year;\r\n  }\r\n\r\n  getTabbable(item: YearViewItem): boolean {\r\n    const focused = this.yearService.focused$.value;\r\n    const grid = this.yearService.grid$.value;\r\n\r\n    // if there is a focused year check if this is it\r\n    if (focused) {\r\n\r\n        // check if the focused year is visible\r\n        const isFocusedYearVisible = !!grid.find(row => !!row.find(_item => _item.year === focused));\r\n\r\n        if (isFocusedYearVisible) {\r\n            return focused === item.year;\r\n        }\r\n    }\r\n\r\n    // if there is no focusable year then check if there is a selected year\r\n    const isSelectedYearVisible = !!grid.find(row => !!row.find(year => year.isActiveYear));\r\n\r\n    if (isSelectedYearVisible) {\r\n        return item.isActiveYear;\r\n    }\r\n\r\n    // otherwise make the first month tabbable\r\n    return grid[0][0].year === item.year;\r\n}\r\n\r\n}\r\n","import { Directive, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[focusIf]'\r\n})\r\nexport class FocusIfDirective {\r\n\r\n    @Input() focusIfDelay: number = 0;\r\n\r\n    @Input()\r\n    set focusIf(focus: boolean) {\r\n\r\n        // if a timeout is pending then cancel it\r\n        if (!focus && this._timeout !== null) {\r\n            clearTimeout(this._timeout);\r\n            this._timeout = null;\r\n        }\r\n\r\n        if (focus && this._timeout === null) {\r\n            this._timeout = window.setTimeout(() => {\r\n                this._elementRef.nativeElement.focus();\r\n                this._timeout = null;\r\n            }, this.focusIfDelay);\r\n        }\r\n    }\r\n\r\n    private _timeout: number = null;\r\n\r\n    constructor(private _elementRef: ElementRef) { }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FocusIfDirective } from './focus-if.directive';\r\n\r\n\r\n@NgModule({\r\n    exports: [FocusIfDirective],\r\n    declarations: [FocusIfDirective]\r\n})\r\nexport class FocusIfModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SpinButtonModule } from '../spin-button/index';\r\nimport { TimePickerModule } from '../time-picker/index';\r\nimport { DateTimePickerComponent } from './date-time-picker.component';\r\nimport { DateTimePickerConfig } from './date-time-picker.config';\r\nimport { DayViewComponent } from './day-view/day-view.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { MonthViewComponent } from './month-view/month-view.component';\r\nimport { TimeViewComponent } from './time-view/time-view.component';\r\nimport { YearViewComponent } from './year-view/year-view.component';\r\nimport { FocusIfModule } from '../../directives/focus-if/index';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        TimePickerModule,\r\n        SpinButtonModule,\r\n        FocusIfModule\r\n    ],\r\n    exports: [DateTimePickerComponent],\r\n    declarations: [DateTimePickerComponent, HeaderComponent, DayViewComponent, MonthViewComponent, YearViewComponent, TimeViewComponent],\r\n    providers: [\r\n        DateTimePickerConfig\r\n    ]\r\n})\r\nexport class DateTimePickerModule { }\r\n","import { ChangeDetectionStrategy, Component, Directive } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-ebox',\r\n    template: `<div class=\"ux-ebox-header\">\r\n    <ng-content select=\"ux-ebox-header\"></ng-content>\r\n</div>\r\n\r\n<div class=\"ux-ebox-content\">\r\n    <ng-content select=\"ux-ebox-content\"></ng-content>\r\n</div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EboxComponent { }\r\n\r\n@Directive({\r\n    selector: 'ux-ebox-header'\r\n})\r\nexport class EboxHeaderDirective { }\r\n\r\n@Directive({\r\n    selector: 'ux-ebox-content'\r\n})\r\nexport class EboxContentDirective { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\r\n\r\n@NgModule({\r\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\r\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\r\n})\r\nexport class EboxModule { }\r\n","import { Facet } from './models/facet';\r\n\r\nexport class FacetSelect {\r\n    constructor(public facet: Facet) {}\r\n}\r\n\r\nexport class FacetDeselect {\r\n    constructor(public facet: Facet) {}\r\n}\r\n\r\nexport class FacetDeselectAll {\r\n    constructor() {}\r\n}\r\n\r\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\r\nimport { Facet } from './models/facet';\r\n\r\n@Component({\r\n    selector: 'ux-facet-container',\r\n    template: `<!-- Display Any Selected Facets -->\r\n<div class=\"facets-selected-container\">\r\n\r\n    <!-- Display Title an Clear Button -->\r\n    <div class=\"facets-selected-header-container\">\r\n\r\n        <!-- Show The Selected Text -->\r\n        <span class=\"facets-selected-header-label\">{{ header }}</span>\r\n\r\n        <!-- Add a Clear Button -->\r\n        <div class=\"facets-selected-clear-button\" tabindex=\"0\" [uxTooltip]=\"clearTooltip\" placement=\"left\" (click)=\"deselectAllFacets()\"\r\n            (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\r\n\r\n            <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\r\n                <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\r\n                <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\r\n                <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\r\n                <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\r\n                <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\r\n            </svg>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Display Tags For Selected Items -->\r\n    <div class=\"facets-selected-list\" uxReorderable [reorderingDisabled]=\"!facetsReorderable\" [(reorderableModel)]=\"facets\" (reorderableModelChange)=\"facetsChange.emit(facets)\">\r\n\r\n        <!-- Show Selected Tags -->\r\n        <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\"\r\n             [uxReorderableModel]=\"facet\">\r\n\r\n            <!-- Display Label -->\r\n            <span class=\"facet-selected-tag-label\" uxReorderableHandle>{{ facet.title }}</span>\r\n\r\n            <!-- Display Remove Icon -->\r\n            <span class=\"hpe-icon hpe-close\"></span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Show Message Here if No Facets Selected -->\r\n    <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\r\n\r\n</div>\r\n\r\n<!-- Any Facet Elements Should be Added Here By User -->\r\n<div class=\"facets-region\">\r\n    <ng-content></ng-content>\r\n</div>`\r\n})\r\nexport class FacetContainerComponent {\r\n\r\n    @Input() header: string = 'Selected:';\r\n    @Input() clearTooltip: string = 'Clear All';\r\n    @Input() emptyText: string = 'No Items';\r\n    @Input() facets: Facet[] = [];\r\n    @Input() facetsReorderable: boolean = false;\r\n\r\n    @Output() facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\r\n    @Output() events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\r\n\r\n    selectFacet(facet: Facet): void {\r\n        // push the facet on to the list\r\n        this.facets.push(facet);\r\n\r\n        // update the two way binding\r\n        this.facetsChange.emit(this.facets);\r\n\r\n        // trigger event\r\n        this.triggerEvent(new FacetSelect(facet));\r\n    }\r\n\r\n    deselectFacet(facet: Facet): void {\r\n\r\n        // find the index of the item in the selected array\r\n        let idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\r\n\r\n        // if match there was no match then finish\r\n        if (idx === -1) {\r\n            return;\r\n        }\r\n\r\n        // remove the last item\r\n        this.facets.splice(idx, 1);\r\n\r\n        // update the two way binding\r\n        this.facetsChange.emit(this.facets);\r\n\r\n        // trigger event\r\n        this.triggerEvent(new FacetDeselect(facet));\r\n    }\r\n\r\n    deselectAllFacets(): void {\r\n\r\n        // empty the selected array\r\n        this.facets = [];\r\n\r\n        // update the two way binding\r\n        this.facetsChange.emit(this.facets);\r\n\r\n        // trigger event\r\n        this.triggerEvent(new FacetDeselectAll());\r\n    }\r\n\r\n    private triggerEvent(event: FacetEvent) {\r\n        this.events.next(event);\r\n    }\r\n}","import { Component, ElementRef, EventEmitter, Host, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { FacetContainerComponent } from '../../facet-container.component';\r\nimport { FacetDeselect, FacetDeselectAll, FacetEvent, FacetSelect } from '../../facet-events';\r\nimport { Facet } from '../../models/facet';\r\n\r\n@Component({\r\n    selector: 'ux-facet-base',\r\n    template: '',\r\n})\r\nexport class FacetBaseComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() selected: Facet[] = [];\r\n    @Output() selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\r\n    @Output() events: Subject<FacetEvent> = new Subject<FacetEvent>();\r\n\r\n    protected _onDestroy = new Subject<void>();\r\n\r\n    constructor( @Host() private facetContainer: FacetContainerComponent, public _elementRef: ElementRef) {\r\n\r\n        if (facetContainer) {\r\n\r\n            // subscribe to any deselect events from the facet container\r\n            facetContainer.events.pipe(\r\n                filter(event => event instanceof FacetDeselect),\r\n                filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet)),\r\n                takeUntil(this._onDestroy)\r\n            ).subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\r\n\r\n            // subscribe to any deselect all events from facet container\r\n            facetContainer.events.pipe(\r\n                filter(event => event instanceof FacetDeselectAll),\r\n                takeUntil(this._onDestroy)\r\n            ).subscribe(_ => this.deselectAll());\r\n\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // check if there should be any facets initially selected\r\n        if (this.facetContainer) {\r\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n    }\r\n\r\n    selectFacet(facet: Facet): void {\r\n\r\n        // if the facet is disabled it should not be selected\r\n        if (facet.disabled) {\r\n            return;\r\n        }\r\n\r\n        // add the facet to the list of selected facets\r\n        this.selected.push(facet);\r\n\r\n        // send the new value to the event emitter\r\n        this.selectedChange.emit(this.selected);\r\n\r\n        // fire the event to the observable\r\n        this.triggerEvent(new FacetSelect(facet));\r\n\r\n        // tell the facet container about the selected facet\r\n        if (this.facetContainer) {\r\n            this.facetContainer.selectFacet(facet);\r\n        }\r\n    }\r\n\r\n    deselectFacet(facet: Facet): void {\r\n\r\n        // find facet to remove\r\n        let index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\r\n\r\n        // only continue if facet is found\r\n        if (index !== -1) {\r\n\r\n            // remove the facet from the selected list\r\n            this.selected.splice(index, 1);\r\n\r\n            // emit the changes to selected event emitter\r\n            this.selectedChange.emit(this.selected);\r\n\r\n            // fire the event to the observable\r\n            this.triggerEvent(new FacetDeselect(facet));\r\n\r\n            // deselect the facet in the facet container\r\n            if (this.facetContainer) {\r\n                this.facetContainer.deselectFacet(facet);\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectAll(): void {\r\n\r\n        // remove all selected facets\r\n        this.selected = [];\r\n\r\n        // fire the event to the observable\r\n        this.triggerEvent(new FacetDeselectAll());\r\n\r\n        // emit the changes to the selected event emitter\r\n        this.selectedChange.emit(this.selected);\r\n    }\r\n\r\n    toggleFacetSelection(facet: Facet): void {\r\n\r\n        // if the facet is selected then deselect - otherwise select it\r\n        if (this.isFacetSelected(facet)) {\r\n            this.deselectFacet(facet);\r\n        } else {\r\n            this.selectFacet(facet);\r\n        }\r\n\r\n    }\r\n\r\n    isFacetSelected(facet: Facet): boolean {\r\n        // determine if a facet is currently selected\r\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\r\n    }\r\n\r\n    private triggerEvent(event: FacetEvent): void {\r\n        this.events.next(event);\r\n    }\r\n}","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-facet-header',\r\n    template: `<span class=\"facet-header-title\">{{ header }}</span>\r\n<span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>`,\r\n    host: {\r\n        'tabindex': '0',\r\n        '(click)': 'toggleExpand()',\r\n        '(keyup.enter)': 'toggleExpand()'\r\n    }\r\n})\r\nexport class FacetHeaderComponent {\r\n\r\n    @Input() header: string;\r\n    @Input() canExpand: boolean = true;    \r\n    @Input() expanded: boolean = true;\r\n    @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    toggleExpand(): void {\r\n\r\n        // if not expandable then do nothing\r\n        if (this.canExpand) {\r\n            this.expanded = !this.expanded;\r\n            this.expandedChange.emit(this.expanded);\r\n        }\r\n    }\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\r\nimport { Facet } from '../models/facet';\r\n\r\n@Component({\r\n    selector: 'ux-facet-check-list',\r\n    template: `<ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\r\n\r\n<!-- Create a container which will show when section is expanded -->\r\n<div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\r\n\r\n    <!-- Iterate through each possible facet -->\r\n    <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\r\n        (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\r\n\r\n        <!-- Show check icon to indicate the state -->\r\n        <span class=\"facet-check-list-item-check\">\r\n            <span class=\"hpe-icon hpe-active\"></span>\r\n        </span>\r\n\r\n        <!-- Display the title -->\r\n        <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\r\n\r\n        <!-- Display the count if specified -->\r\n        <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\r\n    </div>\r\n</div>`\r\n})\r\nexport class FacetCheckListComponent extends FacetBaseComponent {\r\n\r\n    @Input() facets: Facet[] = [];\r\n    @Input() header: string;\r\n    @Input() scrollbar: boolean = true;\r\n    @Input() expanded: boolean = true;\r\n}","import { Component, Input, OnInit, Pipe, PipeTransform } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\r\nimport { Observable ,  from ,  of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\r\nimport { Facet } from '../models/facet';\r\n\r\n@Component({\r\n    selector: 'ux-facet-typeahead-list',\r\n    template: `<ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\r\n\r\n<div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\r\n\r\n    <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\r\n\r\n        <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\r\n            (keyup.enter)=\"toggleFacetSelection(facet)\">\r\n\r\n            <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\r\n                <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\r\n                <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\r\n            </ux-checkbox>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"facet-typeahead-list-control\">\r\n\r\n        <!-- Create Typeahead Control -->\r\n        <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\r\n            [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\r\n            (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\r\n    <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\r\n            *ngIf=\"model.count\">({{ model.count }})</span></p>\r\n</ng-template>`\r\n})\r\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\r\n\r\n    @Input() facets: Facet[] | Observable<Facet[]>;\r\n    @Input() header: string;\r\n    @Input() expanded: boolean = true;\r\n    @Input() typeaheadConfig: FacetTypeaheadListConfig = {};\r\n    @Input() suggestions: Facet[] = [];\r\n    @Input() simplified: boolean = true;\r\n\r\n    typeaheadOptions: Observable<Facet[]>;\r\n    searchQuery: string;\r\n\r\n    private _nativeElement: HTMLElement = this._elementRef.nativeElement as HTMLElement;\r\n    private _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\r\n        placeholder: '',\r\n        maxResults: 50,\r\n        minCharacters: 1\r\n    };\r\n\r\n    ngOnInit() {\r\n\r\n        // wrap the observable and filter out any already selected items or any disabled items\r\n        if (this.facets instanceof Observable) {\r\n\r\n            // handle an observable of data\r\n            this.typeaheadOptions = from(this.facets).pipe(map((facets: Facet[]) => {\r\n\r\n                // remove disabled facets, selected facets and facets that dont match search term\r\n                return facets.filter(facet => !facet.disabled)\r\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\r\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\r\n            }));\r\n\r\n        } else {\r\n\r\n            // handle an array of data\r\n            this.typeaheadOptions = of(this.facets).pipe(map((facets: Facet[]) => {\r\n\r\n                // remove disabled facets, selected facets and facets that dont match search term\r\n                return facets.filter(facet => !facet.disabled)\r\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\r\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\r\n            }));\r\n        }\r\n\r\n        // provide default values for typeahead config\r\n        for (let prop in this._defaultTypeaheadConfig) {\r\n\r\n            // check if prop has been defined in the users typeahead config - if not set default value\r\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\r\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    selectOption(typeaheadOption: TypeaheadMatch) {\r\n\r\n        // check to make sure that the item is not currently selected\r\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\r\n            return;\r\n        }\r\n\r\n        // select the facet\r\n        this.selectFacet(typeaheadOption.item);\r\n\r\n        // clear the typeahead\r\n        this.searchQuery = '';\r\n    }\r\n\r\n    scrollToFocused(): void {\r\n\r\n        let dropdown = this._nativeElement.querySelector('.dropdown-menu');\r\n\r\n        // delay to allow the typeahead ui to update\r\n        setTimeout(() => {\r\n\r\n            // find the currently active element if there is one\r\n            let activeElement = dropdown.querySelector('.dropdown-menu > li.active');\r\n\r\n            if (activeElement) {\r\n\r\n                // check if element is not in view\r\n                let elementBounds = activeElement.getBoundingClientRect();\r\n                let dropdownBounds = dropdown.getBoundingClientRect();\r\n\r\n                if (elementBounds.top < dropdownBounds.top) {\r\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\r\n                }\r\n\r\n                if (elementBounds.bottom > dropdownBounds.bottom) {\r\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport interface FacetTypeaheadListConfig {\r\n    placeholder?: string;\r\n    minCharacters?: number;\r\n    maxResults?: number;\r\n    delay?: number;\r\n}\r\n\r\n@Pipe({\r\n    name: 'facetTypeaheadHighlight'\r\n})\r\nexport class FacetTypeaheadHighlight implements PipeTransform {\r\n    transform(value: string, searchQuery: string): string {\r\n        let regex = new RegExp(searchQuery, 'i');\r\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\r\n    }\r\n}","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, TemplateRef, OnDestroy } from '@angular/core';\r\nimport { AnchorPlacement } from './tooltip.directive';\r\nimport { Subject } from 'rxjs';\r\n\r\nlet uniqueTooltipId = 0;\r\n\r\n@Component({\r\n  selector: 'ux-tooltip',\r\n  template: `<div class=\"tooltip in\" [id]=\"id\" [attr.role]=\"role\" [ngClass]=\"[placement, customClass]\">\r\n    <div class=\"tooltip-arrow\"></div>\r\n    <div class=\"tooltip-inner\" (cdkObserveContent)=\"reposition()\">\r\n        <ng-container *ngIf=\"!isTemplateRef\">{{ content }}</ng-container>\r\n        <ng-container *ngIf=\"isTemplateRef\" [ngTemplateOutlet]=\"content\" [ngTemplateOutletContext]=\"context\"></ng-container>\r\n    </div>\r\n</div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TooltipComponent implements OnDestroy {\r\n\r\n  /** Define a unique id for each tooltip */\r\n  id: string = `ux-tooltip-${++uniqueTooltipId}`;\r\n\r\n  /** Define the tooltip role */\r\n  role: string = 'tooltip';\r\n\r\n  /** The content of the tooltip, either a string or a TemplateRef for further customization */\r\n  content: string | TemplateRef<any>;\r\n\r\n  /** Allow the user to supply a context for the tooltip TemplateRef */\r\n  context: any;\r\n\r\n  /** The position the tooltip should display relative to the associated element */\r\n  placement: AnchorPlacement;\r\n\r\n  /** Allow a custom class to be added to the tooltip to allow custom styling */\r\n  customClass: string = '';\r\n\r\n  /** Indicates whether or not the content is a string or a TemplateRef */\r\n  isTemplateRef: boolean = false;\r\n\r\n  /** Emit when the tooltip need to update it's position */\r\n  reposition$ = new Subject<void>();\r\n\r\n  constructor(protected _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  /** Cleanup after the component is destroyed */\r\n  ngOnDestroy(): void {\r\n    this.reposition$.complete();\r\n  }\r\n\r\n  /** Inform the parent directive that it needs to recalulate the position */\r\n  reposition(): void {\r\n    this.reposition$.next();\r\n  }\r\n\r\n  /** This will update the content of the tooltip and trigger change detection */\r\n  setContent(content: string | TemplateRef<any>): void {\r\n    this.content = content;\r\n    this.isTemplateRef = content instanceof TemplateRef;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** This will update the tooltip placement and trigger change detection */\r\n  setPlacement(placement: AnchorPlacement) {\r\n\r\n    if (!placement) {\r\n      return;\r\n    }\r\n\r\n    this.placement = placement;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** This will set a custom class on the tooltip and trigger change detection */\r\n  setClass(customClass: string): void {\r\n\r\n    if (!customClass) {\r\n      return;\r\n    }\r\n\r\n    this.customClass = customClass;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Updates the context used by the TemplateRef */\r\n  setContext(context: any): void {\r\n\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    this.context = context;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Specify the tooltip role attribute */\r\n  setRole(role: string): void {\r\n\r\n    if (!role) {\r\n      return;\r\n    }\r\n\r\n    this.role = role;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { TooltipComponent } from './tooltip.component';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TooltipService {\r\n    shown$ = new Subject<TooltipComponent>();\r\n}","import { OriginConnectionPosition, Overlay, OverlayConnectionPosition, OverlayRef, ScrollDispatcher } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { Subject ,  fromEvent } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { TooltipComponent } from './tooltip.component';\r\nimport { TooltipService } from './tooltip.service';\r\n\r\n@Directive({\r\n    selector: '[uxTooltip]',\r\n    exportAs: 'ux-tooltip'\r\n})\r\nexport class TooltipDirective implements OnInit, OnChanges, OnDestroy {\r\n\r\n    /** Contains the content of the tooltip or a TemplateRef for more detailed content */\r\n    @Input('uxTooltip') content: string | TemplateRef<any>;\r\n\r\n    /** Allow the tooltip to be conditionally disabled */\r\n    @Input('tooltipDisabled') disabled: boolean;\r\n\r\n    /** All the user to add a custom class to the tooltip */\r\n    @Input('tooltipClass') customClass: string = '';\r\n\r\n    /** All the user to add a role to the tooltip - default is tooltip */\r\n    @Input('tooltipRole') role: string = 'tooltip';\r\n\r\n    /** Provide the TemplateRef a context object */\r\n    @Input('tooltipContext') context: any = {};\r\n\r\n    /** Delay the showing of the tooltip by a number of miliseconds */\r\n    @Input('tooltipDelay') delay: number = 0;\r\n\r\n    /** Programmatically show and hide the tooltip */\r\n    @Input() isOpen: boolean = false;\r\n\r\n    /** Customize how the tooltip should be positioned relative to the element */\r\n    @Input() placement: AnchorPlacement = 'top';\r\n\r\n    /** Specify which events should show the tooltip */\r\n    @Input() showTriggers: string[] = ['mouseenter', 'focus'];\r\n\r\n    /** Specify which events should hide the tooltip */\r\n    @Input() hideTriggers: string[] = ['mouseleave', 'blur'];\r\n\r\n    /** Emits an event when the tooltip is shown */\r\n    @Output() shown = new EventEmitter<void>();\r\n\r\n    /** Emits a event when the tooltip is hidden */\r\n    @Output() hidden = new EventEmitter<void>();\r\n\r\n    /** Allow two way binding to track the visibility of the tooltip */\r\n    @Output() isOpenChange = new EventEmitter<boolean>();\r\n\r\n    /** Keep track of the tooltip visibility */\r\n    isVisible: boolean = false;\r\n\r\n    /** A reference to the CDK portal containing the overlay */\r\n    protected _portal: ComponentPortal<TooltipComponent>;\r\n\r\n    /** A reference to the overlay the tooltip will be inserted into */\r\n    protected _overlayRef: OverlayRef;\r\n\r\n    /** A reference to the instance of the tooltip component when created */\r\n    protected _instance: TooltipComponent;\r\n\r\n    /** This will emit when the directive is destroyed allowing us to unsubscribe all subscriptions automatically */\r\n    protected _onDestroy = new Subject<void>();\r\n\r\n    /** Store the timeout interval for cancelation */\r\n    private _showTimeoutId: number;\r\n\r\n    /** Internally store the type of this component - usual for distinctions when extending this class */\r\n    protected _type: string = 'tooltip';\r\n\r\n    constructor(\r\n        protected _elementRef: ElementRef,\r\n        protected _viewContainerRef: ViewContainerRef,\r\n        protected _overlay: Overlay,\r\n        protected _scrollDispatcher: ScrollDispatcher,\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _renderer: Renderer2,\r\n        private _tooltipService: TooltipService\r\n    ) { }\r\n\r\n    /** Set up the triggers and bind to the show/hide events to keep visibility in sync */\r\n    ngOnInit(): void {\r\n\r\n        // set up show and hide event triggers\r\n        fromEvent(this._elementRef.nativeElement, 'click').pipe(takeUntil(this._onDestroy)).subscribe(this.onClick.bind(this));\r\n        fromEvent(this._elementRef.nativeElement, 'mouseenter').pipe(takeUntil(this._onDestroy)).subscribe(this.onMouseEnter.bind(this));\r\n        fromEvent(this._elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._onDestroy)).subscribe(this.onMouseLeave.bind(this));\r\n        fromEvent(this._elementRef.nativeElement, 'focus').pipe(takeUntil(this._onDestroy)).subscribe(this.onFocus.bind(this));\r\n        fromEvent(this._elementRef.nativeElement, 'blur').pipe(takeUntil(this._onDestroy)).subscribe(this.onBlur.bind(this));\r\n\r\n        // when any other tooltips open hide this one\r\n        this._tooltipService.shown$.pipe(\r\n            filter(() => this._type === 'tooltip'),\r\n            filter(tooltip => tooltip !== this._instance),\r\n            takeUntil(this._onDestroy)\r\n        ).subscribe(this.hide.bind(this));\r\n\r\n        // if the tooltip should be initially visible then open it\r\n        if (this.isOpen) {\r\n            this.show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * We need to send input changes to the tooltip component\r\n     * We can't use setters as they may trigger before tooltip initialised and can't resend once initialised\r\n     **/\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n        // we can ignore the first change as it's handled in ngOnInit\r\n        if (changes.isOpen && !changes.isOpen.firstChange && changes.isOpen.currentValue !== this.isVisible) {\r\n            changes.isOpen.currentValue ? this.show() : this.hide();\r\n        }\r\n\r\n        // destroy the overlay ref so a new correctly positioned instance will be created next time\r\n        if (changes.placement) {\r\n            this.destroyOverlay();\r\n        }\r\n\r\n        if (this._instance && changes.placement) {\r\n            this._instance.setPlacement(changes.placement.currentValue);\r\n        }\r\n\r\n        if (this._instance && changes.content) {\r\n            this._instance.setContent(changes.content.currentValue);\r\n        }\r\n\r\n        if (this._instance && changes.customClass) {\r\n            this._instance.setClass(changes.customClass.currentValue);\r\n        }\r\n\r\n        if (this._instance && changes.context) {\r\n            this._instance.setContext(changes.context.currentValue);\r\n        }\r\n\r\n        if (this._instance && changes.role) {\r\n            this._instance.setContext(changes.role.currentValue);\r\n        }\r\n    }\r\n\r\n    /** Ensure we clean up after ourselves */\r\n    ngOnDestroy(): void {\r\n\r\n        // ensure we close the tooltip when the host is destroyed\r\n        if (this._overlayRef) {\r\n            this._overlayRef.dispose();\r\n            this._instance = null;\r\n        }\r\n\r\n        // emit this event to automatically unsubscribe from all subscriptions\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n    }\r\n\r\n    /** Make the tooltip open */\r\n    show(): void {\r\n\r\n        // if the tooltip is disabled then do nothing\r\n        if (this.disabled || this.isVisible || this._showTimeoutId || !this.content) {\r\n            return;\r\n        }\r\n\r\n        // delay the show by the delay amount\r\n        this._showTimeoutId = window.setTimeout(() => {\r\n\r\n            // create the tooltip and get the overlay ref\r\n            const overlayRef = this.createOverlay();\r\n\r\n            // create the portal to create the tooltip component\r\n            this._portal = this.createPortal();\r\n            this._instance = this.createInstance(overlayRef);\r\n\r\n            // watch for any changes to the content\r\n            this._instance.reposition$.pipe(takeUntil(this._onDestroy)).subscribe(this.reposition.bind(this));\r\n\r\n            // store the visible state\r\n            this.isVisible = true;\r\n\r\n            // ensure the overlay has the correct initial position\r\n            this.reposition();\r\n\r\n            // emit the show events\r\n            this.shown.emit();\r\n            this.isOpenChange.next(true);\r\n\r\n            // clear the interval id\r\n            this._showTimeoutId = null;\r\n\r\n            // emit the show event to close any other tooltips\r\n            this._tooltipService.shown$.next(this._instance);\r\n\r\n            // ensure change detection is run\r\n            this._changeDetectorRef.detectChanges();\r\n        }, this.delay);\r\n\r\n    }\r\n\r\n    /** If a tooltip exists and is visible, hide it */\r\n    hide() {\r\n\r\n        // if we are waiting to show a tooltip then cancel the pending timeout\r\n        if (this._showTimeoutId) {\r\n            clearTimeout(this._showTimeoutId);\r\n            this._showTimeoutId = null;\r\n            return;\r\n        }\r\n\r\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\r\n            this._overlayRef.detach();\r\n        }\r\n\r\n        this.setAriaDescribedBy(null);\r\n        this._instance = null;\r\n\r\n        // store the visible state\r\n        this.isVisible = false;\r\n\r\n        // emit the hide events\r\n        this.hidden.emit();\r\n        this.isOpenChange.next(false);\r\n\r\n        // ensure change detection is run\r\n        this._changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    /** Toggle the visibility of the tooltip */\r\n    toggle(): void {\r\n        this.isVisible ? this.hide() : this.show();\r\n    }\r\n\r\n    /** Recalculate the position of the popover */\r\n    reposition(): void {\r\n        if (this.isVisible && this._overlayRef) {\r\n            this._overlayRef.updatePosition();\r\n        }\r\n    }\r\n\r\n    /** Create an instance from the overlay ref - allows overriding and additional logic here */\r\n    protected createInstance(overlayRef: OverlayRef): TooltipComponent {\r\n        const instance = overlayRef.attach(this._portal).instance as TooltipComponent;\r\n\r\n        // supply the tooltip with the correct properties\r\n        instance.setContent(this.content);\r\n        instance.setPlacement(this.placement);\r\n        instance.setClass(this.customClass);\r\n        instance.setContext(this.context);\r\n        instance.setRole(this.role);\r\n\r\n        // Update the aria-describedby attribute\r\n        this.setAriaDescribedBy(instance.id);\r\n\r\n        return instance;\r\n    }\r\n\r\n    /** Create the component portal - allows overriding to allow other portals eg. popovers */\r\n    protected createPortal(): ComponentPortal<any> {\r\n        return this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\r\n    }\r\n\r\n    /** Create the overlay and set up the scroll handling behavior */\r\n    private createOverlay(): OverlayRef {\r\n\r\n        // if the tooltip has already been created then just return the existing instance\r\n        if (this._overlayRef) {\r\n            return this._overlayRef;\r\n        }\r\n\r\n        // configure the tooltip\r\n        const strategy = this._overlay.position()\r\n            .connectedTo(this._elementRef, this.getOrigin(), this.getOverlayPosition());\r\n\r\n        // correctly handle scrolling\r\n        const scrollableAncestors = this._scrollDispatcher\r\n            .getAncestorScrollContainers(this._elementRef);\r\n\r\n        strategy.withScrollableContainers(scrollableAncestors);\r\n\r\n        this._overlayRef = this._overlay.create({\r\n            positionStrategy: strategy,\r\n            panelClass: 'ux-overlay-pane',\r\n            scrollStrategy: this._overlay.scrollStrategies.reposition({ scrollThrottle: 0 }),\r\n            hasBackdrop: false\r\n        });\r\n\r\n        return this._overlayRef;\r\n    }\r\n\r\n    /** Recreate the overlay ref using the updated origin and overlay positions */\r\n    private destroyOverlay(): void {\r\n\r\n        // destroy the existing overlay\r\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\r\n            this._overlayRef.detach();\r\n        }\r\n\r\n        if (this._overlayRef) {\r\n            this._overlayRef.dispose();\r\n            this._overlayRef = null;\r\n        }\r\n\r\n        this.isVisible = false;\r\n    }\r\n\r\n    /** Get the origin position based on the specified tooltip placement */\r\n    private getOrigin(): OriginConnectionPosition {\r\n\r\n        // ensure placement is defined\r\n        this.placement = this.placement || 'top';\r\n\r\n        if (this.placement == 'top' || this.placement == 'bottom') {\r\n            return { originX: 'center', originY: this.placement };\r\n        } else if (this.placement == 'left') {\r\n            return { originX: 'start', originY: 'center' };\r\n        } else if (this.placement == 'right') {\r\n            return { originX: 'end', originY: 'center' };\r\n        }\r\n    }\r\n\r\n    /** Calculate the overlay position based on the specified tooltip placement */\r\n    private getOverlayPosition(): OverlayConnectionPosition {\r\n\r\n        // ensure placement is defined\r\n        this.placement = this.placement || 'top';\r\n\r\n        if (this.placement == 'top') {\r\n            return { overlayX: 'center', overlayY: 'bottom' };\r\n        } else if (this.placement == 'bottom') {\r\n            return { overlayX: 'center', overlayY: 'top' };\r\n        } else if (this.placement == 'left') {\r\n            return { overlayX: 'end', overlayY: 'center' };\r\n        } else if (this.placement == 'right') {\r\n            return { overlayX: 'start', overlayY: 'center' };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Simple utility method - because IE doesn't support array.includes\r\n     * And it isn't included in the core-js/es6 polyfills which are the\r\n     * only ones required by Angular and guaranteed to be there\r\n     **/\r\n    protected includes<T>(array: Array<T>, value: T): boolean {\r\n        return Array.isArray(array) && !!array.find(item => item === value);\r\n    }\r\n\r\n    /** Handle the click event - show or hide accordingly */\r\n    protected onClick(event: MouseEvent): void {\r\n\r\n        // if its not visible and click is a show trigger open it\r\n        if (!this.isVisible && this.includes(this.showTriggers, 'click')) {\r\n            return this.show();\r\n        }\r\n\r\n        // if its visible and click is a hide trigger close it\r\n        if (this.isVisible && this.includes(this.hideTriggers, 'click')) {\r\n            return this.hide();\r\n        }\r\n\r\n    }\r\n\r\n    /** Handle the mouse enter event - show or hide accordingly */\r\n    protected onMouseEnter(event: MouseEvent): void {\r\n\r\n        // this is an show only trigger - if already open or it isn't a trigger do nothing\r\n        if (this.isVisible || !this.includes(this.showTriggers, 'mouseenter')) {\r\n            return;\r\n        }\r\n\r\n        // otherwise open the tooltip\r\n        this.show();\r\n    }\r\n\r\n    /** Handle the mouse leave event - show or hide accordingly */\r\n    protected onMouseLeave(event: MouseEvent): void {\r\n\r\n        // this is an hide only trigger - if not open or it isn't a trigger do nothing\r\n        if (!this.isVisible || !this.includes(this.hideTriggers, 'mouseleave')) {\r\n            return;\r\n        }\r\n\r\n        // otherwise close the tooltip\r\n        this.hide();\r\n    }\r\n\r\n    /** Handle the focus event - show or hide accordingly */\r\n    protected onFocus(event: Event): void {\r\n\r\n        // this is an show only trigger - if already open or it isn't a trigger do nothing\r\n        if (this.isVisible || !this.includes(this.showTriggers, 'focus')) {\r\n            return;\r\n        }\r\n\r\n        // otherwise open the tooltip\r\n        this.show();\r\n    }\r\n\r\n    /** Handle the blur event - show or hide accordingly */\r\n    protected onBlur(event: Event): void {\r\n\r\n        // this is an hide only trigger - if not open or it isn't a trigger do nothing\r\n        if (!this.isVisible || !this.includes(this.hideTriggers, 'blur')) {\r\n            return;\r\n        }\r\n\r\n        // otherwise close the tooltip\r\n        this.hide();\r\n    }\r\n\r\n    /** Determine if the trigger element is focused */\r\n    private isFocused(): boolean {\r\n        return document.activeElement === this._elementRef.nativeElement;\r\n    }\r\n\r\n    /** Programmatically update the aria-describedby property */\r\n    protected setAriaDescribedBy(id: string | null): void {\r\n        if (id === null) {\r\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\r\n        } else {\r\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', id);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport type AnchorPlacement = 'top' | 'right' | 'bottom' | 'left';","import { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TooltipComponent } from './tooltip.component';\r\nimport { TooltipDirective } from './tooltip.directive';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { TooltipService } from './tooltip.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    ObserversModule\r\n  ],\r\n  exports: [TooltipDirective],\r\n  declarations: [TooltipComponent, TooltipDirective],\r\n  providers: [TooltipService],\r\n  entryComponents: [TooltipComponent]\r\n})\r\nexport class TooltipModule { }\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[uxReorderableHandle]'\r\n})\r\nexport class ReorderableHandleDirective { }\r\n","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[uxReorderableModel]'\r\n})\r\nexport class ReorderableModelDirective {\r\n\r\n    // allow the user to specify a model for the item - allows use with ngFor\r\n    @Input() uxReorderableModel: any;\r\n\r\n    // this can be used to identify which instance of the directive relates to which element\r\n    constructor(public elementRef: ElementRef) { }\r\n}\r\n","// WORKAROUND: Angular Cli 6 has removed the globals patch, dragular requires this to we can patch it here\r\n(<any>window).global = (<any>window).global || {};\r\n\r\n// WORKAROUND: ng-packagr issue - https://github.com/dherges/ng-packagr/issues/163\r\nimport * as dragulaNamespace from 'dragula';\r\nimport { Drake } from 'dragula';\r\n\r\nexport const dragula: (containers?: any, options?: any) => Drake = (dragulaNamespace as any).default || dragulaNamespace;","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Drake, DragulaOptions } from 'dragula';\r\nimport { dragula } from './dragula';\r\n\r\n@Injectable()\r\nexport class ReorderableService {\r\n\r\n    private _groups: { [k: string]: ReorderableGroup } = {};\r\n    private _uniqueGroupId = 0;\r\n\r\n    /**\r\n     * Returns a unique string which can be used as a group name if one was not configured.\r\n     */\r\n    getUniqueGroupName(): string {\r\n        return '_uxReorderable_' + this._uniqueGroupId++;\r\n    }\r\n\r\n    /**\r\n     * Adds the container to the named group.\r\n     */\r\n    register(groupName: string, container: ReorderableContainer): ReorderableGroup {\r\n\r\n        if (!this._groups[groupName]) {\r\n            this._groups[groupName] = new ReorderableGroup();\r\n        }\r\n\r\n        this._groups[groupName].register(container);\r\n\r\n        return this._groups[groupName];\r\n    }\r\n\r\n    /**\r\n     * Removes the container from the named group. If it was the last container in the group, destroys the group.\r\n     */\r\n    unregister(groupName: string, container: ReorderableContainer): void {\r\n\r\n        const group = this._groups[groupName];\r\n\r\n        if (group) {\r\n            group.unregister(container);\r\n\r\n            if (group.isEmpty()) {\r\n                group.destroy();\r\n\r\n                delete this._groups[groupName];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the dragula instance with the current config and attaches the events, if not already created.\r\n     */\r\n    initialize(groupName: string): ReorderableGroup {\r\n\r\n        const group = this._groups[groupName];\r\n\r\n        if (group) {\r\n            group.initialize();\r\n        }\r\n\r\n        return group;\r\n    }\r\n\r\n    /**\r\n     * Returns the group object for the given name.\r\n     */\r\n    getGroup(group: string): ReorderableGroup {\r\n        return this._groups[group];\r\n    }\r\n}\r\n\r\nexport interface ReorderableContainer {\r\n    element: Element;\r\n    getModelFromElement: (element: Element) => any;\r\n    canMove: (element: Element, container: Element, handle: Element) => boolean;\r\n}\r\n\r\nexport interface ReorderableDragEvent {\r\n    model: any;\r\n    element: Element;\r\n    source: Element;\r\n}\r\n\r\nexport interface ReorderableDragEndEvent {\r\n    model: any;\r\n    element: Element;\r\n}\r\n\r\nexport interface ReorderableDropEvent {\r\n    model: any;\r\n    element: Element;\r\n    target: Element;\r\n    source: Element;\r\n    sibling: Element;\r\n}\r\n\r\nexport interface ReorderableCancelEvent {\r\n    model: any;\r\n    element: Element;\r\n}\r\n\r\nexport interface ReorderableClonedEvent {\r\n    clone: Element;\r\n    element: Element;\r\n    type: string;\r\n}\r\n\r\n/**\r\n * Represents a collection of drag-and-drop containers (uxReorderable) that items can be dragged between.\r\n */\r\nexport class ReorderableGroup {\r\n\r\n    drag = new EventEmitter<ReorderableDragEvent>();\r\n    dragEnd = new EventEmitter<ReorderableDragEndEvent>();\r\n    drop = new EventEmitter<ReorderableDropEvent>();\r\n    cancel = new EventEmitter<ReorderableCancelEvent>();\r\n    cloned = new EventEmitter<ReorderableClonedEvent>();\r\n\r\n    private _instance: Drake;\r\n    private _containers: ReorderableContainer[] = [];\r\n\r\n    private _config: DragulaOptions = {\r\n        moves: this.canMove.bind(this)\r\n    };\r\n\r\n    /**\r\n     * Returns true if there are no containers registered with the group.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this._containers.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the model object (uxReorderableModel) for an elements in one of the containers in the group.\r\n     */\r\n    getModelForElement(element: Element): any {\r\n        for (const container of this._containers) {\r\n            const model = container.getModelFromElement(element);\r\n            if (model) {\r\n                return model;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Adds the container to the group.\r\n     */\r\n    register(container: ReorderableContainer): void {\r\n        this._containers.push(container);\r\n\r\n        if (this._instance) {\r\n            this._instance.containers = this._containers.map((c) => c.element);\r\n        }\r\n\r\n        if (!this._config.mirrorContainer) {\r\n            this._config.mirrorContainer = container.element;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the container from the group.\r\n     */\r\n    unregister(container: ReorderableContainer): void {\r\n        const index = this._containers.indexOf(container);\r\n        if (index >= 0) {\r\n            this._containers.splice(index, 1);\r\n            if (this._instance) {\r\n                this._instance.containers = this._containers.map((c) => c.element);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the dragula instance with the current config and attaches the events, if not already created.\r\n     */\r\n    initialize(): void {\r\n\r\n        if (this._instance) {\r\n            return;\r\n        }\r\n\r\n        this._instance = dragula(this._containers.map((c) => c.element), this._config);\r\n\r\n        this._instance.on('drag', (element: Element, source: Element) => {\r\n            this.drag.emit({\r\n                model: this.getModelForElement(element),\r\n                element: element,\r\n                source: source\r\n            });\r\n        });\r\n        this._instance.on('dragend', (element: Element) => {\r\n            this.dragEnd.emit({\r\n                model: this.getModelForElement(element),\r\n                element: element\r\n            });\r\n        });\r\n        this._instance.on('drop', (element: Element, target: Element, source: Element, sibling: Element) => {\r\n            this.drop.emit({\r\n                model: this.getModelForElement(element),\r\n                element: element,\r\n                target: target,\r\n                source: source,\r\n                sibling: sibling\r\n            });\r\n        });\r\n        this._instance.on('cancel', (element: Element) => {\r\n            this.cancel.emit({\r\n                model: this.getModelForElement(element),\r\n                element: element\r\n            });\r\n        });\r\n        this._instance.on('cloned', (clone: Element, element: Element, type: string) => {\r\n            this.cloned.emit({\r\n                clone: clone,\r\n                element: element,\r\n                type: type\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroys the dragula instance.\r\n     */\r\n    destroy(): void {\r\n        if (this._instance) {\r\n            this._instance.destroy();\r\n            this._instance = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the container for the containerElement and returns the results of canMove.\r\n     */\r\n    private canMove(element: Element, containerElement: Element, handle: Element): boolean {\r\n        for (let container of this._containers) {\r\n            if (container.element.isSameNode(containerElement)) {\r\n                return container.canMove(element, containerElement, handle);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { AfterViewInit, ContentChildren, Directive, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, OnInit, Output, QueryList, Renderer2 } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\r\nimport { ReorderableModelDirective } from './reorderable-model.directive';\r\nimport { ReorderableCancelEvent, ReorderableClonedEvent, ReorderableContainer, ReorderableDragEndEvent, ReorderableDragEvent, ReorderableDropEvent, ReorderableService } from './reorderable.service';\r\n\r\n@Directive({\r\n    selector: '[uxReorderable]'\r\n})\r\nexport class ReorderableDirective implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @Input() reorderableModel: Array<any>;\r\n    @Input() reorderableGroup: string;\r\n    @Input() reorderingDisabled: boolean = false;\r\n    @Output() reorderableModelChange = new EventEmitter<Array<any>>();\r\n    @Output() reorderStart = new EventEmitter<ReorderEvent>();\r\n    @Output() reorderCancel = new EventEmitter<ReorderEvent>();\r\n    @Output() reorderEnd = new EventEmitter<ReorderEvent>();\r\n\r\n    @ContentChildren(ReorderableHandleDirective, { read: ElementRef, descendants: true }) handles: QueryList<ElementRef>;\r\n    @ContentChildren(ReorderableModelDirective) models: QueryList<ReorderableModelDirective>;\r\n\r\n    private _container: ReorderableContainer;\r\n\r\n    @HostBinding('class.ux-reorderable-container-moving') dragging = false;\r\n\r\n    private _subscriptions = new Subscription();\r\n\r\n    constructor(\r\n        private _elementRef: ElementRef,\r\n        private _renderer: Renderer2,\r\n        private _service: ReorderableService\r\n    ) { }\r\n\r\n    /**\r\n     * Initialise dragula and bind to all the required events\r\n     */\r\n    ngOnInit(): void {\r\n\r\n        // If no group name then generate a unique one for this instance only\r\n        if (!this.reorderableGroup) {\r\n            this.reorderableGroup = this._service.getUniqueGroupName();\r\n        }\r\n\r\n        this._container = {\r\n            element: this._elementRef.nativeElement,\r\n            getModelFromElement: this.getModelFromElement.bind(this),\r\n            canMove: this.canMove.bind(this)\r\n        };\r\n\r\n        // Register for drag events on this element\r\n        const group = this._service.register(this.reorderableGroup, this._container);\r\n        this._subscriptions.add(group.drag.subscribe(this.onDrag.bind(this)));\r\n        this._subscriptions.add(group.dragEnd.subscribe(this.onDragEnd.bind(this)));\r\n        this._subscriptions.add(group.drop.subscribe(this.onDrop.bind(this)));\r\n        this._subscriptions.add(group.cancel.subscribe((event: ReorderableCancelEvent) => this.reorderCancel.emit({ element: event.element, model: event.model })));\r\n        this._subscriptions.add(group.cloned.subscribe(this.onClone.bind(this)));\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this._service.initialize(this.reorderableGroup);\r\n    }\r\n\r\n    /**\r\n     * We need to destroy the dragula instance on component destroy\r\n     */\r\n    ngOnDestroy(): void {\r\n        this._service.unregister(this.reorderableGroup, this._container);\r\n        this._subscriptions.unsubscribe();\r\n    }\r\n\r\n    onDrag(event: ReorderableDragEvent): void {\r\n\r\n        this.dragging = true;\r\n\r\n        this.reorderStart.emit({ element: event.element, model: event.model });\r\n    }\r\n\r\n    /**\r\n     * This is fired when items get reordered - we need to emit the new order of the models\r\n     */\r\n    onDrop(event: ReorderableDropEvent): void {\r\n\r\n        // if there is no provided module we can skip this\r\n        if (!this.reorderableModel) {\r\n            return;\r\n        }\r\n\r\n        let changed = false;\r\n\r\n        if (event.source.isSameNode(this._elementRef.nativeElement)) {\r\n\r\n            // remove this model from the list of models\r\n            const index = this.reorderableModel.indexOf(event.model);\r\n            if (index >= 0) {\r\n                this.reorderableModel.splice(index, 1);\r\n                changed = true;\r\n            }\r\n        }\r\n\r\n        if (event.target.isSameNode(this._elementRef.nativeElement)) {\r\n\r\n            // get the position of sibling element\r\n            const index = event.sibling && !event.sibling.classList.contains('gu-mirror') ?\r\n                this.reorderableModel.indexOf(this.getModelFromElement(event.sibling)) :\r\n                this.reorderableModel.length;\r\n\r\n            // insert the model at its new location\r\n            this.reorderableModel.splice(index, 0, event.model);\r\n            changed = true;\r\n        }\r\n\r\n        // Emit event if any changes were made\r\n        if (changed) {\r\n            this.reorderableModelChange.emit(this.reorderableModel);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the model assciated with a particular element in the list.\r\n     * This should ensure that the items have the draggable model directive applied\r\n     */\r\n    getModelFromElement(element: Element): any {\r\n\r\n        const model = this.models.find(_model => _model.elementRef.nativeElement === element);\r\n\r\n        if (!model) {\r\n            return null;\r\n        }\r\n\r\n        return model.uxReorderableModel;\r\n    }\r\n\r\n    /**\r\n     * When we finish dragging remove the utillity class from the element being moved\r\n     */\r\n    onDragEnd(event: ReorderableDragEndEvent): void {\r\n\r\n        this.dragging = false;\r\n\r\n        if (this._elementRef.nativeElement.contains(event.element)) {\r\n\r\n            this._renderer.removeClass(event.element, 'ux-reorderable-moving');\r\n\r\n            this.reorderEnd.emit({\r\n                element: event.element,\r\n                model: event.model\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * We want to ensure that the cloned element is identical\r\n     * to the original, regardless of it's location in the DOM tree\r\n     */\r\n    onClone(event: ReorderableClonedEvent): void {\r\n\r\n        if (this._elementRef.nativeElement.contains(event.element)) {\r\n\r\n            this.setTableCellWidths(event.element, event.clone);\r\n            this.captureCanvases(event.element, event.clone);\r\n\r\n            this._renderer.addClass(event.element, 'ux-reorderable-moving');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If elements contain handles then only drag when the handle is dragged\r\n     * otherwise drag whenever an immediate child is specified\r\n     */\r\n    canMove(element: Element, container: Element, handle: Element): boolean {\r\n        if (this.reorderingDisabled) {\r\n            return false;\r\n        }\r\n        return this.handles.length === 0 ? true : !!this.handles.find(_handle => _handle.nativeElement === handle);\r\n    }\r\n\r\n    private setTableCellWidths(source: Element, target: Element): void {\r\n\r\n        // if it is not a table row then skip this\r\n        if (source.tagName !== 'TR') {\r\n            return;\r\n        }\r\n\r\n        // find any immediate td children and fix their width\r\n        const sourceCells = Array.from(source.children) as HTMLTableCellElement[];\r\n        const targetCells = Array.from(target.children) as HTMLTableCellElement[];\r\n\r\n        // fix the width of these cells\r\n        sourceCells.forEach((cell, idx) => targetCells[idx].style.minWidth = getComputedStyle(cell).getPropertyValue('width'));\r\n    }\r\n\r\n    private captureCanvases(source: Element, target: Element): void {\r\n\r\n        // find all child canvas elements\r\n        const sourceCanvases = Array.from(source.querySelectorAll('canvas'));\r\n        const targetCanvases = Array.from(target.querySelectorAll('canvas'));\r\n\r\n        // replicate the canvas content\r\n        targetCanvases.map(canvas => canvas.getContext('2d'))\r\n            .forEach((context, idx) => context.drawImage(sourceCanvases[idx], 0, 0));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport interface ReorderEvent {\r\n    element: Element;\r\n    model: any;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReorderableDirective } from './reorderable.directive';\r\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\r\nimport { ReorderableModelDirective } from './reorderable-model.directive';\r\nimport { ReorderableService } from './reorderable.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        ReorderableDirective,\r\n        ReorderableHandleDirective,\r\n        ReorderableModelDirective\r\n    ],\r\n    exports: [\r\n        ReorderableDirective,\r\n        ReorderableHandleDirective,\r\n        ReorderableModelDirective\r\n    ],\r\n    providers: [\r\n        ReorderableService\r\n    ]\r\n})\r\nexport class ReorderableModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FacetContainerComponent } from './facet-container.component';\r\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\r\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\r\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\r\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from '../checkbox/index';\r\nimport { TooltipModule } from '../tooltip/index';\r\nimport { ReorderableModule } from './../../directives/reorderable/reorderable.module';\r\n\r\nconst DECLARATIONS = [\r\n    FacetContainerComponent,\r\n    FacetHeaderComponent,\r\n    FacetBaseComponent,\r\n    FacetCheckListComponent,\r\n    FacetTypeaheadListComponent,\r\n    FacetTypeaheadHighlight\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CheckboxModule,\r\n        TooltipModule,\r\n        ReorderableModule,\r\n        TypeaheadModule.forRoot()\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS\r\n})\r\nexport class FacetsModule { }\r\n","export class Facet {\r\n    \r\n    constructor(\r\n        public title: string,\r\n        public data: any = {},\r\n        public count?: number,\r\n        public disabled: boolean = false,\r\n        public id?: string | number\r\n    ) { }\r\n}","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-filter-container',\r\n    template: `<ng-content></ng-content>\r\n\r\n<!-- Add a Clear Button -->\r\n<div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [uxTooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\r\n\r\n    <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\r\n        <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\r\n        <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\r\n        <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\r\n        <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\r\n        <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\r\n    </svg>\r\n\r\n</div>`\r\n})\r\nexport class FilterContainerComponent {\r\n\r\n    @Input() filters: Filter[] = [];\r\n    @Input() clearTooltip: string;\r\n    @Output() filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\r\n    @Output() events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\r\n\r\n\r\n    addFilter(filter: Filter): void {\r\n        this.filters.push(filter);\r\n        this.events.next(new FilterAddEvent(filter));\r\n        this.filtersChange.emit(this.filters);\r\n    }\r\n\r\n    removeFilter(filter: Filter): void {\r\n        let idx = this.filters.findIndex(filters => filters === filter);\r\n\r\n        if (idx !== -1) {\r\n            this.filters.splice(idx, 1);\r\n            this.events.next(new FilterRemoveEvent(filter));\r\n            this.filtersChange.emit(this.filters);\r\n        }\r\n    }\r\n\r\n    removeAll(): void {\r\n        this.events.next(new FilterRemoveAllEvent());\r\n    }\r\n\r\n}\r\n\r\nexport interface Filter {\r\n    group: string;\r\n    title: string;\r\n    name: string;\r\n    initial?: boolean;\r\n}\r\n\r\nexport class FilterAddEvent {\r\n    constructor(public filter: Filter) {}\r\n}\r\n\r\nexport class FilterRemoveEvent {\r\n    constructor(public filter: Filter) {}\r\n}\r\n\r\nexport class FilterRemoveAllEvent {\r\n}\r\n\r\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;","\r\nimport { Directive, Host, Input, OnDestroy } from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\r\n\r\n@Directive({\r\n    selector: 'ux-filter-base'\r\n})\r\nexport class FilterBaseComponent implements OnDestroy {\r\n\r\n    @Input() filters: Filter[];\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(@Host() private filtersContainer: FilterContainerComponent) {\r\n        this._subscription = filtersContainer.events.pipe(filter(event => event instanceof FilterRemoveAllEvent)).subscribe(this.removeFilter.bind(this));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    addFilter(_filter: Filter): void {\r\n        if (!_filter.initial) {\r\n            this.filtersContainer.addFilter(_filter);\r\n        }\r\n    }\r\n\r\n    removeFilter(_filter: Filter): void {\r\n        if (!_filter) {\r\n            return;\r\n        }\r\n\r\n        this.filtersContainer.removeFilter(_filter);\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\r\nimport { Filter } from '../filter-container.component';\r\n\r\n@Component({\r\n    selector: 'ux-filter-dropdown',\r\n    template: `<div class=\"btn-group\" dropdown>\r\n    <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \r\n        <span class=\"hpe-icon hpe-down\"></span>\r\n    </button>\r\n    <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\r\n        <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\r\n            <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\r\n                <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\r\n                <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>`,\r\n})\r\nexport class FilterDropdownComponent extends FilterBaseComponent {\r\n\r\n    @Input() initial: Filter;\r\n\r\n    selected: Filter;\r\n\r\n    removeFilter(): void {\r\n        super.removeFilter(this.selected);\r\n        this.selected = this.initial;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.selected = this.initial;\r\n    }\r\n\r\n    selectFilter(filter: Filter) {\r\n        this.removeFilter();\r\n        this.selected = filter;\r\n        this.addFilter(this.selected);\r\n    }\r\n\r\n}","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\r\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\r\nimport { Filter } from '../filter-container.component';\r\n\r\n@Component({\r\n    selector: 'ux-filter-dynamic',\r\n    template: `<div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\r\n    <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \r\n        <span class=\"hpe-icon hpe-down\"></span>\r\n    </button>\r\n    <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\r\n\r\n        <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\r\n            <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\r\n                <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\r\n                <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\r\n            </a>\r\n        </li>\r\n\r\n        <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\r\n            <a class=\"dropdown-item\">\r\n                <i class=\"hpe-icon hpe-checkmark\"></i>\r\n                <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\r\n            </a>\r\n        </li>\r\n\r\n        <hr>\r\n\r\n        <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\r\n            <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \r\n            (typeaheadOnSelect)=\"selectOption($event)\" \r\n            [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\r\n            [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\r\n            [typeaheadOptionsLimit]=\"options?.maxResults\">\r\n        </li>\r\n\r\n        <span *ngIf=\"!showTypeahead\">\r\n            <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\r\n                <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\r\n                    <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\r\n                    <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\r\n                </a>\r\n            </li>\r\n        </span>\r\n\r\n    </ul>\r\n</div>`,\r\n    host: {\r\n        '(document:click)': 'clickOff($event)',\r\n    }\r\n})\r\nexport class FilterDynamicComponent extends FilterBaseComponent {\r\n\r\n    @Input() filters: Filter[];\r\n    @Input() initial: Filter;\r\n    @Input() options: FilterDynamicListConfig;\r\n\r\n    @ViewChild(BsDropdownDirective) dropdown: BsDropdownDirective;\r\n\r\n    defaultOptions: FilterDynamicListConfig = {\r\n        placeholder: '',\r\n        minCharacters: 3\r\n    };\r\n    searchQuery: string;\r\n    selected: Filter;\r\n    showTypeahead: boolean = true;\r\n    typeaheadItems: string[] = [];\r\n\r\n    getItems(): string[] {\r\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.selected = this.initial;\r\n        this.typeaheadItems = this.getItems();\r\n\r\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length) {\r\n            this.showTypeahead = false;\r\n        }\r\n    }\r\n\r\n    selectOption(typeaheadOption: TypeaheadMatch) {\r\n        this.removeFilter();\r\n        let idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\r\n        this.selected = this.filters[idx];\r\n        this.addFilter(this.selected);\r\n        this.searchQuery = '';\r\n        this.dropdown.hide();\r\n    }\r\n\r\n    clickOff(event: MouseEvent) {\r\n\r\n        let target = event.target as HTMLElement;\r\n        let hideDropdown = true;\r\n\r\n        while (target && target.nodeName !== 'BODY') {\r\n            if (target.classList.contains('ux-dynamic-filter')) {\r\n                hideDropdown = false;\r\n                break;\r\n            } else {\r\n                target = target.parentElement;\r\n            }\r\n        }\r\n\r\n        if (hideDropdown) {\r\n            this.searchQuery = '';\r\n            this.dropdown.hide();\r\n        }\r\n\r\n    }\r\n\r\n    removeFilter(): void {\r\n        if (this.selected !== this.initial) {\r\n            super.removeFilter(this.selected);\r\n            this.selected = this.initial;\r\n        }\r\n        this.searchQuery = '';\r\n    }\r\n\r\n    selectFilter(filter: Filter) {\r\n        this.removeFilter();\r\n        this.selected = filter;\r\n        this.addFilter(this.selected);\r\n    }\r\n\r\n}\r\n\r\nexport interface FilterDynamicListConfig {\r\n    placeholder?: string;\r\n    minCharacters?: number;\r\n    maxResults?: number;\r\n    maxIndividualItems?: number;\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\nimport { TooltipModule } from '../tooltip/index';\r\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\r\nimport { FilterContainerComponent } from './filter-container.component';\r\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\r\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\r\n\r\nconst DECLARATIONS = [\r\n    FilterBaseComponent,\r\n    FilterContainerComponent,\r\n    FilterDropdownComponent,\r\n    FilterDynamicComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        BsDropdownModule.forRoot(),\r\n        TypeaheadModule.forRoot(),\r\n        TooltipModule,\r\n        FormsModule,\r\n        CommonModule\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS\r\n})\r\nexport class FilterModule { }\r\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-flippable-card',\r\n    template: `<div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\r\n\r\n    <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\r\n        <ng-content select=\"ux-flippable-card-front\"></ng-content>\r\n    </div>\r\n\r\n    <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\r\n        <ng-content select=\"ux-flippable-card-back\"></ng-content>\r\n    </div>\r\n</div>`,\r\n    host: {\r\n        '[class.horizontal]': 'direction === \"horizontal\"',\r\n        '[class.vertical]': 'direction === \"vertical\"'\r\n    },\r\n    exportAs: 'ux-flippable-card'\r\n})\r\nexport class FlippableCardComponent {\r\n\r\n    @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\r\n    @Input() trigger: 'click' | 'hover' | 'manual' = 'hover';\r\n    @Input() width: number = 280;\r\n    @Input() height: number = 200;\r\n    @Input() flipped: boolean = false;\r\n    @Output() flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    setFlipped(state: boolean) {\r\n        this.flipped = state;\r\n        this.flippedChange.emit(this.flipped);\r\n    }\r\n\r\n    toggleFlipped() {\r\n        this.setFlipped(!this.flipped);\r\n    }\r\n\r\n    @HostListener('click') clickTrigger() {\r\n\r\n        // add or remove the class depending on whether or not the card has been flipped\r\n        if (this.trigger === 'click') {\r\n            this.toggleFlipped();\r\n        }\r\n    }\r\n\r\n    @HostListener('mouseenter') hoverEnter() {\r\n        // if the trigger is hover then begin to flip\r\n        if (this.trigger === 'hover') {\r\n            this.setFlipped(true);\r\n        }\r\n    }\r\n\r\n    @HostListener('mouseleave') hoverExit() {\r\n        if (this.trigger === 'hover') {\r\n            this.setFlipped(false);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@Directive({\r\n    selector: 'ux-flippable-card-front'\r\n})\r\nexport class FlippableCardFrontDirective { }\r\n\r\n@Directive({\r\n    selector: 'ux-flippable-card-back'\r\n})\r\nexport class FlippableCardBackDirective { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\r\n\r\n@NgModule({\r\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\r\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\r\n})\r\nexport class FlippableCardModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FloatingActionButtonsService {\r\n\r\n    open$ = new BehaviorSubject<boolean>(false);\r\n\r\n    open(): void {\r\n        this.open$.next(true);\r\n    }\r\n\r\n    toggle(): void {\r\n        this.open$.next(!this.open$.getValue());\r\n    }\r\n\r\n    close(): void {\r\n        this.open$.next(false);\r\n    }\r\n}","import { animate, query, stagger, style, transition, trigger } from '@angular/animations';\r\nimport { AfterViewInit, ChangeDetectionStrategy, Component, ContentChildren, ElementRef, HostListener, Input, OnDestroy, QueryList } from '@angular/core';\r\nimport { TooltipDirective } from 'ngx-bootstrap/tooltip';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\r\n\r\n@Component({\r\n    selector: 'ux-floating-action-buttons',\r\n    template: `<ng-content select=\"[fab-primary]\"></ng-content>\r\n\r\n<div class=\"floating-action-button-list\" [@fabAnimation]=\"fab.open$ | async\" [ngClass]=\"direction\" *ngIf=\"fab.open$ | async\">\r\n    <ng-content></ng-content>\r\n</div>`,\r\n    providers: [FloatingActionButtonsService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false,\r\n    animations: [\r\n        trigger('fabAnimation', [\r\n            transition('void => true', [\r\n                query('ux-floating-action-button', style({ opacity: 0 })),\r\n                query('ux-floating-action-button', stagger(50, animate(250, style({ opacity: 1 }))))\r\n            ]),\r\n            transition('true => void', [\r\n                query('ux-floating-action-button', stagger(-50, animate(250, style({ opacity: 0 }))))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class FloatingActionButtonsComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() direction: FloatingActionButtonDirection = 'top';\r\n    @ContentChildren(TooltipDirective) tooltips: QueryList<TooltipDirective>;\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(public fab: FloatingActionButtonsService, private _elementRef: ElementRef) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this._subscription = this.fab.open$.pipe(filter(open => open === false))\r\n            .subscribe(() => this.tooltips.forEach(tooltip => tooltip.hide()));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    /*\r\n     * Detect any clicks to trigger close of the menu\r\n     */\r\n    @HostListener('document:click', ['$event.target']) close(target: HTMLElement): void {\r\n        if (!this._elementRef.nativeElement.contains(target)) {\r\n            this.fab.close();\r\n        }\r\n    }\r\n}\r\n\r\nexport type FloatingActionButtonDirection = 'top' | 'right' | 'bottom' | 'left';","import { Attribute, ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\r\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\r\n\r\n@Component({\r\n    selector: 'ux-floating-action-button',\r\n    template: `<button class=\"btn floating-action-button\" \r\n        [class.button-primary]=\"primary\" \r\n        [class.button-secondary]=\"!primary\" \r\n        (click)=\"primary ? fab.open() : fab.close()\">\r\n\r\n    <span class=\"hpe-icon floating-action-button-icon\" *ngIf=\"icon\" [ngClass]=\"icon\"></span>\r\n    <ng-content *ngIf=\"!icon\"></ng-content>\r\n\r\n</button>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false\r\n})\r\nexport class FloatingActionButtonComponent {\r\n\r\n    @Input() icon: string;\r\n    @HostBinding() tabindex = 1;\r\n\r\n    primary: boolean = false;\r\n\r\n    constructor(@Attribute('fab-primary') primary: string, public fab: FloatingActionButtonsService) {\r\n        this.primary = primary !== null;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FloatingActionButtonsComponent } from './floating-action-buttons.component';\r\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [\r\n        FloatingActionButtonsComponent,\r\n        FloatingActionButtonComponent\r\n    ],\r\n    declarations: [\r\n        FloatingActionButtonsComponent,\r\n        FloatingActionButtonComponent\r\n    ]\r\n})\r\nexport class FloatingActionButtonsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject ,  Observable ,  Observer ,  of } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HierarchyBarService {\r\n\r\n    nodes$ = new BehaviorSubject<HierarchyBarNode[]>([]);\r\n\r\n    private _root: HierarchyBarNode;\r\n    private _nodes: HierarchyBarNode[] = [];\r\n\r\n    /**\r\n     * Store the root node of the hierarchy tree\r\n     */\r\n    setRootNode(root: HierarchyBarNode) {\r\n\r\n        // store the root node\r\n        this._root = root;\r\n\r\n        // create a flat structure of nodes\r\n        this._nodes = this.getNodeList(root);\r\n\r\n        // flatten the array - based on the selected node\r\n        this.nodes$.next(this.getSelectedChildren(root));\r\n    }\r\n\r\n    /**\r\n     * Select a node. This causes all nodes to be\r\n     * deselected and the path to the selected node\r\n     * to be selected\r\n     */\r\n    selectNode(node: HierarchyBarNode): void {\r\n\r\n        // deselect all nodes\r\n        this.deselectAll();\r\n\r\n        // ensure the current node is selected and its parents\r\n        this.select(node);\r\n\r\n        // emit a new node list to trigger change detection\r\n        this.nodes$.next(this.getSelectedChildren(this._root));\r\n    }\r\n\r\n    /**\r\n     * Handles getting children with support for both arrays and observables\r\n     */\r\n    getChildren(node: HierarchyBarNode): Observable<HierarchyBarNodeChildren> {\r\n\r\n        if (Array.isArray(node.children)) {\r\n            return of({ loading: false, children: node.children });\r\n        }\r\n\r\n        const children$: Observable<HierarchyBarNode[]> = node.children;\r\n\r\n        // if it is an observable then handle loading\r\n        return Observable.create((observer: Observer<HierarchyBarNodeChildren>) => {\r\n            // emit initial value\r\n            observer.next({ loading: true, children: [] });\r\n\r\n            // now wait until the children observable completes\r\n            children$.pipe(first()).subscribe(children => {\r\n\r\n                // replace the observable with an array for future loading\r\n                node.children = children;\r\n\r\n                // rebuild the node tree\r\n                this.setRootNode(this._root);\r\n\r\n                // emit the latest value\r\n                observer.next({ loading: false, children: children });\r\n\r\n                // close the observable stream\r\n                observer.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Traverses all the parents to ensure they are selected\r\n     */\r\n    private select(node: HierarchyBarNode): void {\r\n        node.selected = true;\r\n\r\n        if (node.parent) {\r\n            this.select(node.parent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deselects all nodes\r\n     */\r\n    private deselectAll(): void {\r\n        this._nodes.forEach(node => node.selected = false);\r\n    }\r\n\r\n    /**\r\n     * Gets all the nodes in the tree as a flat array.\r\n     * It also stores the parent node in a parent property\r\n     * on the node for easy traversal in both directions\r\n     */\r\n    private getNodeList(node: HierarchyBarNode): HierarchyBarNode[] {\r\n\r\n        // if there are no children then return only itself\r\n        if (!node.children || node.children instanceof Observable || node.children.length === 0) {\r\n            return [node];\r\n        }\r\n\r\n        // store the parent property\r\n        node.children.forEach(child => child.parent = node);\r\n\r\n        // get all descendants of this node\r\n        const descendants = node.children.reduce<HierarchyBarNode[]>((nodes, current) => [...nodes, ...this.getNodeList(current)], []);\r\n\r\n        return [node, ...descendants];\r\n    }\r\n\r\n    /**\r\n     * Gets all selected nodes from the parent node.\r\n     */\r\n    private getSelectedChildren(node: HierarchyBarNode): HierarchyBarNode[] {\r\n\r\n        if (node.children instanceof Observable) {\r\n            return [node];\r\n        }\r\n\r\n        // get the children - and account for when there is none\r\n        const children = node.children || [];\r\n\r\n        // check if any child is selected\r\n        const child = children.find(_child => _child.selected);\r\n\r\n        // return the remaining chain of selected items\r\n        return child ? [node, ...this.getSelectedChildren(child)] : [node];\r\n    }\r\n}\r\n\r\nexport interface HierarchyBarNode {\r\n    icon?: string;\r\n    title: string;\r\n    selected?: boolean;\r\n    parent?: HierarchyBarNode;\r\n    children?: HierarchyBarNode[] | Observable<HierarchyBarNode[]>;\r\n}\r\n\r\nexport interface HierarchyBarNodeChildren {\r\n    loading: boolean;\r\n    children: HierarchyBarNode[];\r\n}","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, QueryList, TemplateRef, ViewChild, ViewChildren } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { HierarchyBarNode, HierarchyBarService } from './hierarchy-bar.service';\r\n\r\n@Component({\r\n    selector: 'ux-hierarchy-bar',\r\n    template: `<!-- Allow content to be placed on the left of the items -->\r\n<aside class=\"hierarchy-bar-addons\">\r\n    <ng-content select=\"[uxHierarchyBarLeftAddon]\"></ng-content>\r\n</aside>\r\n\r\n<main #nodelist class=\"hierarchy-bar-nodes\" (uxResize)=\"scrollIntoView()\">\r\n\r\n    <div *ngIf=\"overflow$ | async\"\r\n         #popover=\"ux-popover\"\r\n         class=\"hierarchy-bar-overflow-indicator\"\r\n         [style.left.px]=\"nodelist.scrollLeft\"\r\n         [uxPopover]=\"overflow\"\r\n         [popoverContext]=\"{ popover: popover }\"\r\n         placement=\"bottom\"\r\n         popoverClass=\"hierarchy-bar-popover\">\r\n        . . .\r\n    </div>\r\n\r\n    <div #nodeElement class=\"hierarchy-bar-node\"\r\n         *ngFor=\"let node of hierarchyBar.nodes$ | async\">\r\n\r\n        <button class=\"hierarchy-bar-node-content\"\r\n                [attr.aria-label]=\"node.title\"\r\n                (click)=\"hierarchyBar.selectNode(node)\">\r\n\r\n            <!-- Show an icon if specifed -->\r\n            <img class=\"hierarchy-bar-node-icon\" *ngIf=\"node.icon\" [src]=\"node.icon\" alt=\"Hierarchy Bar Icon\">\r\n\r\n            <!-- Show the name of the current node -->\r\n            <span class=\"hierarchy-bar-node-title\">{{ node.title }}</span>\r\n\r\n        </button>\r\n\r\n        <!-- Show a dropdown arrow if there are children -->\r\n        <button *ngIf=\"node.children\"\r\n              #popover=\"ux-popover\"\r\n              aria-label=\"Show children\"\r\n              role=\"button\"\r\n              class=\"hierarchy-bar-node-arrow hpe-icon hpe-next\"\r\n              [uxPopover]=\"content\"\r\n              [popoverContext]=\"{ node: node, popover: popover }\"\r\n              placement=\"bottom\"\r\n              popoverClass=\"hierarchy-bar-popover\"\r\n              tabindex=\"0\">\r\n        </button>\r\n\r\n    </div>\r\n\r\n</main>\r\n\r\n<!-- Allow content to be placed on the right of the items -->\r\n<aside class=\"hierarchy-bar-addons\">\r\n    <ng-content select=\"[uxHierarchyBarRightAddon]\"></ng-content>\r\n</aside>\r\n\r\n<!-- Template for the popover list -->\r\n<ng-template #content let-node=\"node\" let-popover=\"popover\">\r\n\r\n    <!-- Loading Indicator -->\r\n    <ul class=\"hierarchy-bar-node-list\" *ngIf=\"(hierarchyBar.getChildren(node) | async).loading\">\r\n\r\n        <li class=\"hierarchy-bar-node-list-item\">\r\n            <ng-container [ngTemplateOutlet]=\"loadingIndicator || defaultLoadingIndicator\"></ng-container>\r\n        </li>\r\n    </ul>\r\n\r\n    <!-- List of children -->\r\n    <ul class=\"hierarchy-bar-node-list\" *ngIf=\"!(hierarchyBar.getChildren(node) | async).loading\">\r\n\r\n        <li *ngFor=\"let child of (hierarchyBar.getChildren(node) | async).children; let first = first\"\r\n            class=\"hierarchy-bar-node-list-item\"\r\n            [focusIf]=\"first\"\r\n            tabindex=\"0\"\r\n            (keydown.enter)=\"hierarchyBar.selectNode(child); popover.hide()\"\r\n            (click)=\"hierarchyBar.selectNode(child); popover.hide()\">\r\n\r\n            <!-- Show an icon if specifed -->\r\n            <img class=\"hierarchy-bar-node-icon\" *ngIf=\"child.icon\" [src]=\"child.icon\" alt=\"Hierarchy Bar Icon\">\r\n\r\n            <!-- Show the name of the current node -->\r\n            <span class=\"hierarchy-bar-node-title\">{{ child.title }}</span>\r\n\r\n        </li>\r\n\r\n    </ul>\r\n</ng-template>\r\n\r\n<!-- Template for the overflow popover list -->\r\n<ng-template #overflow let-popover=\"popover\">\r\n\r\n    <ul class=\"hierarchy-bar-node-list\">\r\n\r\n        <li *ngFor=\"let child of overflowNodes$ | async; let first = first\"\r\n            class=\"hierarchy-bar-node-list-item\"\r\n            tabindex=\"0\"\r\n            [focusIf]=\"first\"\r\n            (click)=\"hierarchyBar.selectNode(child); popover.hide()\"\r\n            (keydown.enter)=\"hierarchyBar.selectNode(child); popover.hide()\">\r\n\r\n            <!-- Show an icon if specifed -->\r\n            <img class=\"hierarchy-bar-node-icon\" *ngIf=\"child.icon\" [src]=\"child.icon\" alt=\"Hierarchy Bar Icon\">\r\n\r\n            <!-- Show the name of the current node -->\r\n            <span class=\"hierarchy-bar-node-title\">{{ child.title }}</span>\r\n\r\n        </li>\r\n\r\n    </ul>\r\n</ng-template>\r\n\r\n<!-- Loading Indicator Template -->\r\n<ng-template #defaultLoadingIndicator>\r\n    <div class=\"hierarchy-bar-node-icon\" alt=\"Hierarchy Bar Loading Indicator\">\r\n        <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\r\n    </div>\r\n\r\n    <!-- Show the name of the current node -->\r\n    <span class=\"hierarchy-bar-node-title\">Loading...</span>\r\n</ng-template>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    viewProviders: [HierarchyBarService]\r\n})\r\nexport class HierarchyBarComponent implements OnDestroy {\r\n\r\n    @Input() set root(node: HierarchyBarNode) {\r\n        this.hierarchyBar.setRootNode(node);\r\n    }\r\n\r\n    @Input() set selected(node: HierarchyBarNode) {\r\n        this.hierarchyBar.selectNode(node);\r\n    }\r\n\r\n    @Input() loadingIndicator: TemplateRef<any>;\r\n\r\n    @Output() selectedChange = new EventEmitter<HierarchyBarNode>();\r\n    @ViewChild('nodelist') nodelist: ElementRef;\r\n    @ViewChildren('nodeElement') nodes: QueryList<ElementRef>;\r\n\r\n    overflow$ = new BehaviorSubject<boolean>(false);\r\n    overflowNodes$ = new BehaviorSubject<HierarchyBarNode[]>([]);\r\n\r\n    private _subscription = new Subscription();\r\n\r\n    constructor(public hierarchyBar: HierarchyBarService) {\r\n\r\n        // subscribe to changes in the selected node\r\n        const selected = hierarchyBar.nodes$.subscribe(nodes => this.selectedChange.emit(nodes.length === 0 ? null : nodes[nodes.length - 1]));\r\n        const changed = hierarchyBar.nodes$.pipe(debounceTime(0)).subscribe(() => this.scrollIntoView());\r\n\r\n        // store subscriptions\r\n        this._subscription.add(selected);\r\n        this._subscription.add(changed);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * When there is overflow ensure that the rightmost\r\n     * node remains in view at all times. The nodes no longer\r\n     * visible be be displayed in a popover available on the\r\n     * overflow indicator\r\n     */\r\n    scrollIntoView(): void {\r\n\r\n        if (!this.nodelist) {\r\n            return;\r\n        }\r\n\r\n        // get the native element\r\n        const { nativeElement } = this.nodelist;\r\n\r\n        // emit whether or not there is overflow\r\n        this.overflow$.next(nativeElement.scrollWidth > nativeElement.offsetWidth);\r\n\r\n        // if the hierarchy bar contents do not overflow then do nothing\r\n        if (nativeElement.scrollWidth > nativeElement.offsetWidth) {\r\n\r\n            // determine the amount of overflow\r\n            const overflowAmount = nativeElement.scrollWidth - nativeElement.offsetWidth;\r\n\r\n            // determine which nodes are not fully visible\r\n            this.overflowNodes$.next(\r\n                this.nodes.filter(node => node.nativeElement.offsetLeft < overflowAmount)\r\n                    .map((node, index) => this.hierarchyBar.nodes$.value[index])\r\n            );\r\n\r\n            // move the scroll position to always show the last itme\r\n            this.nodelist.nativeElement.scrollLeft = overflowAmount;\r\n        }\r\n    }\r\n}","import { Directive, Output, EventEmitter, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({ \r\n    selector: '[uxClickOutside]'\r\n})\r\nexport class ClickOutsideDirective {\r\n\r\n    @Output() uxClickOutside = new EventEmitter<MouseEvent>();\r\n\r\n    constructor(private _elementRef: ElementRef) { }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    click(event: MouseEvent): void {\r\n        if (this._elementRef.nativeElement !== event.target && !this._elementRef.nativeElement.contains(event.target)) {\r\n            this.uxClickOutside.emit(event);\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { ClickOutsideDirective } from './click-outside.directive';\r\n\r\n\r\n@NgModule({\r\n    exports: [ClickOutsideDirective],\r\n    declarations: [ClickOutsideDirective]\r\n})\r\nexport class ClickOutsideModule { }\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { TooltipComponent } from '../tooltip/index';\r\n\r\nlet uniquePopoverId = 0;\r\n\r\n@Component({\r\n  selector: 'ux-popover',\r\n  template: `<div class=\"popover show\" [ngClass]=\"[placement, customClass]\" [id]=\"id\" [attr.role]=\"role\" (uxClickOutside)=\"clickOutside$.next($event)\">\r\n    <div class=\"arrow\"></div>\r\n    <h3 class=\"popover-title\" *ngIf=\"title\">{{ title }}</h3>\r\n    <div class=\"popover-content\" (cdkObserveContent)=\"reposition()\">\r\n        <ng-container *ngIf=\"!isTemplateRef\">{{ content }}</ng-container>\r\n        <ng-container *ngIf=\"isTemplateRef\" [ngTemplateOutlet]=\"content\" [ngTemplateOutletContext]=\"context\"></ng-container>\r\n    </div>\r\n</div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PopoverComponent extends TooltipComponent {\r\n\r\n  /** Define a unique id for each popover */\r\n  id: string = `ux-popover-${++uniquePopoverId}`;\r\n\r\n  /** If specified allows the popover to show a title */\r\n  title: string;\r\n\r\n  /** This will emit an event any time the user clicks outside the popover */\r\n  clickOutside$ = new Subject<MouseEvent>();\r\n\r\n  /** This will update the title of the popover and trigger change detection */\r\n  setTitle(title: string): void {\r\n    this.title = title;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}","import { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { Directive, HostBinding, Input, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { TooltipDirective } from '../tooltip/index';\r\nimport { PopoverComponent } from './popover.component';\r\n\r\n@Directive({\r\n    selector: '[uxPopover]',\r\n    exportAs: 'ux-popover'\r\n})\r\nexport class PopoverDirective extends TooltipDirective implements OnInit, OnChanges {\r\n\r\n    /** Contains the content of the popover or a TemplateRef for more detailed content */\r\n    @Input('uxPopover') content: string | TemplateRef<any>;\r\n\r\n    /** Optionally display a title in the popover */\r\n    @Input('popoverTitle') title: string;\r\n\r\n    /** Allow the popover to be conditionally disabled */\r\n    @Input('popoverDisabled') disabled: boolean;\r\n\r\n    /** All the user to add a custom class to the popover */\r\n    @Input('popoverClass') customClass: string = '';\r\n\r\n    /** All the user to add a role to the popover - default is tooltip */\r\n    @Input('popoverRole') role: string = 'tooltip';\r\n\r\n    /** Provide the TemplateRef a context object */\r\n    @Input('popoverContext') context: any = {};\r\n\r\n    /** Delay the showing of the popover by a number of miliseconds */\r\n    @Input('popoverDelay') delay: number = 0;\r\n\r\n    /** Specify which events should show the popover */\r\n    @Input() showTriggers: string[] = ['click'];\r\n\r\n    /** Specify which events should hide the popover */\r\n    @Input() hideTriggers: string[] = ['click', 'clickoutside', 'escape'];\r\n\r\n    /** Keep track of the tooltip visibility and update aria-expanded attribute */\r\n    @HostBinding('attr.aria-expanded') isVisible: boolean = false;\r\n\r\n    /** A reference to the CDK portal containing the overlay */\r\n    protected _portal: ComponentPortal<PopoverComponent>;\r\n\r\n    /** A reference to the instance of the popover component when created */\r\n    protected _instance: PopoverComponent;\r\n\r\n    /** Determine whether or not an aria-describedby property originally existed on the element */\r\n    private _ariaDescribedBy: boolean;\r\n\r\n    /** Internally store the type of this component - usual for distinctions when extending the tooltip class */\r\n    protected _type: string = 'popover';\r\n\r\n    /** Set up the triggers and bind to the show/hide events to keep visibility in sync */\r\n    ngOnInit(): void {\r\n\r\n        // set up the event triggers\r\n        fromEvent(document, 'keydown').pipe(takeUntil(this._onDestroy)).subscribe(this.onKeyDown.bind(this));\r\n\r\n        // check if there is an aria-described by attribute\r\n        this._ariaDescribedBy = this._elementRef.nativeElement.hasAttribute('aria-describedby');\r\n\r\n        // set up the default event triggers\r\n        super.ngOnInit();\r\n    }\r\n\r\n    /**\r\n     * We need to send input changes to the popover component\r\n     * We can't use setters as they may trigger before popover initialised and can't resend once initialised\r\n     **/\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n\r\n        if (this._instance && changes.title) {\r\n            this._instance.setTitle(changes.title.currentValue);\r\n        }\r\n    }\r\n\r\n    protected createInstance(overlayRef: OverlayRef): PopoverComponent {\r\n        const instance = overlayRef.attach(this._portal).instance as PopoverComponent;\r\n\r\n        // supply the tooltip with the correct properties\r\n        instance.setTitle(this.title);\r\n        instance.setContent(this.content);\r\n        instance.setPlacement(this.placement);\r\n        instance.setClass(this.customClass);\r\n        instance.setContext(this.context);\r\n        instance.setRole(this.role);\r\n\r\n        // Update the aria-describedby attribute\r\n        this.setAriaDescribedBy(instance.id);\r\n\r\n        // subscribe to the outside click event\r\n        instance.clickOutside$.pipe(takeUntil(this._onDestroy)).subscribe(this.onClickOutside.bind(this));\r\n\r\n        return instance;\r\n    }\r\n\r\n    protected createPortal(): ComponentPortal<PopoverComponent> {\r\n        return this._portal || new ComponentPortal(PopoverComponent, this._viewContainerRef);\r\n    }\r\n\r\n    private onKeyDown(event: KeyboardEvent): void {\r\n\r\n        // if visible and the escape key is pressed and it is one of the hide triggers\r\n        if (this.isVisible && event.keyCode === ESCAPE && this.includes(this.hideTriggers, 'escape')) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    private onClickOutside(): void {\r\n        // if visible and it is one of the hide triggers\r\n        if (this.isVisible && this.includes(this.hideTriggers, 'clickoutside')) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    /** Programmatically update the aria-describedby property */\r\n    protected setAriaDescribedBy(id: string | null): void {\r\n\r\n        // we only want to set the aria-describedby attr when the content is a string and there was no user defined attribute already\r\n        if (this._ariaDescribedBy === false && typeof this.content === 'string') {\r\n            super.setAriaDescribedBy(id);\r\n        }\r\n    }\r\n\r\n}","import { ObserversModule } from '@angular/cdk/observers';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ClickOutsideModule } from '../../directives/click-outside/index';\r\nimport { TooltipModule } from '../tooltip/index';\r\nimport { PopoverComponent } from './popover.component';\r\nimport { PopoverDirective } from './popover.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    ObserversModule,\r\n    ClickOutsideModule,\r\n    TooltipModule\r\n  ],\r\n  exports: [PopoverDirective],\r\n  declarations: [PopoverComponent, PopoverDirective],\r\n  entryComponents: [PopoverComponent]\r\n})\r\nexport class PopoverModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FocusIfModule } from '../../directives/focus-if/index';\r\nimport { ResizeModule } from '../../directives/resize/index';\r\nimport { HierarchyBarComponent } from './hierarchy-bar.component';\r\nimport { PopoverModule } from '../popover/index';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ResizeModule,\r\n        FocusIfModule,\r\n        PopoverModule\r\n    ],\r\n    exports: [HierarchyBarComponent],\r\n    declarations: [HierarchyBarComponent],\r\n})\r\nexport class HierarchyBarModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SidePanelService {\r\n\r\n    open$ = new BehaviorSubject<boolean>(false);\r\n\r\n    open() {\r\n        this.open$.next(true);\r\n    }\r\n\r\n    close() {\r\n        this.open$.next(false);\r\n    }\r\n}","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, HostBinding, HostListener, ElementRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { SidePanelService } from './side-panel.service';\r\n\r\n@Component({\r\n    selector: 'ux-side-panel',\r\n    exportAs: 'ux-side-panel',\r\n    template: `<div *ngIf=\"modal && open\" class=\"modal-backdrop\"\r\n    [style.position]=\"position\"\r\n    [style.top]=\"cssTop\"></div>\r\n\r\n<div class=\"ux-side-panel-host\"\r\n    [class.modal-panel]=\"modal\"\r\n    [style.position]=\"position\"\r\n    [style.width]=\"hostWidth\"\r\n    [style.top]=\"cssTop\">\r\n    <ng-content></ng-content>\r\n</div>\r\n`,\r\n    providers: [SidePanelService],\r\n    host: {\r\n        'class': 'ux-side-panel'\r\n    }\r\n})\r\nexport class SidePanelComponent implements OnInit, OnDestroy {\r\n\r\n    @Input()\r\n    @HostBinding('class.open')\r\n    get open(): boolean {\r\n        return this.service.open$.value;\r\n    }\r\n\r\n    set open(value: boolean) {\r\n        this.service.open$.next(value);\r\n    }\r\n\r\n    @Input()\r\n    @HostBinding('class.inline')\r\n    inline = false;\r\n\r\n    @Input()\r\n    attachTo: 'window' | 'container' = 'window';\r\n\r\n    @Input()\r\n    width: string | number = '50%';\r\n\r\n    @Input()\r\n    top: string | number = '0';\r\n\r\n    @Input()\r\n    @HostBinding('attr.aria-modal')\r\n    modal = false;\r\n\r\n    @Input()\r\n    @HostBinding('class.animate')\r\n    animate = false;\r\n\r\n    @Input()\r\n    closeOnExternalClick = false;\r\n\r\n    @Output()\r\n    openChange = new EventEmitter<boolean>();\r\n\r\n    get position() {\r\n        if (this.inline) {\r\n            return 'static';\r\n        }\r\n        if (this.attachTo === 'container') {\r\n            return 'absolute';\r\n        }\r\n        return 'fixed';\r\n    }\r\n\r\n    get cssWidth(): string {\r\n        if (typeof this.width === 'number') {\r\n            return this.width === 0 ? '0' : this.width + 'px';\r\n        }\r\n        return this.width;\r\n    }\r\n\r\n    get cssTop(): string {\r\n        if (typeof this.top === 'number') {\r\n            return this.top === 0 ? '0' : this.top + 'px';\r\n        }\r\n        return this.top;\r\n    }\r\n\r\n    @HostBinding('style.width')\r\n    get componentWidth(): string {\r\n        if (this.inline) {\r\n            return this.open ? this.cssWidth : '0';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get hostWidth() {\r\n        return this.inline ? '100%' : this.cssWidth;\r\n    }\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(\r\n        protected service: SidePanelService,\r\n        private _elementRef: ElementRef\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this._subscription = this.service.open$.subscribe((next) => {\r\n            this.openChange.emit(next);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    openPanel() {\r\n        this.service.open();\r\n    }\r\n\r\n    @HostListener('document:keyup.escape')\r\n    closePanel() {\r\n        this.service.close();\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    clickHandler(event: MouseEvent) {\r\n        if (!this.open || !this.closeOnExternalClick) {\r\n            return;\r\n        }\r\n\r\n        const target = event.target as HTMLElement;\r\n\r\n        if (!this._elementRef.nativeElement.contains(target) ||\r\n            (target && target.classList.contains('modal-backdrop'))) {\r\n            this.closePanel();\r\n        }\r\n    }\r\n}","import { Component, Directive, Input, Output, EventEmitter, ContentChild, ElementRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { SidePanelComponent } from '../side-panel/side-panel.component';\r\nimport { SidePanelService } from '../side-panel/side-panel.service';\r\n\r\n@Directive({\r\n    selector: '[uxItemDisplayPanelContent]'\r\n})\r\nexport class ItemDisplayPanelContentDirective { }\r\n\r\n@Directive({\r\n    selector: '[uxItemDisplayPanelFooter]'\r\n})\r\nexport class ItemDisplayPanelFooterDirective { }\r\n\r\n@Component({\r\n    selector: 'ux-item-display-panel',\r\n    template: `<div class=\"ux-side-panel-host ux-item-display-panel\"\r\n    [class.box-shadow]=\"boxShadow\"\r\n    [style.position]=\"position\"\r\n    [style.width]=\"hostWidth\"\r\n    [style.top]=\"cssTop\">\r\n\r\n    <div class=\"ux-side-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\r\n        <h3>{{ header }}</h3>\r\n        <button *ngIf=\"closeVisible\" type=\"button\" class=\"btn btn-lg btn-link btn-icon button-secondary\" (click)=\"visible = false\">\r\n            <i class=\"hpe-icon hpe-close\"></i>\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"ux-side-panel-content\">\r\n        <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\r\n    </div>\r\n\r\n    <div class=\"ux-side-panel-footer\" *ngIf=\"footer\">\r\n        <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\r\n    </div>\r\n\r\n</div>\r\n`,\r\n    providers: [SidePanelService],\r\n    host: {\r\n        'class': 'ux-side-panel ux-item-display-panel'\r\n    }\r\n})\r\nexport class ItemDisplayPanelComponent extends SidePanelComponent {\r\n\r\n    @Input() header: string;\r\n\r\n    @Input() boxShadow: boolean = true;\r\n\r\n    @Input() closeVisible: boolean = true;\r\n\r\n    get preventClose(): boolean {\r\n        return !this.closeOnExternalClick;\r\n    }\r\n\r\n    @Input()\r\n    set preventClose(value: boolean) {\r\n        this.closeOnExternalClick = !value;\r\n    }\r\n\r\n    @Input() shadow: boolean = false;\r\n\r\n    @ContentChild(ItemDisplayPanelFooterDirective) footer: ItemDisplayPanelFooterDirective;\r\n\r\n    @Output() visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    /**\r\n     * @deprecated\r\n     * Title used for adding tooltips and shouldn't be used as an input\r\n     * instead header will be used. This is here to support backward compatibility only\r\n     * this property should not be used.\r\n     */\r\n    @Input()\r\n    set title(value: string) {\r\n        this.header = value;\r\n    }\r\n\r\n    get title() {\r\n        return this.header;\r\n    }\r\n\r\n    @Input()\r\n    set visible(visible: boolean) {\r\n        this.open = visible;\r\n    }\r\n\r\n    get visible() {\r\n        return this.open;\r\n    }\r\n\r\n    private _itemDisplayPanelSubscription: Subscription;\r\n\r\n    constructor(service: SidePanelService, elementRef: ElementRef) {\r\n        super(service, elementRef);\r\n\r\n        this.animate = false;\r\n        this.closeOnExternalClick = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._itemDisplayPanelSubscription = this.service.open$.subscribe((next) => {\r\n            this.visibleChange.emit(next);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._itemDisplayPanelSubscription.unsubscribe();\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\r\n\r\nconst DECLARATIONS = [\r\n    ItemDisplayPanelComponent,\r\n    ItemDisplayPanelContentDirective,\r\n    ItemDisplayPanelFooterDirective\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS\r\n})\r\nexport class ItemDisplayPanelModule {}","import { Component, Input, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-wizard-step',\r\n    template: `<ng-container *ngIf=\"active\">\r\n    <ng-content></ng-content>\r\n</ng-container>`\r\n})\r\nexport class WizardStepComponent {\r\n    \r\n    @Input() header: string;\r\n    @Input() valid: boolean = true;\r\n    @Input() visitedChange = new EventEmitter<boolean>();\r\n\r\n    private _active: boolean = false;\r\n    private _visited: boolean = false;\r\n\r\n    @Input() \r\n    get visited(): boolean {\r\n        return this._visited;\r\n    }\r\n\r\n    set visited(value: boolean) {\r\n        this._visited = value;\r\n        this.visitedChange.next(value);\r\n    }\r\n\r\n    set active(value: boolean) {\r\n        \r\n        // store the active state of the step\r\n        this._active = value;\r\n\r\n        // if the value is true then the step should also be marked as visited\r\n        if (value === true) {\r\n            this.visited = true;\r\n        }\r\n    }\r\n\r\n    get active(): boolean {\r\n        return this._active;\r\n    }\r\n\r\n}","import { AfterViewInit, Component, ContentChildren, EventEmitter, Input, Output, QueryList } from '@angular/core';\r\nimport { WizardStepComponent } from './wizard-step.component';\r\n\r\n@Component({\r\n    selector: 'ux-wizard',\r\n    template: `<div class=\"wizard-body\">\r\n\r\n    <div class=\"wizard-steps\">\r\n\r\n        <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\r\n            {{ stp.header }}\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"wizard-content\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"wizard-footer\">\r\n    <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [uxTooltip]=\"previousTooltip\" [disabled]=\"previousDisabled || step === 0\"\r\n        (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\r\n\r\n    <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [uxTooltip]=\"nextTooltip\" [disabled]=\"nextDisabled\"\r\n        (click)=\"next(); tip.hide()\">{{ nextText }}</button>\r\n\r\n    <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [uxTooltip]=\"finishTooltip\"\r\n        [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\r\n\r\n    <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [uxTooltip]=\"cancelTooltip\"\r\n        [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\r\n</div>`,\r\n    host: {\r\n        '[class]': 'orientation'\r\n    }\r\n})\r\nexport class WizardComponent implements AfterViewInit {\r\n\r\n    private _step: number = 0;\r\n\r\n    @ContentChildren(WizardStepComponent) steps = new QueryList<WizardStepComponent>();\r\n\r\n    @Input() orientation: 'horizontal' | 'vertical' = 'horizontal';\r\n\r\n    @Input() nextText: string = 'Next';\r\n    @Input() previousText: string = 'Previous';\r\n    @Input() cancelText: string = 'Cancel';\r\n    @Input() finishText: string = 'Finish';\r\n\r\n    @Input() nextTooltip: string = 'Go to the next step';\r\n    @Input() previousTooltip: string = 'Go to the previous step';\r\n    @Input() cancelTooltip: string = 'Cancel the wizard';\r\n    @Input() finishTooltip: string = 'Finish the wizard';\r\n\r\n    @Input() nextDisabled: boolean = false;\r\n    @Input() previousDisabled: boolean = false;\r\n    @Input() cancelDisabled: boolean = false;\r\n    @Input() finishDisabled: boolean = false;\r\n\r\n    @Input() nextVisible: boolean = true;\r\n    @Input() previousVisible: boolean = true;\r\n    @Input() cancelVisible: boolean = true;\r\n    @Input() finishVisible: boolean = true;\r\n    @Input() cancelAlwaysVisible: boolean = false;\r\n    @Input() finishAlwaysVisible: boolean = false;\r\n\r\n    @Output() onNext = new EventEmitter<number>();\r\n    @Output() onPrevious = new EventEmitter<number>();\r\n    @Output() onCancel = new EventEmitter<void>();\r\n    @Output() onFinishing = new EventEmitter<void>();\r\n    @Output() onFinish = new EventEmitter<void>();\r\n    @Output() stepChanging = new EventEmitter<StepChangingEvent>();\r\n    @Output() stepChange = new EventEmitter<number>();\r\n\r\n    invalidIndicator: boolean = false;\r\n\r\n    @Input()\r\n    get step() {\r\n        return this._step;\r\n    }\r\n    set step(value: number) {\r\n\r\n        // only accept numbers as valid options\r\n        if (typeof value === 'number') {\r\n\r\n            // store the active step\r\n            this._step = value;\r\n\r\n            // update which steps should be active\r\n            this.update();\r\n\r\n            // emit the change event\r\n            this.stepChange.next(this.step);\r\n\r\n            // reset the invalid state\r\n            this.invalidIndicator = false;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        // initially set the correct visibility of the steps\r\n        setTimeout(this.update.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Navigate to the next step\r\n     */\r\n    next(): void {\r\n\r\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step + 1));\r\n\r\n        // check if current step is invalid\r\n        if (!this.getCurrentStep().valid) {\r\n            this.invalidIndicator = true;\r\n            return;\r\n        }\r\n\r\n        // check if we are currently on the last step\r\n        if ((this.step + 1) < this.steps.length) {\r\n            this.step++;\r\n\r\n            // emit the current step\r\n            this.onNext.next(this.step);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Navigate to the previous step\r\n     */\r\n    previous(): void {\r\n\r\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step - 1));\r\n\r\n        // check if we are currently on the last step\r\n        if (this.step > 0) {\r\n            this.step--;\r\n\r\n            // emit the current step\r\n            this.onPrevious.next(this.step);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Perform actions when the finish button is clicked\r\n     */\r\n    finish(): Promise<void> {\r\n\r\n        // fires when the finish button is clicked always\r\n        this.onFinishing.next();\r\n\r\n        /**\r\n         * This is required because we need to ensure change detection has run\r\n         * to determine whether or not we have the latest value for the 'valid' input\r\n         * on the current step. Unfortunately we can't use ChangeDetectorRef as we are looking to run\r\n         * on content children, and we cant use ApplicationRef.tick() as this does not work in a hybrid app, eg. our docs\r\n         */\r\n        return new Promise<void>(resolve => {\r\n            setTimeout(() => {\r\n\r\n                // only fires when the finish button is clicked and the step is valid\r\n                if (this.getCurrentStep().valid) {\r\n                    this.onFinish.next();        \r\n                }\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Perform actions when the cancel button is clicked\r\n     */\r\n    cancel(): void {\r\n        this.onCancel.next();\r\n    }\r\n\r\n    /**\r\n     * Update the active state of each step\r\n     */\r\n    update(): void {\r\n        // update which steps should be active\r\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\r\n    }\r\n\r\n    /**\r\n     * Jump to a specific step only if the step has previously been visited\r\n     */\r\n    gotoStep(step: WizardStepComponent): void {\r\n        if (step.visited) {\r\n\r\n            const stepIndex = this.steps.toArray().findIndex(stp => stp === step);\r\n\r\n            this.stepChanging.next(new StepChangingEvent(this.step, stepIndex));\r\n\r\n            this.step = stepIndex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determine if the current step is the last step\r\n     */\r\n    isLastStep(): boolean {\r\n        return this.step === (this.steps.length - 1);\r\n    }\r\n\r\n    /**\r\n     * Reset the wizard - goes to first step and resets visited state\r\n     */\r\n    reset(): void {\r\n\r\n        // mark all steps as not visited\r\n        this.steps.forEach(step => step.visited = false);\r\n\r\n        // go to the first step\r\n        this.step = 0;\r\n    }\r\n\r\n    /**\r\n     * Get the step at the current index\r\n     */\r\n    getCurrentStep(): WizardStepComponent {\r\n        return this.getStepAtIndex(this.step);\r\n    }\r\n\r\n    /**\r\n     * Return a step at a specific index\r\n     */\r\n    getStepAtIndex(index: number): WizardStepComponent {\r\n        return this.steps.toArray()[index];\r\n    }\r\n}\r\n\r\nexport class StepChangingEvent {\r\n    constructor(public from: number, public to: number) { }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WizardComponent } from './wizard.component';\r\nimport { WizardStepComponent } from './wizard-step.component';\r\nimport { TooltipModule } from '../tooltip/index';\r\n\r\nconst DECLARATIONS = [\r\n    WizardComponent,\r\n    WizardStepComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TooltipModule\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS\r\n})\r\nexport class WizardModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\r\n\r\n/**\r\n * This service is required to provide a form of communication\r\n * between the marquee wizard steps and the containing marquee wizard.\r\n * We cannot inject the Host due to the steps being content children \r\n * rather than view children.\r\n */\r\n@Injectable()\r\nexport class MarqueeWizardService {\r\n    valid$ = new Subject<MarqueeWizardValidEvent>();\r\n}\r\n\r\nexport interface MarqueeWizardValidEvent {\r\n    step: MarqueeWizardStepComponent;\r\n    valid: boolean;\r\n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { WizardStepComponent } from '../wizard/index';\r\nimport { MarqueeWizardService } from './marquee-wizard.service';\r\n\r\n@Component({\r\n    selector: 'ux-marquee-wizard-step',\r\n    template: `<ng-container *ngIf=\"active\">\r\n    <ng-content></ng-content>\r\n</ng-container>`\r\n})\r\nexport class MarqueeWizardStepComponent extends WizardStepComponent {\r\n\r\n    @Input() icon: string;\r\n    @Input() completed: boolean = false;\r\n    @Output() completedChange = new EventEmitter<boolean>();\r\n    \r\n    get valid(): boolean {\r\n        return this._valid;\r\n    }\r\n\r\n    set valid(valid: boolean) {\r\n        this._valid = valid;\r\n\r\n        if (this._marqueeWizardService) {\r\n            this._marqueeWizardService.valid$.next({ step: this, valid: valid });\r\n        }\r\n    }\r\n\r\n    private _valid: boolean = true;\r\n\r\n    constructor(private _marqueeWizardService: MarqueeWizardService) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Update the completed state and emit the latest value\r\n     * @param completed whether or not the step is completed\r\n     */\r\n    setCompleted(completed: boolean): void {\r\n        this.completed = completed;\r\n        this.completedChange.emit(completed);\r\n    }\r\n}","import { Component, ContentChildren, Input, QueryList, TemplateRef } from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { WizardComponent } from '../wizard/index';\r\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\r\nimport { MarqueeWizardService, MarqueeWizardValidEvent } from './marquee-wizard.service';\r\n\r\n@Component({\r\n    selector: 'ux-marquee-wizard',\r\n    template: `<div class=\"marquee-wizard-side-panel\">\r\n\r\n    <div class=\"marquee-wizard-description-container\" *ngIf=\"description\">\r\n        <!-- If a template was provided display it -->\r\n        <ng-container *ngIf=\"isTemplate\" [ngTemplateOutlet]=\"description\"></ng-container>\r\n\r\n        <!-- Otherwise wimply display the string -->\r\n        <ng-container *ngIf=\"!isTemplate\">\r\n            <p>{{ description }}</p>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <ul class=\"marquee-wizard-steps\">\r\n\r\n        <li class=\"marquee-wizard-step\" *ngFor=\"let step of steps\" (click)=\"gotoStep(step)\" [class.active]=\"step.active\" [class.visited]=\"step.visited\" [class.invalid]=\"!step.valid\">\r\n            <i class=\"marquee-wizard-step-icon\" [ngClass]=\"step.icon\"></i>\r\n            <span class=\"marquee-wizard-step-title\">{{ step.header }}</span>\r\n            <span class=\"marquee-wizard-step-status hpe-icon hpe-checkmark\" *ngIf=\"step.completed\"></span>\r\n        </li>\r\n\r\n    </ul>\r\n</div>\r\n\r\n<div class=\"marquee-wizard-content-panel\">\r\n    <div class=\"marquee-wizard-content\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n\r\n        <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [uxTooltip]=\"previousTooltip\" container=\"body\"\r\n            [disabled]=\"previousDisabled || step === 0\" (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\r\n\r\n        <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [uxTooltip]=\"nextTooltip\" container=\"body\"\r\n            [disabled]=\"nextDisabled\" (click)=\"next(); tip.hide()\">{{ nextText }}</button>\r\n\r\n        <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [uxTooltip]=\"finishTooltip\"\r\n            container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\r\n\r\n        <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [uxTooltip]=\"cancelTooltip\"\r\n            container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\r\n    </div>\r\n</div>`,\r\n    providers: [ MarqueeWizardService ]\r\n})\r\nexport class MarqueeWizardComponent extends WizardComponent {\r\n\r\n    @Input() description: string | TemplateRef<any>;\r\n    @ContentChildren(MarqueeWizardStepComponent) steps = new QueryList<MarqueeWizardStepComponent>();\r\n\r\n    get isTemplate(): boolean {\r\n        return this.description && this.description instanceof TemplateRef;\r\n    }\r\n\r\n    constructor(marqueeWizardService: MarqueeWizardService) {\r\n        super();\r\n\r\n        marqueeWizardService.valid$.pipe(\r\n            filter((event: MarqueeWizardValidEvent) => !event.valid)\r\n        ).subscribe(this.validChange.bind(this));\r\n    }\r\n\r\n    /**\r\n     * If the current step is valid, mark it as\r\n     * complete and go to the next step\r\n     */\r\n    next(): void {\r\n\r\n        // get the current step\r\n        const step = this.getCurrentStep() as MarqueeWizardStepComponent;\r\n\r\n        if (step.valid) {\r\n            super.next();\r\n\r\n            // mark this step as completed\r\n            step.setCompleted(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emit the onFinishing event and if valid the onFinish event.\r\n     * Also mark the final step as completed if it is valid\r\n     */\r\n    finish(): Promise<void> {\r\n\r\n        // get the current step\r\n        const step = this.getCurrentStep() as MarqueeWizardStepComponent;\r\n\r\n        // call the original finish function\r\n        return super.finish().then(() => {\r\n            // if the step is valid indicate that it is now complete\r\n            if (step.valid) {\r\n                step.setCompleted(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * If a step in the wizard becomes invalid, all steps sequentially after\r\n     * it, should become unvisited and incomplete\r\n     */\r\n    validChange(state: MarqueeWizardValidEvent): void {\r\n\r\n        const steps = this.steps.toArray();\r\n        const current = steps.findIndex(step => step === state.step);\r\n        const affected = steps.slice(current);\r\n\r\n        affected.forEach(step => {\r\n\r\n            // the step should no longer be completed\r\n            step.completed = false;\r\n\r\n            // if the step is not the current step then also mark it as unvisited\r\n            if (step !== state.step) {\r\n                step.visited = false;\r\n            }\r\n        });\r\n\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { WizardModule } from '../wizard/index';\r\nimport { MarqueeWizardComponent } from './marquee-wizard.component';\r\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\r\nimport { TooltipModule } from '../tooltip/index';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        WizardModule,\r\n        TooltipModule\r\n    ],\r\n    exports: [\r\n        MarqueeWizardComponent,\r\n        MarqueeWizardStepComponent\r\n    ],\r\n    declarations: [\r\n        MarqueeWizardComponent,\r\n        MarqueeWizardStepComponent\r\n    ]\r\n})\r\nexport class MarqueeWizardModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-navigation',\r\n    template: `<nav class=\"tree\" role=\"navigation\">\r\n    <ol class=\"nav\">\r\n        <ng-content></ng-content>\r\n    </ol>\r\n</nav>\r\n`\r\n})\r\nexport class NavigationComponent {\r\n\r\n}","import { AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, HostBinding, Input, OnDestroy, Optional, QueryList, Renderer2, SkipSelf } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlTree } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: '[ux-navigation-item]',\r\n    template: `<a *ngIf=\"link\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\" [routerLink]=\"link\">\r\n    <span>{{header}}</span>\r\n</a>\r\n<a *ngIf=\"!link\" (click)=\"expanded = !expanded\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\">\r\n    <span>{{header}}</span>\r\n</a>\r\n<ng-content></ng-content>\r\n`,\r\n})\r\nexport class NavigationItemComponent implements AfterViewInit, AfterContentInit, OnDestroy {\r\n\r\n    @Input() header: string;\r\n    @Input() icon: string;\r\n    @Input() link: string;\r\n    @Input() @HostBinding('class.selected') expanded: boolean = false;\r\n\r\n    @HostBinding('class.active')\r\n    get active(): boolean {\r\n        if (this.link) {\r\n            return this._router.isActive(this.link, true);\r\n        }\r\n    }\r\n\r\n    level: number = 1;\r\n    indentWithoutArrow: boolean = true;\r\n\r\n    private _navigationEnd: Subscription;\r\n    private _childrenChanges: Subscription;\r\n\r\n    @ContentChildren(NavigationItemComponent, { descendants: true })\r\n    private _children: QueryList<NavigationItemComponent>;\r\n\r\n    get children(): NavigationItemComponent[] {\r\n        return this._children.filter(item => item !== this);\r\n    }\r\n\r\n    constructor(\r\n        private _elementRef: ElementRef,\r\n        private _renderer: Renderer2,\r\n        @Optional() @SkipSelf() private _parent: NavigationItemComponent,\r\n        private _router: Router,\r\n        private _activatedRoute: ActivatedRoute\r\n    ) {\r\n        this.level = _parent ? _parent.level + 1 : 1;\r\n\r\n        this._navigationEnd = _router.events.pipe(filter(event => event instanceof NavigationEnd))\r\n            .subscribe(() => this.expanded = this.hasActiveLink(this.link));\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // Add classes to parent for styling\r\n        const parentListElement = this._elementRef.nativeElement.parentElement;\r\n        if (parentListElement) {\r\n            const levelClass: string = this.getLevelClass();\r\n            if (levelClass.length > 0) {\r\n                this._renderer.addClass(parentListElement, 'nav');\r\n                this._renderer.addClass(parentListElement, levelClass);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit(): void {\r\n        // Set 'indentWithoutArrow'\r\n        this.setIndentWithoutArrow();\r\n\r\n        // Update 'indentWithoutArrow' in response to changes to children\r\n        this._childrenChanges = this._children.changes.subscribe(() => this.setIndentWithoutArrow());\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._navigationEnd.unsubscribe();\r\n        this._childrenChanges.unsubscribe();\r\n    }\r\n\r\n    private hasActiveLink(link: string | UrlTree): boolean {\r\n\r\n        const tree = this._router.createUrlTree([link], {\r\n            relativeTo: this._activatedRoute,\r\n            queryParams: this._activatedRoute.snapshot.queryParams,\r\n            fragment: this._activatedRoute.snapshot.fragment\r\n        });\r\n\r\n        if (link && this._router.isActive(tree, true)) {\r\n            return true;\r\n        }\r\n\r\n        // If this component has children, check if any of them, or their descendants, are active.\r\n        return this.children.some((item) => item.hasActiveLink(item.link));\r\n    }\r\n\r\n    private getLevelClass(): string {\r\n        switch (this.level) {\r\n            case 2:\r\n                return 'nav-second-level';\r\n            case 3:\r\n                return 'nav-third-level';\r\n            case 4:\r\n                return 'nav-fourth-level';\r\n            case 5:\r\n                return 'nav-fifth-level';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    private setIndentWithoutArrow(): void {\r\n        if (this.children.length > 0) {\r\n            // If this element has children it will be indented and will have an arrow\r\n            this.indentWithoutArrow = false;\r\n        } else if (this._parent) {\r\n           // If this element has a parent, indent it if any of its siblings have children\r\n            this.indentWithoutArrow = !this._parent.children.every((item) => item.children.length === 0);\r\n        } else {\r\n            // Top-level elements should be indented\r\n            this.indentWithoutArrow = true;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NavigationComponent } from './navigation.component';\r\nimport { NavigationItemComponent } from './navigation-item/navigation-item.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule\r\n    ],\r\n    exports: [\r\n        NavigationComponent,\r\n        NavigationItemComponent\r\n    ],\r\n    declarations: [\r\n        NavigationComponent,\r\n        NavigationItemComponent\r\n    ]\r\n})\r\nexport class NavigationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ColorClassSet, ColorValueSet } from './color.service';\r\n\r\n@Injectable()\r\nexport class ColorService {\r\n\r\n    private _html: string;\r\n    private _element: HTMLElement;\r\n    private _colors: ThemeColors;\r\n    private _colorSet: any = colorSets.keppel;\r\n\r\n    constructor() {\r\n        if (this._colorSet.colorClassSet) {\r\n            this.setColors();\r\n        } else {\r\n            for (let key in this._colorSet.colorValueSet) {\r\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setColors() {\r\n\r\n        this._html = '';\r\n\r\n        for (let key in this._colorSet.colorClassSet) {\r\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\r\n        }\r\n\r\n        this._element = document.createElement('div');\r\n        this._element.className = 'color-chart';\r\n        this._element.innerHTML = this._html;\r\n\r\n        document.body.appendChild(this._element);\r\n\r\n        this._colors = {};\r\n\r\n        for (let key in this._colorSet.colorClassSet) {\r\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\r\n        }\r\n\r\n        this._element.parentNode.removeChild(this._element);\r\n    }\r\n\r\n    private getColorValueByHex(color: string): ThemeColor {\r\n        const hex = color.replace('#', '');\r\n\r\n        const r = parseInt(hex.substring(0, 2), 16).toString();\r\n        const g = parseInt(hex.substring(2, 4), 16).toString();\r\n        const b = parseInt(hex.substring(4, 6), 16).toString();\r\n\r\n        return new ThemeColor(r, g, b, '1');\r\n    }\r\n\r\n    private getColorValue(color: ColorIdentifier): ThemeColor {\r\n\r\n        const target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\r\n\r\n        if (!target) {\r\n            throw new Error('Invalid color');\r\n        }\r\n\r\n        const colorValue = window.getComputedStyle(target).backgroundColor;\r\n\r\n        const rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\r\n\r\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\r\n    }\r\n\r\n    getColor(color: ColorIdentifier): ThemeColor {\r\n        const themeColor = this._colors[this.resolveColorName(color)];\r\n        if (!themeColor) {\r\n            throw new Error('Color not found: ' + color);\r\n        }\r\n\r\n        return new ThemeColor(themeColor.getRed(), themeColor.getGreen(), themeColor.getBlue(), themeColor.getAlpha());\r\n    }\r\n\r\n    getColorSet() {\r\n        return this._colorSet;\r\n    }\r\n\r\n    setColorSet(colorSet: ColorSet) {\r\n        this._colorSet = colorSet;\r\n        this._colors = {};\r\n\r\n        if (this._colorSet.colorClassSet) {\r\n            this.setColors();\r\n        } else {\r\n            for (let key in this._colorSet.colorValueSet) {\r\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    resolve(value: string): string {\r\n        if (!value) {\r\n            return;\r\n        }\r\n\r\n        const colorName = this.resolveColorName(value);\r\n\r\n        for (let color in this._colors) {\r\n            if (colorName === color.toLowerCase()) {\r\n                return this.getColor(colorName).toRgba();\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    resolveColorName(value: string = ''): string {\r\n        return value.replace(/\\s+/g, '-').toLowerCase();\r\n    }\r\n}\r\n\r\nexport class ThemeColor {\r\n\r\n    private _r: string;\r\n    private _g: string;\r\n    private _b: string;\r\n    private _a: string;\r\n\r\n    constructor(r: string, g: string, b: string, a: string) {\r\n        this._r = r;\r\n        this._g = g;\r\n        this._b = b;\r\n        this._a = a === undefined ? '1' : a;\r\n    }\r\n\r\n    static parse(value: string): ThemeColor {\r\n        let r, g, b, a = '1';\r\n\r\n        const rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\r\n        const shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        const longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\r\n\r\n        const rgbaMatch = value.match(rgbaPattern);\r\n        const shortHexMatch = value.match(shortHexPattern);\r\n        const longHexMatch = value.match(longHexPattern);\r\n\r\n        if (rgbaMatch) {\r\n            r = rgbaMatch[1];\r\n            g = rgbaMatch[2];\r\n            b = rgbaMatch[3];\r\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\r\n        } else if (longHexMatch) {\r\n            r = parseInt(longHexMatch[1], 16).toString();\r\n            g = parseInt(longHexMatch[2], 16).toString();\r\n            b = parseInt(longHexMatch[3], 16).toString();\r\n        } else if (shortHexMatch) {\r\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\r\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\r\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\r\n        } else {\r\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\r\n        }\r\n        return new ThemeColor(r, g, b, a);\r\n    }\r\n\r\n    toHex() {\r\n        let red = parseInt(this._r).toString(16);\r\n        let green = parseInt(this._g).toString(16);\r\n        let blue = parseInt(this._b).toString(16);\r\n\r\n        if (red.length < 2) {\r\n            red = '0' + red;\r\n        }\r\n        if (green.length < 2) {\r\n            green = '0' + green;\r\n        }\r\n        if (blue.length < 2) {\r\n            blue = '0' + blue;\r\n        }\r\n\r\n        return '#' + red + green + blue;\r\n    }\r\n\r\n    toRgb() {\r\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\r\n    }\r\n\r\n    toRgba() {\r\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\r\n    }\r\n\r\n    getRed() {\r\n        return this._r;\r\n    }\r\n\r\n    getGreen() {\r\n        return this._g;\r\n    }\r\n\r\n    getBlue() {\r\n        return this._b;\r\n    }\r\n\r\n    getAlpha() {\r\n        return this._a;\r\n    }\r\n\r\n    setRed(red: string) {\r\n        this._r = red;\r\n        return this;\r\n    }\r\n\r\n    setGreen(green: string) {\r\n        this._g = green;\r\n        return this;\r\n    }\r\n\r\n    setBlue(blue: string) {\r\n        this._b = blue;\r\n        return this;\r\n    }\r\n\r\n    setAlpha(alpha: string | number) {\r\n        this._a = alpha.toString();\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const colorSets = {\r\n    keppel: {\r\n        colorClassSet: {\r\n            'primary': 'primary',\r\n            'accent': 'accent',\r\n            'secondary': 'secondary',\r\n            'alternate1': 'alternate1',\r\n            'alternate2': 'alternate2',\r\n            'alternate3': 'alternate3',\r\n            'vibrant1': 'vibrant1',\r\n            'vibrant2': 'vibrant2',\r\n            'grey1': 'grey1',\r\n            'grey2': 'grey2',\r\n            'grey3': 'grey3',\r\n            'grey4': 'grey4',\r\n            'grey5': 'grey5',\r\n            'grey6': 'grey6',\r\n            'grey7': 'grey7',\r\n            'grey8': 'grey8',\r\n            'chart1': 'chart1',\r\n            'chart2': 'chart2',\r\n            'chart3': 'chart3',\r\n            'chart4': 'chart4',\r\n            'chart5': 'chart5',\r\n            'chart6': 'chart6',\r\n            'ok': 'ok',\r\n            'warning': 'warning',\r\n            'critical': 'critical',\r\n            'partition1': 'partition1',\r\n            'partition9': 'partition9',\r\n            'partition10': 'partition10',\r\n            'partition11': 'partition11',\r\n            'partition12': 'partition12',\r\n            'partition13': 'partition13',\r\n            'partition14': 'partition14',\r\n            'social-chart-node': 'social-chart-node',\r\n            'social-chart-edge': 'social-chart-edge'\r\n        }\r\n    },\r\n    microFocus: {\r\n        'colorValueSet': {\r\n            'cerulean': '#1668c1',\r\n            'aqua': '#29ceff',\r\n            'aquamarine': '#2fd6c3',\r\n            'fuchsia': '#c6179d',\r\n            'indigo': '#7425ad',\r\n            'dark-blue': '#231ca5',\r\n            'white': '#ffffff',\r\n            'slightly-gray': '#f5f7f8',\r\n            'bright-gray': '#f1f2f3',\r\n            'gray': '#dcdedf',\r\n            'silver': '#bdbec0',\r\n            'dim-gray': '#656668',\r\n            'dark-gray': '#323435',\r\n            'black': '#000000',\r\n            'crimson-negative': '#e5004c',\r\n            'apricot': '#f48b34',\r\n            'yellow': '#fcdb1f',\r\n            'green-positive': '#1aac60',\r\n            'ultramarine': '#3939c6',\r\n            'skyblue': '#00abf3',\r\n            'pale-aqua': '#43e4ff',\r\n            'pale-green': '#1ffbba',\r\n            'lime': '#75da4d',\r\n            'orange': '#ffce00',\r\n            'magenta': '#eb23c2',\r\n            'pale-purple': '#ba47e2',\r\n            'dark-ultramarine': '#271782',\r\n            'steelblue': '#014272',\r\n            'arctic-blue': '#0b8eac',\r\n            'emerald': '#00a989',\r\n            'olive': '#5bba36',\r\n            'goldenrod': '#ffb000',\r\n            'purple': '#9b1e83',\r\n            'pale-eggplant': '#5216ac',\r\n            'red': '#ff454f',\r\n            'pale-amber': '#ffb24d',\r\n            'pale-lemon': '#fde159',\r\n            'pale-emerald': '#33c180',\r\n            'plum': '#b21646',\r\n            'copper': '#e57828',\r\n            'amber': '#ffc002',\r\n            'leaf-green': '#118c4f',\r\n            'forest-green': '#00645a',\r\n            'primary': '#0073e7',\r\n            'accent': '#7425ad',\r\n            'secondary': '#ffffff',\r\n            'alternate1': '#29ceff',\r\n            'alternate2': '#2fd6c3',\r\n            'alternate3': '#c6179d',\r\n            'vibrant1': '#43e4ff',\r\n            'vibrant2': '#ffce00',\r\n            'grey1': '#000000',\r\n            'grey2': '#323435',\r\n            'grey3': '#656668',\r\n            'grey4': '#bdbec0',\r\n            'grey5': '#dcdedf',\r\n            'grey6': '#f1f2f3',\r\n            'grey7': '#f5f7f8',\r\n            'grey8': '#ffffff',\r\n            'chart1': '#3939c6',\r\n            'chart2': '#00abf3',\r\n            'chart3': '#75da4d',\r\n            'chart4': '#ffce00',\r\n            'chart5': '#eb23c2',\r\n            'chart6': '#ba47e2',\r\n            'ok': '#1aac60',\r\n            'warning': '#f48b34',\r\n            'critical': 'e5004c',\r\n            'partition1': '#7425ad',\r\n            'partition9': '#5216ac',\r\n            'partition10': '#5bba36',\r\n            'partition11': '#014272',\r\n            'partition12': '#ffb000',\r\n            'partition13': '#bdbec0',\r\n            'partition14': '#271782',\r\n            'social-chart-node': '#ff00ff',\r\n            'social-chart-edge': '#ff00ff'\r\n        }\r\n    }\r\n};\r\n\r\nexport interface ThemeColors {\r\n    [name: string]: ThemeColor;\r\n}\r\n\r\nexport interface ColorSet {\r\n    colorClassSet?: ColorClassSet;\r\n    colorValueSet?: ColorValueSet;\r\n}\r\n\r\nexport interface ColorClassSet {\r\n    [name: string]: string;\r\n}\r\n\r\nexport interface ColorValueSet {\r\n    [name: string]: string;\r\n}\r\n\r\nexport type ColorIdentifier = string;\r\n","import { NgModule } from '@angular/core';\r\nimport { ColorService } from './color.service';\r\n\r\n@NgModule({\r\n    providers: [ColorService],\r\n})\r\nexport class ColorServiceModule { }\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ColorService } from '../../services/color/index';\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n    // provide default options\r\n    options: NotificationOptions = {\r\n        duration: 4,\r\n        height: 100,\r\n        spacing: 10,\r\n        backgroundColor: this._colorService.getColor('accent').toHex(),\r\n        iconColor: this._colorService.getColor('accent').toHex()\r\n    };\r\n\r\n    direction: NotificationListDirection = 'above';\r\n\r\n    notifications$: BehaviorSubject<NotificationRef[]> = new BehaviorSubject<NotificationRef[]>([]);    \r\n\r\n    show(templateRef: TemplateRef<any>, options: NotificationOptions = this.options, data: { [key: string]: any } = {}): NotificationRef {\r\n\r\n        options = { ...this.options, ...options };\r\n\r\n        const notificationRef: NotificationRef = {\r\n            templateRef: templateRef,\r\n            duration: options.duration,\r\n            date: new Date(),\r\n            visible: true,\r\n            height: options.height,\r\n            spacing: options.spacing,\r\n            backgroundColor: options.backgroundColor,\r\n            iconColor: options.iconColor,\r\n            data: data\r\n        };\r\n\r\n        const notifications = this.notifications$.getValue();\r\n\r\n        if (this.direction === 'above') {\r\n            notifications.unshift(notificationRef);\r\n        } else {\r\n            notifications.push(notificationRef);\r\n        }\r\n\r\n        this.notifications$.next(notifications);\r\n\r\n        // remove notification after delay\r\n        if (options.duration !== 0) {\r\n            setTimeout(() => this.dismiss(notificationRef), options.duration * 1000);\r\n        }\r\n\r\n        return notificationRef;\r\n    }\r\n\r\n    getHistory(): NotificationRef[] {\r\n        return this.notifications$.getValue();\r\n    }\r\n\r\n    dismiss(notificationRef: NotificationRef): void {\r\n        notificationRef.visible = false;\r\n        this.notifications$.next(this.notifications$.getValue());\r\n    }\r\n    \r\n    dismissAll(): void {\r\n        this.notifications$.getValue().forEach(notificationRef => notificationRef.visible = false);\r\n        this.notifications$.next(this.notifications$.getValue());        \r\n    }\r\n\r\n    constructor(private _colorService: ColorService) {\r\n    }\r\n}\r\n\r\nexport interface NotificationRef {\r\n    templateRef: TemplateRef<any>;\r\n    duration: number;\r\n    date: Date;\r\n    visible?: boolean;\r\n    height?: number;\r\n    spacing?: number;\r\n    backgroundColor?: string;\r\n    iconColor?: string;\r\n    data: { [key: string]: any };\r\n}\r\n\r\nexport interface NotificationOptions {\r\n    duration?: number;\r\n    height?: number;\r\n    spacing?: number;\r\n    backgroundColor?: string;\r\n    iconColor?: string;\r\n}\r\n\r\nexport type NotificationListDirection = 'above' | 'below';","import { Component, HostBinding, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { NotificationService, NotificationRef, NotificationListDirection } from './notification.service';\r\nimport { trigger, state, style, animate, transition } from '@angular/animations';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'ux-notification-list',\r\n    template: `<div class=\"notification\" *ngFor=\"let notificationRef of notifications$ | async; let idx = index\"\r\n    [style.top.px]=\"(notificationRef.height + notificationRef.spacing) * idx\"\r\n    [style.height.px]=\"notificationRef.height\"\r\n    [style.background-color]=\"notificationRef.backgroundColor\"\r\n    [@notificationState]>\r\n    <ng-container *ngTemplateOutlet=\"notificationRef.templateRef; context: { $implicit: notificationRef, data: notificationRef.data }\"></ng-container>\r\n</div>\r\n`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    animations: [\r\n        trigger('notificationState', [\r\n            state('in', style({ transform: 'translateY(0)', opacity: 0.9 })),\r\n            transition(':enter', [\r\n                style({ transform: 'translateY(-50px)', opacity: 0 }),\r\n                animate(500)\r\n            ]),\r\n            transition(':leave', [\r\n                animate(500, style({ transform: 'translateY(50px)', opacity: 0 }))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class NotificationListComponent {\r\n    \r\n    @Input() \r\n    set direction(direction: NotificationListDirection) {\r\n        this._notificationService.direction = direction;\r\n    }\r\n\r\n    @Input() @HostBinding('class') position: NotificationListPostion = 'top-right';\r\n\r\n    notifications$: Observable<NotificationRef[]> = this._notificationService.notifications$.pipe(\r\n        map((notificationRefs: NotificationRef[]) => notificationRefs.filter(notificationRef => notificationRef.visible),\r\n    ));\r\n\r\n    constructor(private _notificationService: NotificationService) {\r\n\r\n    }\r\n}\r\n\r\nexport type NotificationListPostion = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotificationListComponent } from './notification-list.component';\r\nimport { NotificationService } from './notification.service';\r\nimport { ColorServiceModule } from '../../services/color/index';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ColorServiceModule\r\n    ],\r\n    exports: [\r\n        NotificationListComponent\r\n    ],\r\n    declarations: [\r\n        NotificationListComponent\r\n    ],\r\n    providers: [\r\n        NotificationService\r\n    ]\r\n})\r\nexport class NotificationModule { }\r\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const NUMBER_PICKER_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => NumberPickerComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ux-number-picker',\r\n    template: `<input type=\"number\"\r\n       role=\"spinbutton\"\r\n       class=\"form-control number-picker-input\"\r\n       [(ngModel)]=\"value\"\r\n       [min]=\"min\"\r\n       [max]=\"max\"\r\n       (keydown.ArrowDown)=\"decrement($event)\"\r\n       (keydown.ArrowUp)=\"increment($event)\"\r\n       (wheel)=\"onScroll($event)\"\r\n       step=\"any\"\r\n       [disabled]=\"disabled\"\r\n       [attr.aria-valuemin]=\"min\"\r\n       [attr.aria-valuenow]=\"value\"\r\n       [attr.aria-valuemax]=\"max\">\r\n\r\n<div class=\"number-picker-controls\">\r\n\r\n    <div class=\"number-picker-control-up\"\r\n         (click)=\"increment($event)\"\r\n         [class.disabled]=\"disabled || value >= max\">\r\n\r\n        <span class=\"hpe-icon hpe-up\"></span>\r\n    </div>\r\n\r\n    <div class=\"number-picker-control-down\"\r\n         (click)=\"decrement($event)\"\r\n         [class.disabled]=\"disabled || value <= min\">\r\n\r\n        <span class=\"hpe-icon hpe-down\"></span>\r\n    </div>\r\n\r\n</div>`,\r\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\r\n    host: {\r\n        '[class.has-error]': '!isValid()'\r\n    }\r\n})\r\nexport class NumberPickerComponent implements ControlValueAccessor {\r\n\r\n    private _min: number = -Infinity;\r\n    private _max: number = Infinity;\r\n    private _step: number = 1;\r\n    private _disabled: boolean = false;\r\n    private _value: number = 0;\r\n    private _propagateChange = (_: any) => { };\r\n\r\n    @Input() valid: boolean = true;\r\n    @Output() valueChange = new EventEmitter<number>();\r\n\r\n    @Input('value')\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n    set value(value: number) {\r\n        this._value = value;\r\n        this.valueChange.emit(value);\r\n        this._propagateChange(value);\r\n    }\r\n\r\n    @Input()\r\n    get min(): number {\r\n        return this._min;\r\n    }\r\n    set min(value) {\r\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\r\n    }\r\n\r\n    @Input()\r\n    get max(): number {\r\n        return this._max;\r\n    }\r\n    set max(value) {\r\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\r\n    }\r\n\r\n    @Input()\r\n    get step(): number {\r\n        return this._step;\r\n    }\r\n    set step(value) {\r\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\r\n    }\r\n\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\r\n    }\r\n\r\n    increment(event: MouseEvent | KeyboardEvent): void {\r\n        event.preventDefault();\r\n\r\n        if (!this.disabled) {\r\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\r\n        }\r\n    }\r\n\r\n    decrement(event: MouseEvent | KeyboardEvent): void {\r\n        event.preventDefault();\r\n\r\n        if (!this.disabled) {\r\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\r\n        }\r\n    }\r\n\r\n    isValid(): boolean {\r\n        if (this.value < this.min || this.value > this.max) {\r\n            return false;\r\n        }\r\n\r\n        return this.valid;\r\n    }\r\n\r\n    onScroll(event: WheelEvent): void {\r\n\r\n        let scrollValue = event.deltaY || event.wheelDelta;\r\n\r\n        if (scrollValue < 0) {\r\n            this.increment(event);\r\n        } else {\r\n            this.decrement(event);\r\n        }\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        if (value !== undefined) {\r\n            this._value = value;\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this._propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void { }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NumberPickerComponent } from './number-picker.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    exports: [NumberPickerComponent],\r\n    declarations: [NumberPickerComponent]\r\n})\r\nexport class NumberPickerModule { }\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({ \r\n    selector: '[uxPageHeaderCustomMenu]' \r\n})\r\nexport class PageHeaderCustomMenuDirective { }","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PageHeaderIconMenu } from './interfaces';\r\nimport { PageHeaderNavigationDropdownItem, PageHeaderNavigationItem } from './navigation/navigation.component';\r\n\r\n@Injectable()\r\nexport class PageHeaderService implements OnDestroy {\r\n\r\n    items$ = new BehaviorSubject<PageHeaderNavigationItem[]>([]);\r\n    selected$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\r\n    selectedRoot$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\r\n    secondary$ = new BehaviorSubject<boolean>(false);\r\n    activeIconMenu$ = new BehaviorSubject<PageHeaderIconMenu>(null);\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor() {\r\n        this._subscription = this.selected$.pipe(map(selected => this.getRoot(selected))).subscribe(root => this.selectedRoot$.next(root));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    select(item: PageHeaderNavigationItem): void {\r\n\r\n        // do nothing if this item is already selected\r\n        if (item === this.selected$.getValue()) {\r\n            return;\r\n        }\r\n\r\n        // if we are in secondary navigation mode and we click a parent - dont deselect the child\r\n        if (this.secondary$.getValue() === true && this.isParentOf(this.selected$.getValue(), item)) {\r\n            return;\r\n        }\r\n\r\n        // deselect all current items\r\n        this.deselectAll();\r\n\r\n        // call the select function if present\r\n        if (item.select) {\r\n            item.select.call(item, item);\r\n        }\r\n\r\n        // store the selected state\r\n        item.selected = true;\r\n\r\n        // select all parent items too\r\n        this.selectParents(item);\r\n\r\n        // emit the new selected item\r\n        this.selected$.next(item);\r\n    }\r\n\r\n    deselect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\r\n\r\n        // deselect the current item\r\n        item.selected = false;\r\n\r\n        // iterate any children and deselect them\r\n        if (item.children) {\r\n            item.children.forEach(_item => this.deselect(_item));\r\n        }\r\n    }\r\n\r\n    deselectAll(): void {\r\n        this.items$.getValue().forEach(item => this.deselect(item));\r\n    }\r\n\r\n    setItems(items: PageHeaderNavigationItem[] = []): void {\r\n        // identify all parent elements\r\n        items.forEach(item => this.setParent(item));\r\n\r\n        this.items$.next(items);\r\n    }\r\n\r\n    setSecondaryNavigation(enabled: boolean): void {\r\n        this.secondary$.next(enabled);\r\n    }\r\n\r\n    private getRoot(item: PageHeaderNavigation): PageHeaderNavigation {\r\n        return item && item.parent ? this.getRoot(item.parent) : item;\r\n    }\r\n\r\n    private setParent(item: PageHeaderNavigation, parent?: PageHeaderNavigation | null): void {\r\n        // set the parent field\r\n        item.parent = parent;\r\n\r\n        // call this function recursively on all children\r\n        if (item.children) {\r\n            item.children.forEach(child => this.setParent(child, item));\r\n        }\r\n    }\r\n\r\n    private selectParents(item: PageHeaderNavigation): void {\r\n        // if there is a parent then we want to set it to selected\r\n        if (item.parent) {\r\n            item.parent.selected = true;\r\n\r\n            // check if it has any parents\r\n            this.selectParents(item.parent);\r\n        }\r\n    }\r\n\r\n    private isParentOf(node: PageHeaderNavigation, parent: PageHeaderNavigation): boolean {\r\n\r\n        // if there are no parents return false\r\n        if (!node || !node.parent) {\r\n            return false;\r\n        }\r\n\r\n        // if the parent is the match we are looking for return true\r\n        if (node.parent === parent) {\r\n            return true;\r\n        }\r\n\r\n        // if there are potentially grandparents then check them too\r\n        return this.isParentOf(node.parent, parent);\r\n    }\r\n}\r\n\r\nexport type PageHeaderNavigation = PageHeaderNavigationItem | PageHeaderNavigationDropdownItem;","import { Component, ContentChildren, EventEmitter, Input, OnDestroy, OnInit, Output, QueryList, TemplateRef } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\r\nimport { ColorService } from '../../services/color/index';\r\nimport { Breadcrumb } from '../breadcrumbs/index';\r\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\r\nimport { PageHeaderIconMenu } from './interfaces';\r\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\r\nimport { PageHeaderNavigation, PageHeaderService } from './page-header.service';\r\n\r\n@Component({\r\n    selector: 'ux-page-header',\r\n    exportAs: 'ux-page-header',\r\n    template: `<div class=\"ux-page-header\" [class.page-header-condensed]=\"condensed\" role=\"banner\">\r\n\r\n    <!-- Display Upper Section when not condensed -->\r\n    <div class=\"page-header-actions\" *ngIf=\"!condensed\">\r\n\r\n        <div class=\"page-header-logo-container\" role=\"presentation\" [hidden]=\"!logo\">\r\n            <img [attr.src]=\"logo\" class=\"page-header-logo\">\r\n        </div>\r\n\r\n        <div class=\"page-header-navigation\" [ngClass]=\"alignment\" role=\"navigation\" aria-label=\"Primary Navigation\">\r\n\r\n            <!-- The Top Navigation Options -->\r\n            <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\r\n        </div>\r\n\r\n        <div class=\"page-header-icon-menus\" role=\"toolbar\">\r\n            <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\r\n\r\n            <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Display Lower Section When Not Condensed -->\r\n    <div class=\"page-header-details\" *ngIf=\"!condensed\">\r\n\r\n        <div class=\"page-header-state-container\" role=\"navigation\">\r\n\r\n            <button *ngIf=\"backVisible === true\" class=\"page-header-back-button\" (click)=\"goBack()\" aria-label=\"Go Back\">\r\n                <span class=\"hpe-icon hpe-previous text-primary\"></span>\r\n            </button>\r\n\r\n            <div class=\"page-header-title-container\">\r\n\r\n                <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\r\n\r\n                <h1 class=\"page-header-title\" [style.backgroundColor]=\"familyBackground\" [style.color]=\"familyForeground\">{{ header }}</h1>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Display This Section Optimized for Condensed Mode -->\r\n    <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\r\n\r\n        <div class=\"page-header-breadcrumbs\" role=\"navigation\">\r\n            <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\r\n        </div>\r\n\r\n        <div class=\"page-header-navigation\" [ngClass]=\"alignment\" role=\"navigation\" aria-label=\"Primary Navigation\">\r\n\r\n            <!-- The Top Navigation Options -->\r\n            <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\r\n        </div>\r\n\r\n        <div class=\"page-header-icon-menus\" role=\"toolbar\">\r\n            <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\r\n            <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"page-header-secondary\" [ngClass]=\"secondaryNavigationAlignment\" role=\"navigation\" *ngIf=\"secondaryNavigation && (selectedRoot$ | async)\">\r\n    <ul class=\"nav nav-tabs\" role=\"tablist\" aria-label=\"Secondary Navigation\" *ngIf=\"(selectedRoot$ | async)?.children; let children\">\r\n        <li *ngFor=\"let child of children\" [class.active]=\"child === (selected$ | async)\" role=\"none\">\r\n            <a role=\"tab\"\r\n                [attr.aria-selected]=\"child === (selected$ | async)\"\r\n                tabindex=\"0\"\r\n                (click)=\"select(child)\"\r\n                (keydown.enter)=\"select(child)\">{{ child.title }}</a>\r\n        </li>\r\n    </ul>\r\n</div>`,\r\n    providers: [ PageHeaderService ]\r\n})\r\nexport class PageHeaderComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() logo: string;\r\n    @Input() header: string;\r\n    @Input() alignment: 'left' | 'right' | 'center' = 'center';\r\n    @Input() condensed: boolean = false;\r\n    @Input() iconMenus: PageHeaderIconMenu[];\r\n    @Input() backVisible: boolean = true;\r\n    @Input() secondaryNavigationAlignment: string = 'center';\r\n    @Input() secondaryNavigationAutoselect: boolean = false;\r\n\r\n    @Input() set items(items: PageHeaderNavigationItem[]) {\r\n        this._pageHeaderService.setItems(items);\r\n    }\r\n\r\n    @Input() set secondaryNavigation(enabled: boolean) {\r\n        this._pageHeaderService.setSecondaryNavigation(enabled);\r\n    }\r\n\r\n    get secondaryNavigation(): boolean {\r\n        return this._pageHeaderService.secondary$.getValue();\r\n    }\r\n\r\n    @Input() set crumbs(crumbs: Breadcrumb[]) {\r\n        this._crumbs = crumbs;\r\n    }\r\n\r\n    get crumbs(): Breadcrumb[] {\r\n        return this.condensed ? [...this._crumbs, { title: this.header }] : this._crumbs;\r\n    }\r\n\r\n    @Input()\r\n    set familyBackground(color: string) {\r\n        this._familyBackground = this._colorService.resolve(color);\r\n    }\r\n\r\n    get familyBackground(): string {\r\n        return this._familyBackground;\r\n    }\r\n\r\n    @Input()\r\n    set familyForeground(color: string) {\r\n        this._familyForeground = this._colorService.resolve(color);\r\n    }\r\n\r\n    get familyForeground(): string {\r\n        return this._familyForeground;\r\n    }\r\n\r\n    @Output() backClick = new EventEmitter();\r\n\r\n    @ContentChildren(PageHeaderCustomMenuDirective, { read: TemplateRef }) customMenus: QueryList<TemplateRef<any>>;\r\n\r\n    selected$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selected$;\r\n    selectedRoot$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selectedRoot$;\r\n\r\n    private _crumbs: Breadcrumb[] = [];\r\n    private _familyBackground: string;\r\n    private _familyForeground: string;\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _colorService: ColorService, private _pageHeaderService: PageHeaderService) { }\r\n\r\n    ngOnInit(): void {\r\n        this._subscription = this.selectedRoot$.pipe(\r\n            distinctUntilChanged(),\r\n            filter(() => this.secondaryNavigation && this.secondaryNavigationAutoselect),\r\n            filter((item: PageHeaderNavigation) => item && item.children && item.children.length > 0),\r\n            map(item => item.children[0])\r\n        ).subscribe(item => this.select(item));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    goBack(): void {\r\n        this.backClick.emit();\r\n    }\r\n\r\n    select(item: PageHeaderNavigation): void {\r\n        this._pageHeaderService.select(item);\r\n    }\r\n}","import { Component, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { MenuNavigationToggleDirective } from '../../../directives/menu-navigation/menu-navigation-toggle.directive';\r\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../interfaces';\r\nimport { PageHeaderService } from '../page-header.service';\r\n\r\n@Component({\r\n    selector: 'ux-page-header-icon-menu',\r\n    template: `<div class=\"page-header-icon-menu\"\r\n    dropdown\r\n    placement=\"bottom right\"\r\n    [(isOpen)]=\"isOpen\">\r\n\r\n    <a role=\"button\"\r\n        class=\"page-header-icon-menu-button\"\r\n        [attr.aria-label]=\"menu.label\"\r\n        aria-haspopup=\"true\"\r\n        tabindex=\"0\"\r\n        (click)=\"select(menu)\"\r\n        dropdownToggle\r\n        uxMenuNavigationToggle\r\n        #menuNavigationToggle=\"uxMenuNavigationToggle\"\r\n        [(menuOpen)]=\"isOpen\">\r\n\r\n        <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\r\n        <span class=\"label label-primary\" *ngIf=\"menu?.badge\" aria-hidden=\"true\">{{ menu.badge }}</span>\r\n\r\n    </a>\r\n\r\n    <ul *dropdownMenu\r\n        class=\"dropdown-menu\"\r\n        role=\"menu\"\r\n        uxMenuNavigation\r\n        [toggleButton]=\"menuNavigationToggle\">\r\n\r\n        <li *ngFor=\"let dropdown of menu?.dropdown\"\r\n            role=\"none\"\r\n            [class.dropdown-header]=\"dropdown.header\"\r\n            [class.dropdown-divider]=\"dropdown.divider\">\r\n\r\n            <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\r\n\r\n            <a *ngIf=\"!dropdown.header\"\r\n                role=\"menuitem\"\r\n                class=\"dropdown-item\"\r\n                tabindex=\"-1\"\r\n                (click)=\"select(dropdown)\"\r\n                (keydown)=\"keydownHandler(dropdown, $event)\"\r\n                uxMenuNavigationItem>\r\n\r\n\r\n                <span class=\"dropdown-item-title\">\r\n                    <i class=\"hpe-icon hpe-fw\" [ngClass]=\"dropdown.icon\"></i>\r\n                    {{ dropdown.title }}\r\n                </span>\r\n                <span *ngIf=\"dropdown.subtitle\" class=\"dropdown-item-subtitle\">{{ dropdown.subtitle }}</span>\r\n\r\n            </a>\r\n        </li>\r\n\r\n    </ul>\r\n</div>`\r\n})\r\nexport class PageHeaderIconMenuComponent implements OnDestroy {\r\n\r\n    @Input() menu: PageHeaderIconMenu;\r\n\r\n    get isOpen(): boolean {\r\n        return this._isOpen;\r\n    }\r\n\r\n    set isOpen(value: boolean) {\r\n        this._isOpen = value;\r\n        if (value) {\r\n            this._service.activeIconMenu$.next(this.menu);\r\n        }\r\n    }\r\n\r\n    @ViewChild('menuNavigationToggle') menuNavigationToggle: MenuNavigationToggleDirective;\r\n\r\n    private _isOpen: boolean;\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _service: PageHeaderService) {\r\n        this._subscription = _service.activeIconMenu$.subscribe((next) => {\r\n            // Close all but the most recently opened menu\r\n            if (next !== this.menu) {\r\n                this._isOpen = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    select(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\r\n        if (item.select) {\r\n            item.select.call(item, item);\r\n        }\r\n    }\r\n\r\n    keydownHandler(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem, event: KeyboardEvent): void {\r\n\r\n        switch (event.key) {\r\n            case 'Enter':\r\n            case ' ':\r\n                this.select(item);\r\n                this.isOpen = false;\r\n                this.menuNavigationToggle.focus();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n        }\r\n    }\r\n}","import { Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Subject ,  Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { PageHeaderService } from '../../page-header.service';\r\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\r\n\r\n@Component({\r\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\r\n    exportAs: 'ux-page-header-horizontal-navigation-dropdown-item',\r\n    template: `<div *ngIf=\"item.children && item.children.length > 0\"\r\n    dropdown\r\n    #subMenu=\"bs-dropdown\"\r\n    [isOpen]=\"dropdownOpen\"\r\n    container=\"body\"\r\n    placement=\"right\"\r\n    (mouseenter)=\"hoverStart()\"\r\n    (mouseleave)=\"hoverLeave()\">\r\n\r\n    <a role=\"menuitem\"\r\n        class=\"dropdown-item\"\r\n        [class.selected]=\"item.selected\"\r\n        aria-haspopup=\"true\"\r\n        [attr.aria-expanded]=\"dropdownOpen\"\r\n        [attr.aria-selected]=\"item.selected\"\r\n        tabindex=\"-1\"\r\n        #button\r\n        dropdownToggle\r\n        uxMenuNavigationToggle\r\n        #menuNavigationToggle=\"uxMenuNavigationToggle\"\r\n        [(menuOpen)]=\"dropdownOpen\"\r\n        menuPosition=\"right\">\r\n\r\n        <span class=\"dropdown-item-title\">{{ item.title }}</span>\r\n        <span class=\"dropdown-item-icon hpe-icon hpe-next\"></span>\r\n\r\n    </a>\r\n\r\n    <ul *dropdownMenu\r\n        role=\"menu\"\r\n        class=\"dropdown-menu horizontal-navigation-dropdown-submenu\"\r\n        (mouseenter)=\"hoverStart()\"\r\n        (mouseleave)=\"hoverLeave()\"\r\n        uxMenuNavigation\r\n        #menuNavigation=\"uxMenuNavigation\"\r\n        [toggleButton]=\"menuNavigationToggle\"\r\n        toggleButtonPosition=\"left\">\r\n\r\n        <li *ngFor=\"let subItem of item.children\" role=\"none\">\r\n\r\n            <a role=\"menuitem\"\r\n                class=\"dropdown-item\"\r\n                [class.selected]=\"subItem.selected\"\r\n                [attr.aria-selected]=\"subItem.selected\"\r\n                tabindex=\"-1\"\r\n                (click)=\"select(subItem)\"\r\n                (keydown)=\"keydownHandler($event, subItem)\"\r\n                uxMenuNavigationItem>\r\n\r\n                <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\r\n\r\n            </a>\r\n\r\n        </li>\r\n    </ul>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"!item.children || item.children.length === 0\"\r\n    (mouseenter)=\"hoverStart()\"\r\n    (mouseleave)=\"hoverLeave()\">\r\n\r\n    <a role=\"menuitem\"\r\n        #button\r\n        class=\"dropdown-item\"\r\n        [class.selected]=\"item.selected\"\r\n        [attr.aria-selected]=\"item.selected\"\r\n        tabindex=\"-1\"\r\n        (click)=\"select(item)\"\r\n        (keydown)=\"keydownHandler($event, item)\">\r\n\r\n        <span class=\"dropdown-item-title\">{{ item.title }}</span>\r\n\r\n    </a>\r\n\r\n</div>`\r\n})\r\nexport class PageHeaderNavigationDropdownItemComponent implements OnDestroy {\r\n\r\n    @Input() item: PageHeaderNavigationDropdownItem;\r\n\r\n    @ViewChild('button')\r\n    button: ElementRef;\r\n\r\n    dropdownOpen: boolean = false;\r\n\r\n    private _subscription: Subscription;\r\n    private _hover$: Subject<boolean> = new Subject<boolean>();\r\n\r\n    constructor(private _pageHeaderService: PageHeaderService) {\r\n\r\n        // subscribe to stream with a debounce (a small debounce is all that is required)\r\n        this._subscription = this._hover$.pipe(debounceTime(1)).subscribe(visible => this.dropdownOpen = visible);\r\n\r\n        // Close submenus when selected item changes\r\n        this._subscription.add(\r\n            _pageHeaderService.selected$.subscribe(() => {\r\n                this.dropdownOpen = false;\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    select(item: PageHeaderNavigationDropdownItem) {\r\n\r\n        // clicking on an item with children then return\r\n        if (item.children) {\r\n            return;\r\n        }\r\n\r\n        // emit the selected item in an event\r\n        this._pageHeaderService.select(item);\r\n    }\r\n\r\n    focus(): void {\r\n        this.button.nativeElement.focus();\r\n    }\r\n\r\n    hoverStart() {\r\n        this._hover$.next(true);\r\n    }\r\n\r\n    hoverLeave() {\r\n        this._hover$.next(false);\r\n    }\r\n\r\n    close() {\r\n        this.dropdownOpen = false;\r\n    }\r\n\r\n    keydownHandler(event: KeyboardEvent, item: PageHeaderNavigationDropdownItem): void {\r\n\r\n        switch (event.key) {\r\n            case 'Enter':\r\n            case ' ':\r\n                this.select(item);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n        }\r\n    }\r\n}","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\r\nimport { BehaviorSubject ,  Subscription } from 'rxjs';\r\nimport { MenuNavigationToggleDirective } from '../../../../directives/menu-navigation/menu-navigation-toggle.directive';\r\nimport { PageHeaderService } from '../../page-header.service';\r\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\r\nimport { PageHeaderNavigationItem } from '../navigation.component';\r\n\r\n@Component({\r\n    selector: 'ux-page-header-horizontal-navigation-item',\r\n    template: `<div *ngIf=\"item.children && item.children.length > 0 && !(secondary$ | async)\"\r\n    dropdown\r\n    #menu=\"bs-dropdown\"\r\n    [(isOpen)]=\"isOpen\"\r\n    container=\"body\"\r\n    placement=\"bottom left\">\r\n\r\n    <button role=\"menuitem\"\r\n        class=\"horizontal-navigation-button\"\r\n        [class.selected]=\"item.selected\"\r\n        [class.open]=\"isOpen\"\r\n        aria-haspopup=\"true\"\r\n        [attr.aria-expanded]=\"isOpen\"\r\n        [attr.aria-selected]=\"item.selected\"\r\n        dropdownToggle\r\n        uxMenuNavigationToggle\r\n        #button=\"uxMenuNavigationToggle\"\r\n        [(menuOpen)]=\"isOpen\">\r\n\r\n        <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\r\n        <span class=\"navigation-item-label\">{{ item?.title }}</span>\r\n        <span class=\"hpe-icon hpe-down\"></span>\r\n\r\n    </button>\r\n\r\n    <div *dropdownMenu\r\n        role=\"menu\"\r\n        class=\"dropdown-menu horizontal-navigation-dropdown-menu\"\r\n        uxMenuNavigation\r\n        [toggleButton]=\"button\"\r\n        toggleButtonPosition=\"top\">\r\n\r\n        <div *ngFor=\"let item of item?.children\" uxMenuNavigationItem (activated)=\"dropdownItem.focus()\">\r\n            <ux-page-header-horizontal-navigation-dropdown-item\r\n                #dropdownItem=\"ux-page-header-horizontal-navigation-dropdown-item\"\r\n                [item]=\"item\">\r\n            </ux-page-header-horizontal-navigation-dropdown-item>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<button *ngIf=\"!item.children || item.children.length === 0 || (secondary$ | async)\"\r\n    role=\"menuitem\"\r\n    class=\"horizontal-navigation-button\"\r\n    [class.selected]=\"item.selected\"\r\n    [attr.aria-selected]=\"item.selected\"\r\n    (click)=\"select()\">\r\n\r\n    <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\r\n    <span class=\"navigation-item-label\">{{ item?.title }}</span>\r\n\r\n</button>`\r\n})\r\nexport class PageHeaderNavigationItemComponent implements OnInit, OnDestroy {\r\n\r\n    @ViewChild('button') button: MenuNavigationToggleDirective;\r\n    @ViewChild('menu') menu: BsDropdownDirective;\r\n    @ViewChildren(PageHeaderNavigationDropdownItemComponent) dropdowns: QueryList<PageHeaderNavigationDropdownItemComponent>;\r\n\r\n    @Input() item: PageHeaderNavigationItem;\r\n\r\n    secondary$: BehaviorSubject<boolean> = this._pageHeaderService.secondary$;\r\n\r\n    isOpen: boolean;\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(\r\n        public elementRef: ElementRef,\r\n        private _pageHeaderService: PageHeaderService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // Close submenus when selected item changes\r\n        this._subscription = this._pageHeaderService.selected$.subscribe((next) => {\r\n            if (next && this.isOpen) {\r\n                this.isOpen = false;\r\n\r\n                // If menu was closed, keep focus on the toggle button\r\n                this.button.focus();\r\n            }\r\n        });\r\n\r\n        if (this.menu) {\r\n            this._subscription.add(\r\n                this.menu.onHidden.subscribe(() => this.dropdowns.forEach(dropdown => dropdown.close()))\r\n            );\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    select() {\r\n\r\n        // if the item has children then do nothing at this stage\r\n        if (this.item.children && this._pageHeaderService.secondary$.getValue() === false) {\r\n            return;\r\n        }\r\n\r\n        // otherwise select the current item\r\n        this._pageHeaderService.select(this.item);\r\n    }\r\n}","import { AfterViewInit, Component, ElementRef, OnDestroy, QueryList, ViewChildren } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ResizeService } from '../../../directives/resize/index';\r\nimport { PageHeaderNavigation, PageHeaderService } from '../page-header.service';\r\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\r\n\r\n@Component({\r\n    selector: 'ux-page-header-horizontal-navigation',\r\n    template: `<ux-page-header-horizontal-navigation-item\r\n    *ngFor=\"let item of items$ | async\"\r\n    [item]=\"item\">\r\n</ux-page-header-horizontal-navigation-item>\r\n\r\n<div class=\"selected-indicator\"\r\n    [style.opacity]=\"indicatorVisible ? 1 : 0\"\r\n    [style.margin-left.px]=\"indicatorX\"\r\n    [style.width.px]=\"indicatorWidth\">\r\n</div>`,\r\n    host: {\r\n        'role': 'menubar'\r\n    }\r\n})\r\nexport class PageHeaderNavigationComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @ViewChildren(PageHeaderNavigationItemComponent) menuItems: QueryList<PageHeaderNavigationItemComponent>;\r\n\r\n    items$: BehaviorSubject<PageHeaderNavigationItem[]> = this._pageHeaderService.items$;\r\n    indicatorVisible: boolean = false;\r\n    indicatorX: number = 0;\r\n    indicatorWidth: number = 0;\r\n\r\n    private _subscription = new Subscription();\r\n\r\n    constructor(elementRef: ElementRef, resizeService: ResizeService, private _pageHeaderService: PageHeaderService) {\r\n        this._subscription.add(resizeService.addResizeListener(elementRef.nativeElement).subscribe(this.updateSelectedIndicator.bind(this)));\r\n        this._subscription.add(_pageHeaderService.selected$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\r\n        this._subscription.add(_pageHeaderService.secondary$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.updateSelectedIndicator();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    updateSelectedIndicator(): void {\r\n        setTimeout(() => {\r\n            // find the selected item\r\n            const selected = this.menuItems.find(item => item.item.selected);\r\n\r\n            // determine whether or not to show the indicator\r\n            this.indicatorVisible = !!selected;\r\n\r\n            // set the width of the indicator to match the width of the navigation item\r\n            if (selected) {\r\n                const styles = getComputedStyle(selected.elementRef.nativeElement);\r\n\r\n                this.indicatorX = selected.elementRef.nativeElement.offsetLeft;\r\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport interface PageHeaderNavigationItem {\r\n    icon?: string;\r\n    title: string;\r\n    selected?: boolean;\r\n    select?: (item: PageHeaderNavigationItem) => void;\r\n    children?: PageHeaderNavigationDropdownItem[];\r\n    parent?: PageHeaderNavigation;\r\n}\r\n\r\nexport interface PageHeaderNavigationDropdownItem {\r\n    title: string;\r\n    selected?: boolean;\r\n    select?: (item: PageHeaderNavigationDropdownItem) => void;\r\n    children?: PageHeaderNavigationDropdownItem[];\r\n    parent?: PageHeaderNavigation;\r\n}\r\n\r\n// This is an alias for MF use as \"DropdownItem\" doesn't make sense in context with how it is used\r\nexport interface PageHeaderSecondaryNavigationItem extends PageHeaderNavigationDropdownItem { }","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\r\n\r\n@Injectable()\r\nexport class MenuNavigationService {\r\n\r\n    active$ = new BehaviorSubject<MenuNavigationItemDirective>(null);\r\n}","import { Directive, ElementRef, EventEmitter, OnDestroy, Output } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { MenuNavigationService } from './menu-navigation.service';\r\n\r\n@Directive({\r\n    selector: '[uxMenuNavigationItem]'\r\n})\r\nexport class MenuNavigationItemDirective implements OnDestroy {\r\n\r\n    @Output() activated = new EventEmitter();\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(service: MenuNavigationService, private _elementRef: ElementRef) {\r\n        this._subscription = service.active$.subscribe((next) => {\r\n            if (next === this) {\r\n                this.setActive();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    setActive(): void {\r\n        this._elementRef.nativeElement.focus();\r\n        this.activated.emit();\r\n    }\r\n}","import { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, HostListener, Inject, Input, OnDestroy, OnInit, Output, QueryList } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\r\nimport { MenuNavigationToggleDirective } from './menu-navigation-toggle.directive';\r\nimport { MenuNavigationService } from './menu-navigation.service';\r\n\r\n@Directive({\r\n    selector: '[uxMenuNavigation]',\r\n    exportAs: 'uxMenuNavigation',\r\n    providers: [MenuNavigationService]\r\n})\r\nexport class MenuNavigationDirective implements OnInit, AfterContentInit, OnDestroy {\r\n\r\n    @Input()\r\n    toggleButton: MenuNavigationToggleDirective;\r\n\r\n    @Input()\r\n    toggleButtonPosition: 'top' | 'right' | 'bottom' | 'left' = 'top';\r\n\r\n    @Output()\r\n    navigatedOut = new EventEmitter<KeyboardEvent>();\r\n\r\n    @ContentChildren(MenuNavigationItemDirective, { descendants: true })\r\n    items: QueryList<MenuNavigationItemDirective>;\r\n\r\n    get activeIndex(): number {\r\n        return this._itemsOrdered.indexOf(this._service.active$.value);\r\n    }\r\n\r\n    private _itemsOrdered: MenuNavigationItemDirective[];\r\n\r\n    private _document: any;\r\n\r\n    private _subscription = new Subscription();\r\n\r\n    constructor(\r\n        private _service: MenuNavigationService,\r\n        private _elementRef: ElementRef,\r\n        @Inject(DOCUMENT) document: any\r\n    ) {\r\n        this._document = document;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.toggleButton) {\r\n            this._subscription.add(\r\n                this.toggleButton.keyEnter.subscribe(this.focusFirst.bind(this))\r\n            );\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit(): void {\r\n\r\n        this._subscription.add(\r\n            this.items.changes.subscribe(() => {\r\n                this._itemsOrdered = this.items.toArray();\r\n            })\r\n        );\r\n\r\n        this._itemsOrdered = this.items.toArray();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    focusFirst(): void {\r\n        this.moveFirst();\r\n    }\r\n\r\n    @HostListener('document:keydown', ['$event'])\r\n    keydownHandler(event: KeyboardEvent): void {\r\n\r\n        // Only handle events when focus in within the list of menu items\r\n        if (!this._elementRef.nativeElement.contains(this._document.activeElement)) {\r\n            return;\r\n        }\r\n\r\n        let handled = false;\r\n\r\n        switch (event.key) {\r\n\r\n            case 'ArrowUp':\r\n            case 'Up':\r\n                this.movePrevious(event);\r\n                handled = true;\r\n                break;\r\n\r\n            case 'ArrowDown':\r\n            case 'Down':\r\n                this.moveNext(event);\r\n                handled = true;\r\n                break;\r\n\r\n            case 'ArrowLeft':\r\n            case 'Left':\r\n                if (this.toggleButtonPosition === 'left') {\r\n                    this.moveToToggleButton(event);\r\n                    handled = true;\r\n                }\r\n                break;\r\n\r\n            case 'ArrowRight':\r\n            case 'Right':\r\n                if (this.toggleButtonPosition === 'right') {\r\n                    this.moveToToggleButton(event);\r\n                    handled = true;\r\n                }\r\n                break;\r\n\r\n            case 'Home':\r\n                this.moveFirst();\r\n                handled = true;\r\n                break;\r\n\r\n            case 'End':\r\n                this.moveLast();\r\n                handled = true;\r\n                break;\r\n\r\n            case 'Escape':\r\n                this.navigatedOut.emit(event);\r\n                handled = true;\r\n                break;\r\n        }\r\n\r\n        if (handled) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    private moveNext(event: KeyboardEvent): void {\r\n\r\n        // Do nothing if there's no active menu item registered\r\n        if (this.activeIndex < 0) {\r\n            return;\r\n        }\r\n\r\n        const nextIndex = this.activeIndex + 1;\r\n        if (nextIndex < this._itemsOrdered.length) {\r\n\r\n            // Activate the next menu item\r\n            // (uxMenuNavigationItem subscribes to this and applies focus if it matches)\r\n            this._service.active$.next(this._itemsOrdered[nextIndex]);\r\n\r\n        } else {\r\n\r\n            // Check if focus went out of bounds in the direction of the origin toggle button\r\n            if (this.toggleButtonPosition === 'bottom') {\r\n                this.moveToToggleButton(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    private movePrevious(event: KeyboardEvent): void {\r\n\r\n        // Do nothing if there's no active menu item registered\r\n        if (this.activeIndex < 0) {\r\n            return;\r\n        }\r\n\r\n        const nextIndex = this.activeIndex - 1;\r\n        if (nextIndex >= 0) {\r\n\r\n            // Activate the previous menu item\r\n            // (uxMenuNavigationItem subscribes to this and applies focus if it matches)\r\n            this._service.active$.next(this._itemsOrdered[nextIndex]);\r\n\r\n        } else {\r\n\r\n            // Check if focus went out of bounds in the direction of the origin toggle button\r\n            if (this.toggleButtonPosition === 'top') {\r\n                this.moveToToggleButton(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    private moveFirst(): void {\r\n        if (this._itemsOrdered.length > 0) {\r\n            this._service.active$.next(this._itemsOrdered[0]);\r\n        }\r\n    }\r\n\r\n    private moveLast(): void {\r\n        if (this._itemsOrdered.length > 0) {\r\n            this._service.active$.next(this._itemsOrdered[this._itemsOrdered.length - 1]);\r\n        }\r\n    }\r\n\r\n    private moveToToggleButton(event: KeyboardEvent): void {\r\n        if (this.toggleButton) {\r\n            this.toggleButton.focus();\r\n            this.toggleButton.menuOpen = false;\r\n        }\r\n\r\n        this.navigatedOut.emit(event);\r\n    }\r\n}","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[uxMenuNavigationToggle]',\r\n    exportAs: 'uxMenuNavigationToggle'\r\n})\r\nexport class MenuNavigationToggleDirective {\r\n\r\n    @Input()\r\n    get menuOpen(): boolean {\r\n        return this._menuOpen;\r\n    }\r\n\r\n    set menuOpen(value: boolean) {\r\n        this._menuOpen = value;\r\n        this.menuOpenChange.emit(value);\r\n    }\r\n\r\n    @Input()\r\n    menuPosition: 'top' | 'right' | 'bottom' | 'left' = 'bottom';\r\n\r\n    @Output()\r\n    menuOpenChange = new EventEmitter<boolean>();\r\n\r\n    keyEnter = new EventEmitter<void>();\r\n\r\n    private _menuOpen: boolean;\r\n\r\n    constructor(private _elementRef: ElementRef) { }\r\n\r\n    focus(): void {\r\n        this._elementRef.nativeElement.focus();\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    keydownHandler(event: KeyboardEvent): void {\r\n\r\n        if (this.isKeyMatch(event.key)) {\r\n\r\n            // Open the menu\r\n            this.menuOpen = true;\r\n\r\n            // Allow the menu to init, then send the event to give it focus\r\n            setTimeout(() => {\r\n                this.keyEnter.emit();\r\n            });\r\n\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    private isKeyMatch(key: string): boolean {\r\n        switch (key) {\r\n            case 'Enter':\r\n            case ' ':\r\n                return true;\r\n\r\n            case 'ArrowUp':\r\n            case 'Up':\r\n                return this.menuPosition === 'top';\r\n\r\n            case 'ArrowDown':\r\n            case 'Down':\r\n                return this.menuPosition === 'bottom';\r\n\r\n            case 'ArrowLeft':\r\n            case 'Left':\r\n                return this.menuPosition === 'left';\r\n\r\n            case 'ArrowRight':\r\n            case 'Right':\r\n                return this.menuPosition === 'right';\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuNavigationDirective } from './menu-navigation.directive';\r\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\r\nimport { MenuNavigationToggleDirective } from './menu-navigation-toggle.directive';\r\n\r\nconst EXPORTS = [\r\n    MenuNavigationDirective,\r\n    MenuNavigationItemDirective,\r\n    MenuNavigationToggleDirective\r\n];\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: EXPORTS,\r\n    declarations: EXPORTS,\r\n})\r\nexport class MenuNavigationModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\n\r\nimport { PageHeaderComponent } from './page-header.component';\r\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\r\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\r\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\r\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\r\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\r\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\r\nimport { ResizeModule } from '../../directives/resize/index';\r\nimport { ColorServiceModule } from '../../services/color/index';\r\nimport { MenuNavigationModule } from '../../directives/menu-navigation/index';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        BreadcrumbsModule,\r\n        ColorServiceModule,\r\n        ResizeModule,\r\n        MenuNavigationModule,\r\n        BsDropdownModule.forRoot()\r\n    ],\r\n    exports: [\r\n        PageHeaderComponent,\r\n        PageHeaderCustomMenuDirective\r\n    ],\r\n    declarations: [\r\n        PageHeaderComponent,\r\n        PageHeaderIconMenuComponent,\r\n        PageHeaderCustomMenuDirective,\r\n        PageHeaderNavigationComponent,\r\n        PageHeaderNavigationItemComponent,\r\n        PageHeaderNavigationDropdownItemComponent\r\n    ]\r\n})\r\nexport class PageHeaderModule { }\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-progress-bar',\r\n    template: `<div *ngIf=\"!indeterminate\" class=\"progressbar-track\" [style.width.%]=\"(value / max) * 100\" [style.backgroundColor]=\"barColor\">\r\n    <ng-content></ng-content>\r\n</div>\r\n<div *ngIf=\"indeterminate\" class=\"progressbar-track indeterminate\" [style.backgroundColor]=\"barColor\">\r\n    <ng-content></ng-content>\r\n</div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProgressBarComponent {\r\n    @Input() value: number = 0;\r\n    @Input() max: number = 100;\r\n    @Input() indeterminate: boolean = false;\r\n    @Input() trackColor: string;\r\n    @Input() barColor: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProgressBarComponent } from './progress-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [ProgressBarComponent],\r\n    declarations: [ProgressBarComponent]\r\n})\r\nexport class ProgressBarModule { }\r\n","import { Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const RADIOBUTTON_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => RadioButtonComponent),\r\n    multi: true\r\n};\r\n\r\nlet uniqueRadioId = 0;\r\n\r\n@Component({\r\n    selector: 'ux-radio-button',\r\n    template: `<label [attr.for]=\"inputId\" class=\"ux-radio-button\"\r\n       [class.ux-radio-button-checked]=\"value === option\"\r\n       [class.ux-radio-button-simplified]=\"simplified\"\r\n       [class.ux-radio-button-disabled]=\"disabled\"\r\n       [class.ux-radio-button-focused]=\"focused\">\r\n\r\n    <div class=\"ux-radio-button-container\">\r\n        <input class=\"ux-radio-button-input\"\r\n            type=\"radio\"\r\n            [id]=\"inputId\"\r\n            [checked]=\"value === option\"\r\n            [disabled]=\"disabled\"\r\n            [tabindex]=\"tabindex || value === option ? 0 : -1\"\r\n            [attr.name]=\"name\"\r\n            [required]=\"required\"\r\n            [attr.aria-label]=\"ariaLabel\"\r\n            [attr.aria-labelledby]=\"ariaLabelledby\"\r\n            [attr.aria-describedby]=\"ariaDescribedby\"\r\n            [attr.aria-checked]=\"value === option\"\r\n            (focus)=\"focused = true\"\r\n            (blur)=\"focused = false\"\r\n            (change)=\"toggle()\"\r\n            (click)=\"$event.stopPropagation()\">\r\n    </div>\r\n\r\n    <span class=\"ux-radio-button-label\">\r\n        <ng-content></ng-content>\r\n    </span>\r\n\r\n</label>`,\r\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\r\n})\r\nexport class RadioButtonComponent implements ControlValueAccessor {\r\n\r\n    private _radioButtonId: string = `ux-radio-button-${++uniqueRadioId}`;\r\n\r\n    @Input() id: string = this._radioButtonId;\r\n    @Input() name: string | null;\r\n    @Input() required: boolean;\r\n    @Input() tabindex: number = 0;\r\n    @Input() clickable: boolean = true;\r\n    @Input() disabled: boolean = false;\r\n    @Input() simplified: boolean = false;\r\n    @Input() option: any;\r\n    @Input('aria-label') ariaLabel: string = '';\r\n    @Input('aria-labelledby') ariaLabelledby: string = null;\r\n    @Input('aria-describedby') ariaDescribedby: string = null;\r\n\r\n    @Output() valueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: boolean) {\r\n        this._value = value;\r\n\r\n        // invoke change event\r\n        this.valueChange.emit(this._value);\r\n\r\n        // call callback\r\n        this.onChangeCallback(this._value);\r\n        this.onTouchedCallback();        \r\n    }\r\n\r\n    get inputId(): string { \r\n        return `${this.id || this._radioButtonId}-input`;\r\n    }\r\n\r\n    private _value: any = false;\r\n\r\n    focused: boolean = false;\r\n    onTouchedCallback: () => void = () => { };\r\n    onChangeCallback: (_: any) => void = () => { };\r\n\r\n    toggle(): void {\r\n\r\n        if (this.disabled || !this.clickable) {\r\n            return;\r\n        }\r\n\r\n        // toggle the checked state\r\n        this.value = this.option;\r\n\r\n        // call callback\r\n        this.onChangeCallback(this.value);\r\n    }\r\n\r\n    // Functions required to update ng-model\r\n    writeValue(value: boolean): void {\r\n        if (value !== this._value) {\r\n            this._value = value;\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport { RadioButtonComponent } from './radiobutton.component';\r\n\r\n@NgModule({\r\n    imports: [FormsModule],\r\n    exports: [RadioButtonComponent],\r\n    declarations: [RadioButtonComponent]\r\n})\r\nexport class RadioButtonModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject ,  Subject } from 'rxjs';\r\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\r\nimport { SearchBuilderQuery } from './interfaces/query.interface';\r\n\r\n@Injectable()\r\nexport class SearchBuilderService {\r\n\r\n  query: SearchBuilderQuery = {};\r\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\r\n  validationChange: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  private _componentId: number = 0;\r\n  private _components: SearchBuilderComponentDefinition[] = [];\r\n  private _validation: { [key: number]: boolean } = {};\r\n\r\n  /**\r\n   * Add a component to the internal list of components\r\n   */\r\n  registerComponent(component: SearchBuilderComponentDefinition): void {\r\n\r\n    // ensure there are no components with a matching name\r\n    if (this._components.find(cmp => cmp.name === component.name)) {\r\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\r\n    }\r\n\r\n    // if unique then add the component to the list\r\n    this._components.push(component);\r\n  }\r\n\r\n  /**\r\n   * Bulk registration of components\r\n   * (Just a helper method)\r\n   */\r\n  registerComponents(components: SearchBuilderComponentDefinition[]): void {\r\n    components.forEach(component => this.registerComponent(component));\r\n  }\r\n\r\n  /**\r\n   * Get a registered component class\r\n   */\r\n  getComponent(name: string): any {\r\n\r\n    // find the component\r\n    const component = this._components.find(cmp => cmp.name === name);\r\n\r\n    // if there is no match throw an exception\r\n    if (!component) {\r\n      throw new Error(`No search build component with the name ${name} exists`);\r\n    }\r\n\r\n    // ensure config is defined - at least to an empty object\r\n    component.config = component.config || {};\r\n\r\n    return component;\r\n  }\r\n\r\n  /**\r\n   * Update the internal search query state\r\n   * note that the query will be immutable\r\n   */\r\n  setQuery(query: SearchBuilderQuery): void {\r\n    this.query = Object.assign({}, query);\r\n  }\r\n\r\n  /**\r\n   * Return the current query state\r\n   */\r\n  getQuery(): SearchBuilderQuery {\r\n    return this.query;\r\n  }\r\n\r\n  /**\r\n   * Trigger the observable to indicate the query has been updated\r\n   */\r\n  queryHasChanged(): void {\r\n    this.queryChange.next(this.query);\r\n  }\r\n\r\n  /**\r\n   * Store the validation state of the query\r\n   */\r\n  setValid(id: number, valid: boolean): void {\r\n\r\n    // store the state for this specific component\r\n    this._validation[id] = valid;\r\n\r\n    // evaluate the entire validation state\r\n    this.validationChange.next(!Object.keys(this._validation).some(key => !this._validation[key]));\r\n  }\r\n\r\n  /**\r\n   * Generate a unique id for each component\r\n   */\r\n  generateComponentId(): number {\r\n    return this._componentId++;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\r\nimport { SearchBuilderService } from '../search-builder.service';\r\n\r\n@Injectable()\r\nexport class SearchBuilderGroupService {\r\n\r\n  private _id: string;\r\n\r\n  constructor(private _searchBuilderService: SearchBuilderService) { }\r\n\r\n  /**\r\n   * Initialise the group by defining an id\r\n   */\r\n  init(id: string): void {\r\n    // store the name of the group\r\n    this._id = id;\r\n\r\n    // create the entry in the query object if it doesn't exist\r\n    if (!this._searchBuilderService.query[this._id]) {\r\n\r\n      // create the section\r\n      this._searchBuilderService.query[this._id] = [];\r\n\r\n      // emit the changes after the initial setup\r\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a field from the search builder query\r\n   */\r\n  remove(field: SearchBuilderGroupQuery): void {\r\n    // get the query for this group\r\n    const query = this.getQuery();\r\n\r\n    // remove the field from the array\r\n    query.splice(query.indexOf(field), 1);\r\n  }\r\n\r\n  /**\r\n   * Get the query for this specific search group\r\n   */\r\n  getQuery(): SearchBuilderGroupQuery[] {\r\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { SearchBuilderGroupService } from './search-builder-group.service';\r\nimport { SearchBuilderService } from '../search-builder.service';\r\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\r\n\r\n@Component({\r\n  selector: 'ux-search-builder-group',\r\n  template: `<h4 class=\"search-group-title\">{{ header }}</h4>\r\n\r\n<main class=\"search-group-content\">\r\n\r\n  <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\r\n\r\n  <section class=\"search-group-items\">\r\n\r\n    <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\r\n\r\n      <div class=\"search-group-item\">\r\n        <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\r\n      </div>\r\n\r\n      <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\r\n        <span class=\"hpe-icon hpe-close\"></span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder Item -->\r\n    <ng-container *ngIf=\"showPlaceholder\">\r\n\r\n      <!-- The Default Placeholder -->\r\n      <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\r\n        \r\n        <div class=\"search-group-item\">\r\n          <label class=\"form-label\">New field</label>\r\n          <div class=\"form-control\"></div>\r\n        </div>\r\n  \r\n      </div>\r\n\r\n      <!-- Allow a custom placeholder -->\r\n    <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\r\n\r\n    </ng-container>\r\n\r\n  </section>\r\n\r\n  <section class=\"search-builder-group-add-field\" (click)=\"add.emit($event)\">\r\n\r\n    <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\r\n      <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\r\n    </button>\r\n\r\n    <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\r\n\r\n  </section>\r\n\r\n</main>\r\n\r\n<hr class=\"search-builder-group-divider\">\r\n`,\r\n  providers: [SearchBuilderGroupService]\r\n})\r\nexport class SearchBuilderGroupComponent implements OnInit {\r\n\r\n  @Input() id: string;\r\n  @Input() header: string;\r\n  @Input() operator: SearchBuilderGroupOperator = 'and';\r\n  @Input() addText: string = 'Add a field';\r\n  @Input() placeholder: TemplateRef<any>;\r\n  @Input() showPlaceholder: boolean = false;\r\n\r\n  @Output() add: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n  @Output() remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\r\n\r\n  constructor(public searchBuilderGroupService: SearchBuilderGroupService, private _searchBuilderService: SearchBuilderService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // ensure we have a name otherwise throw an error\r\n    if (!this.id) {\r\n      throw new Error('Search builder group must have a name attribute.');\r\n    }\r\n\r\n    // otherwise register the group\r\n    this.searchBuilderGroupService.init(this.id);\r\n  }\r\n\r\n  removeField(field: SearchBuilderGroupQuery): void {\r\n    this.searchBuilderGroupService.remove(field);\r\n    this.remove.emit(field);\r\n  }\r\n}\r\n\r\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\r\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { SearchBuilderService } from '../search-builder.service';\r\n\r\n@Directive({\r\n    selector: '[uxSearchBuilderOutlet]'\r\n})\r\nexport class SearchBuilderOutletDirective implements OnInit {\r\n\r\n    @Input() uxSearchBuilderOutlet: string;\r\n    @Input() uxSearchBuilderOutletContext: any;\r\n\r\n    private _componentRef: ComponentRef<any>;\r\n\r\n    constructor(\r\n        private _viewContainerRef: ViewContainerRef,\r\n        private _componentFactoryResolver: ComponentFactoryResolver,\r\n        private _searchBuilderService: SearchBuilderService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        // get the class from the type\r\n        const componentDefinition = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\r\n\r\n        // create the component factory\r\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentDefinition.component);\r\n\r\n        // create the component instance\r\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\r\n\r\n        // combine the predefined config with any dynmaic config\r\n        const config = Object.assign({}, componentDefinition.config, this.uxSearchBuilderOutletContext.config || {});\r\n\r\n        // set the context and config property on the component instance\r\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\r\n        this._componentRef.instance.config = config;\r\n    }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { SearchBuilderComponentContext } from '../interfaces/component-context.interface';\r\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\r\nimport { SearchBuilderService } from '../search-builder.service';\r\n\r\n@Component({\r\n    selector: 'ux-base-search',\r\n    template: ''\r\n})\r\nexport class BaseSearchComponent implements OnDestroy {\r\n\r\n    type: string;\r\n    config: any;\r\n    context: SearchBuilderComponentContext;\r\n\r\n    private _id: number = this._searchBuilderService.generateComponentId();\r\n    private _valid: boolean = true;\r\n\r\n    /**\r\n     * Get the current value of the component\r\n     */\r\n    get value() {\r\n        return this.context.value;\r\n    }\r\n\r\n    /**\r\n     * Set the current value of the component\r\n     */\r\n    set value(value: any) {\r\n        this.context.value = value;\r\n        this._searchBuilderService.queryHasChanged();\r\n\r\n        // if value has been set perform validation\r\n        this.validate();\r\n    }\r\n\r\n    get valid(): boolean {\r\n        return this._valid;\r\n    }\r\n\r\n    set valid(valid: boolean) {\r\n        this._valid = valid;\r\n        this._searchBuilderService.setValid(this._id, valid);\r\n    }\r\n\r\n    constructor(\r\n        private _searchBuilderService: SearchBuilderService,\r\n        private _searchBuilderGroupService: SearchBuilderGroupService\r\n    ) { }\r\n\r\n    /**\r\n     * Make sure we clean up after ourselves\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.valid = true;\r\n    }\r\n\r\n    /**\r\n     * Perform any required validation on the value\r\n     */\r\n    validate(): void {\r\n        // if a custom validation function has been provided then use it\r\n        this.valid = this.config.validation ? this.config.validation(this, this.value) : true;\r\n    }\r\n\r\n}\r\n\r\nexport interface BaseSearchComponentConfig {\r\n    label?: string;\r\n    placeholder?: string;\r\n    validation?: (value: any) => boolean;\r\n}","import { Component } from '@angular/core';\r\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\r\n\r\n@Component({\r\n  selector: 'ux-search-text',\r\n  template: `<label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\r\n<input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" class=\"form-control\">`\r\n})\r\nexport class SearchTextComponent extends BaseSearchComponent {\r\n\r\n  type: string = 'text';\r\n\r\n  get label(): string {\r\n    return this.config.label;\r\n  }\r\n\r\n  get placeholder(): string {\r\n    return this.config.placeholder || 'Enter text';\r\n  }\r\n}\r\n\r\nexport interface SearchTextConfig extends BaseSearchComponentConfig { }","import { Component, OnInit } from '@angular/core';\r\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\r\n\r\n@Component({\r\n  selector: 'ux-search-date',\r\n  template: `<label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\r\n\r\n<div class=\"input-group date m-nil\">\r\n    <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"popover.show()\">\r\n        <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\r\n    </span>\r\n    <input type=\"text\" #popover=\"ux-popover\" [ngModel]=\"value | date:'dd MMMM yyyy'\" [uxPopover]=\"popoverTemplate\"\r\n        placement=\"bottom\" popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"placeholder\">\r\n</div>\r\n\r\n<ng-template #popoverTemplate>\r\n    <ux-date-time-picker [(date)]=\"value\" [showTime]=\"false\"></ux-date-time-picker>\r\n</ng-template>`\r\n})\r\nexport class SearchDateComponent extends BaseSearchComponent implements OnInit {\r\n\r\n  type: string = 'date';\r\n\r\n  get label(): string {\r\n    return this.config.label;\r\n  }\r\n\r\n  get placeholder(): string {\r\n    return this.config.placeholder || 'Enter date';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // by default set to the current date if not specified\r\n    if (!this.value) {\r\n      this.value = new Date();\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SearchDateConfig extends BaseSearchComponentConfig { }","import { Component } from '@angular/core';\r\nimport { BaseSearchComponent } from '../base-search.component';\r\n\r\n@Component({\r\n    selector: 'ux-search-date-range',\r\n    template: `<label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"form-inline\" [class.has-error]=\"!valid\">\r\n\r\n            <div class=\"form-group p-r-md\">\r\n                <label class=\"form-label m-r-xs\">{{ fromLabel }}</label>\r\n\r\n                <div class=\"input-group date m-nil\">\r\n                    <span class=\"input-group-addon p-r-xs\" tabindex=\"1\" (click)=\"fromPopover.show()\">\r\n                        <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                    <input type=\"text\" #fromPopover=\"ux-popover\" [ngModel]=\"from | date:'dd MMMM yyyy'\" [uxPopover]=\"fromPopoverTemplate\" placement=\"bottom\"\r\n                        popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"fromPlaceholder\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group p-r-xs\">\r\n                <label class=\"form-label m-r-xs\">{{ toLabel }}</label>\r\n\r\n                <div class=\"input-group date m-nil\">\r\n                    <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"toPopover.show()\">\r\n                        <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                    <input type=\"text\" #toPopover=\"ux-popover\" [ngModel]=\"to | date:'dd MMMM yyyy'\" [uxPopover]=\"toPopoverTemplate\" placement=\"bottom\"\r\n                        popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"toPlaceholder\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #fromPopoverTemplate>\r\n    <ux-date-time-picker [(date)]=\"from\" [showTime]=\"false\"></ux-date-time-picker>\r\n</ng-template>\r\n\r\n<ng-template #toPopoverTemplate>\r\n    <ux-date-time-picker [(date)]=\"to\" [showTime]=\"false\"></ux-date-time-picker>\r\n</ng-template>`\r\n})\r\nexport class SearchDateRangeComponent extends BaseSearchComponent {\r\n\r\n    type: string = 'date-range';\r\n\r\n    get label(): string {\r\n        return this.config.label;\r\n    }\r\n\r\n    get from() {\r\n\r\n        // if value does not exist the set it\r\n        if (!this.value || !this.value.from) {\r\n            this.from = new Date();\r\n        }\r\n\r\n        // ensure that the from value is a date object\r\n        if (this.value.from instanceof Date === false) {\r\n            this.value.from = new Date(this.value.from);\r\n        }\r\n\r\n        return this.value.from;\r\n    }\r\n\r\n    set from(fromValue: any) {\r\n\r\n        // create new object based on the current value\r\n        const value = Object.assign({}, this.value);\r\n\r\n        // ensure that the from value is a date\r\n        if (fromValue instanceof Date === false) {\r\n            fromValue = new Date(fromValue);\r\n        }\r\n\r\n        // set the latest value\r\n        value.from = fromValue;\r\n\r\n        // update the value object while ensuring immutability\r\n        this.value = value;\r\n    }\r\n\r\n    get to() {\r\n\r\n        // if value does not exist the set it\r\n        if (!this.value || !this.value.to) {\r\n            this.to = new Date();\r\n        }\r\n\r\n        // ensure that the to value is a date object\r\n        if (this.value.to instanceof Date === false) {\r\n            this.value.to = new Date(this.value.to);\r\n        }\r\n\r\n        return this.value.to;\r\n    }\r\n\r\n    set to(toValue: any) {\r\n\r\n        // create new object based on the current value\r\n        const value = Object.assign({}, this.value);\r\n\r\n        // ensure that the to value is a date\r\n        if (toValue instanceof Date === false) {\r\n            toValue = new Date(toValue);\r\n        }\r\n\r\n        // set the latest value\r\n        value.to = toValue;\r\n\r\n        // update the value object while ensuring immutability\r\n        this.value = value;\r\n    }\r\n\r\n    get fromLabel(): string {\r\n        return this.config.fromLabel || 'From';\r\n    }\r\n\r\n    get toLabel(): string {\r\n        return this.config.toLabel || 'To';\r\n    }\r\n\r\n    get fromPlaceholder(): string {\r\n        return this.config.fromPlaceholder;\r\n    }\r\n\r\n    get toPlaceholder(): string {\r\n        return this.config.toPlaceholder;\r\n    }\r\n\r\n    /**\r\n     * Override the default validation\r\n     */\r\n    validate(): void {\r\n\r\n        // check if there is a config validation function\r\n        if (this.config.validation) {\r\n            return super.validate();\r\n        }\r\n\r\n        // create copies of the dates so we can modify time value (to ignore it)\r\n        const from = new Date(this.value.from);\r\n        const to = new Date(this.value.to);\r\n\r\n        // set the time to the same so we dont compare it\r\n        from.setHours(0, 0, 0, 0);\r\n        to.setHours(0, 0, 0, 0);\r\n\r\n        // valid if the from date is less than or equal to the to date\r\n        this.valid = from <= to;\r\n    }\r\n}\r\n\r\nexport interface SearchDateRangeConfig {\r\n    label?: string;\r\n    fromLabel?: string;\r\n    toLabel?: string;\r\n    fromPlaceholder?: string;\r\n    toPlaceholder?: string;\r\n    validation: (value: any) => boolean;\r\n}","import { Component } from '@angular/core';\r\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\r\nimport { InfiniteScrollLoadFunction } from '../../../../index';\r\n\r\n@Component({\r\n  selector: 'ux-search-select',\r\n  template: `<label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\r\n\r\n<ux-select [(value)]=\"value\" \r\n           [options]=\"options\" \r\n           [multiple]=\"multiple\" \r\n           [placeholder]=\"placeholder\" \r\n           [dropDirection]=\"dropDirection\"\r\n           [pageSize]=\"pageSize\"\r\n           [allowNull]=\"allowNull\"\r\n           [disabled]=\"disabled\"\r\n           [maxHeight]=\"maxHeight\"\r\n           [key]=\"config.key\"\r\n           [display]=\"config.display\"\r\n           [loadingTemplate]=\"config.loadingTemplate\"\r\n           [optionTemplate]=\"config.optionTemplate\"\r\n           [noOptionsTemplate]=\"config.noOptionsTemplate\">\r\n</ux-select>`\r\n})\r\nexport class SearchSelectComponent extends BaseSearchComponent {\r\n\r\n  type: string = 'select';\r\n\r\n  /**\r\n   * Provide defaults for undefined properties\r\n   */\r\n  get label(): string {\r\n    return this.config.label;\r\n  }\r\n\r\n  get options() {\r\n    return this.config.options || [];\r\n  }\r\n\r\n  get multiple(): boolean {\r\n    return this.config.multiple || false;\r\n  }\r\n\r\n  get placeholder(): string {\r\n    return this.config.placeholder || 'Select item';\r\n  }\r\n\r\n  get dropDirection(): string {\r\n    return this.config.dropDirection || 'down';\r\n  }\r\n\r\n  get allowNull(): boolean {\r\n    return this.config.allowNull || false;\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.config.disabled || false;\r\n  }\r\n\r\n  get maxHeight(): string {\r\n    return this.config.maxHeight || '250px';\r\n  }\r\n\r\n  get pageSize(): number {\r\n    return this.config.pageSize || 20;\r\n  }\r\n}\r\n\r\nexport interface SearchSelectConfig extends BaseSearchComponentConfig {\r\n  options?: any[] | InfiniteScrollLoadFunction;\r\n  multiple?: boolean;\r\n  dropDirection?: 'up' | 'down';\r\n  allowNull?: boolean;\r\n  disabled?: boolean;\r\n  maxHeight?: string;\r\n  pageSize?: number;\r\n}","import { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\r\nimport { SearchBuilderQuery } from './interfaces/query.interface';\r\nimport { SearchBuilderService } from './search-builder.service';\r\n\r\n@Component({\r\n  selector: 'ux-search-builder',\r\n  template: `<ng-content></ng-content>`,\r\n  providers: [SearchBuilderService]\r\n})\r\nexport class SearchBuilderComponent implements OnDestroy {\r\n\r\n  @Input()\r\n  set components(components: SearchBuilderComponentDefinition[]) {\r\n    this._searchBuilderService.registerComponents(components);\r\n  }\r\n\r\n  @Input()\r\n  set query(value: SearchBuilderQuery) {\r\n    this._searchBuilderService.setQuery(value);\r\n  }\r\n\r\n  get query() {\r\n    return this._searchBuilderService.getQuery();\r\n  }\r\n\r\n  @Output() queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\r\n  @Output() valid: EventEmitter<boolean> = new EventEmitter<boolean>(true);\r\n\r\n  private _querySubscription: Subscription;\r\n  private _validSubscription: Subscription;\r\n\r\n  /**\r\n   * Register the default search builder components\r\n   */\r\n  constructor(private _searchBuilderService: SearchBuilderService) {\r\n\r\n    // watch for any query changes\r\n    this._querySubscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\r\n\r\n    // watch for any changes to the validation\r\n    this._validSubscription = _searchBuilderService.validationChange.pipe(distinctUntilChanged()).subscribe(valid => this.valid.emit(valid));\r\n  }\r\n\r\n  /**\r\n   * Remove any subscriptions and cleanup\r\n   */\r\n  ngOnDestroy(): void {\r\n    this._querySubscription.unsubscribe();\r\n    this._validSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","export class TypeaheadOptionEvent {\r\n    constructor(public option: any) {}\r\n}","import { TypeaheadComponent } from './index';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TypeaheadKeyService {\r\n\r\n    constructor() { }\r\n\r\n    handleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\r\n        if (typeahead) {\r\n            switch (event.key) {\r\n                case 'ArrowUp':\r\n                case 'Up':\r\n                    if (!typeahead.open) {\r\n                        typeahead.open = true;\r\n                    } else {\r\n                        typeahead.moveHighlight(-1);\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                case 'ArrowDown':\r\n                case 'Down':\r\n                    if (!typeahead.open) {\r\n                        typeahead.open = true;\r\n                    } else {\r\n                        typeahead.moveHighlight(1);\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                case 'Escape':\r\n                case 'Esc':\r\n                    typeahead.open = false;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TypeaheadService {\r\n\r\n    open$ = new BehaviorSubject<boolean>(false);\r\n\r\n    highlightedElement$ = new BehaviorSubject<HTMLElement>(null);\r\n}","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnDestroy, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\r\nimport { BehaviorSubject ,  Subscription ,  combineLatest } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\r\nimport { TypeaheadOptionEvent } from './typeahead-event';\r\nimport { TypeaheadService } from './typeahead.service';\r\n\r\nlet uniqueId = 0;\r\n\r\n@Component({\r\n    selector: 'ux-typeahead',\r\n    template: `<div class=\"ux-typeahead-options\"\r\n    [uxInfiniteScroll]=\"loadOptionsCallback\"\r\n    [collection]=\"visibleOptions$ | async\"\r\n    (collectionChange)=\"visibleOptions$.next($event)\"\r\n    [enabled]=\"isInfiniteScroll()\"\r\n    [filter]=\"filter\"\r\n    [loadOnScroll]=\"true\"\r\n    [pageSize]=\"pageSize\"\r\n    [scrollElement]=\"typeaheadElement\"\r\n    (loading)=\"loading = true\"\r\n    (loaded)=\"loading = false\">\r\n\r\n    <ol *ngIf=\"(visibleOptions$ | async).length > 0\">\r\n        <li *ngFor=\"let option of (visibleOptions$ | async); let i = index\"\r\n            [attr.id]=\"id + '-option-' + i\"\r\n            [class.disabled]=\"isDisabled(option)\"\r\n            [class.highlighted]=\"(highlighted$ | async).key === option.key\"\r\n            [attr.aria-selected]=\"multiselectable ? isDisabled(option) : null\"\r\n            [uxTypeaheadHighlight]=\"(highlighted$ | async).key === option.key\"\r\n            [uxScrollIntoViewIf]=\"(highlighted$ | async).key === option.key\"\r\n            [scrollParent]=\"typeaheadElement.nativeElement\"\r\n            (mousedown)=\"optionMousedownHandler($event)\"\r\n            (click)=\"optionClickHandler($event, option)\"\r\n            (mouseover)=\"highlight(option)\">\r\n\r\n            <ng-container [ngTemplateOutlet]=\"optionTemplate\"\r\n                [ngTemplateOutletContext]=\"{option: option.value, api: optionApi}\">\r\n            </ng-container>\r\n\r\n        </li>\r\n    </ol>\r\n\r\n    <div *uxInfiniteScrollLoading>\r\n        <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>\r\n<div *ngIf=\"(visibleOptions$ | async).length === 0 && !loading\">\r\n    <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\r\n    </ng-container>\r\n</div>\r\n\r\n<ng-template #defaultLoadingTemplate>\r\n    <div class=\"ux-typeahead-loading\">\r\n        <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\r\n        <div>Loading...</div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\r\n    <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\r\n</ng-template>\r\n\r\n<ng-template #defaultNoOptionsTemplate>\r\n    <span class=\"ux-typeahead-no-options\">No results</span>\r\n</ng-template>`,\r\n    providers: [TypeaheadService],\r\n    host: {\r\n        'role': 'listbox',\r\n        '[class.open]': 'open',\r\n        '[class.drop-up]': 'dropDirection === \"up\"',\r\n        '[style.maxHeight]': 'maxHeight'\r\n    }\r\n})\r\nexport class TypeaheadComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    @Input() @HostBinding('attr.id') id: string = `ux-typeahead-${++uniqueId}`;\r\n\r\n    @Input() options: any[] | InfiniteScrollLoadFunction;\r\n    @Input() filter: string;\r\n\r\n    @Input('open')\r\n    get open() {\r\n        return this._service.open$.getValue();\r\n    }\r\n    set open(value: boolean) {\r\n        this._service.open$.next(value);\r\n    }\r\n\r\n    @Output() openChange = new EventEmitter<boolean>();\r\n\r\n    @Input() display: (option: any) => string | string;\r\n    @Input() key: (option: any) => string | string;\r\n    @Input() disabledOptions: any[];\r\n    @Input() dropDirection: 'up' | 'down' = 'down';\r\n    @Input() maxHeight: string = '250px';\r\n    @Input() @HostBinding('attr.aria-multiselectable') multiselectable: boolean = false;\r\n    @Input() openOnFilterChange: boolean = true;\r\n    @Input() pageSize: number = 20;\r\n    @Input() selectFirst: boolean = true;\r\n\r\n    @Input() loadingTemplate: TemplateRef<any>;\r\n    @Input() optionTemplate: TemplateRef<any>;\r\n    @Input() noOptionsTemplate: TemplateRef<any>;\r\n\r\n    @Output() optionSelected = new EventEmitter<TypeaheadOptionEvent>();\r\n\r\n    @Output() highlightedChange = new EventEmitter<any>();\r\n    @Output() highlightedElementChange = new EventEmitter<HTMLElement>();\r\n\r\n    @ViewChild('defaultLoadingTemplate') private _defaultLoadingTemplate: TemplateRef<any>;\r\n    @ViewChild('defaultOptionTemplate') private _defaultOptionTemplate: TemplateRef<any>;\r\n    @ViewChild('defaultNoOptionsTemplate') private _defaultNoOptionsTemplate: TemplateRef<any>;\r\n\r\n    loadOptionsCallback: InfiniteScrollLoadFunction;\r\n    visibleOptions$ = new BehaviorSubject<TypeaheadVisibleOption[]>([]);\r\n    loading = false;\r\n    clicking = false;\r\n    highlighted$ = new BehaviorSubject<TypeaheadVisibleOption>(null);\r\n\r\n    get highlighted(): any {\r\n        const value = this.highlighted$.getValue();\r\n        return value ? value.value : null;\r\n    }\r\n\r\n    private _open: boolean = false;\r\n    private _subscription = new Subscription();\r\n\r\n    optionApi: TypeaheadOptionApi = {\r\n        getKey: this.getKey.bind(this),\r\n        getDisplay: this.getDisplay.bind(this),\r\n        getDisplayHtml: this.getDisplayHtml.bind(this)\r\n    };\r\n\r\n    constructor(\r\n        public typeaheadElement: ElementRef,\r\n        private _cdRef: ChangeDetectorRef,\r\n        private _service: TypeaheadService\r\n    ) {\r\n\r\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\r\n            if (typeof this.options === 'function') {\r\n                return this.options(pageNum, pageSize, filter);\r\n            }\r\n            return null;\r\n        };\r\n\r\n        this._subscription.add(\r\n            this._service.open$.pipe(distinctUntilChanged()).subscribe((next) => {\r\n                this.openChange.emit(next);\r\n\r\n                if (next) {\r\n                    this.initOptions();\r\n                }\r\n            })\r\n        );\r\n\r\n        this._subscription.add(\r\n            this.highlighted$.subscribe((next) => {\r\n                this.highlightedChange.emit(next ? next.value : null);\r\n            })\r\n        );\r\n\r\n        this._subscription.add(\r\n            combineLatest(this._service.open$, this._service.highlightedElement$, this.visibleOptions$)\r\n                .subscribe(([open, highlightedElement, visibleOptions]) => {\r\n                    this.highlightedElementChange.emit(open && visibleOptions.length > 0 ? highlightedElement : null);\r\n                })\r\n        );\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // Attach default loading template\r\n        if (!this.loadingTemplate) {\r\n            this.loadingTemplate = this._defaultLoadingTemplate;\r\n        }\r\n\r\n        // Attach default option template\r\n        if (!this.optionTemplate) {\r\n            this.optionTemplate = this._defaultOptionTemplate;\r\n        }\r\n\r\n        // Attach default \"no results\" template\r\n        if (!this.noOptionsTemplate) {\r\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\r\n        }\r\n\r\n        this._cdRef.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // Open the dropdown if the filter value updates\r\n        if (changes.filter) {\r\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\r\n                this.open = true;\r\n            }\r\n        }\r\n\r\n        // Re-filter visibleOptions\r\n        this.updateOptions();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    @HostListener('mousedown')\r\n    mousedownHandler() {\r\n        this.clicking = true;\r\n    }\r\n\r\n    @HostListener('mouseup')\r\n    mouseupHandler() {\r\n        this.clicking = false;\r\n    }\r\n\r\n    optionMousedownHandler(event: MouseEvent) {\r\n        // Workaround to prevent focus changing when an option is clicked\r\n        event.preventDefault();\r\n    }\r\n\r\n    optionClickHandler(event: MouseEvent, option: TypeaheadVisibleOption) {\r\n        this.select(option);\r\n    }\r\n\r\n    /**\r\n     * Returns the unique key value of the given option.\r\n     */\r\n    getKey(option: any): string {\r\n        if (typeof this.key === 'function') {\r\n            return this.key(option);\r\n        }\r\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\r\n            return option[<string>this.key];\r\n        }\r\n        return this.getDisplay(option);\r\n    }\r\n\r\n    /**\r\n     * Returns the display value of the given option.\r\n     */\r\n    getDisplay(option: any): string {\r\n        if (typeof this.display === 'function') {\r\n            return this.display(option);\r\n        }\r\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\r\n            return option[<string>this.display];\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\r\n     * @param option\r\n     */\r\n    getDisplayHtml(option: any) {\r\n        let displayText;\r\n        if (typeof option === 'string') {\r\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n        } else {\r\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n        }\r\n        let displayHtml = displayText;\r\n        if (this.filter) {\r\n            const length = this.filter.length;\r\n            const matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\r\n            if (matchIndex >= 0) {\r\n                var highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\r\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\r\n            }\r\n        }\r\n        return displayHtml;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the infinite scroll component should load\r\n     */\r\n    isInfiniteScroll() {\r\n        return typeof this.options === 'function';\r\n    }\r\n\r\n    /**\r\n     * Selects the given option, emitting the optionSelected event and closing the dropdown.\r\n     */\r\n    select(option: TypeaheadVisibleOption) {\r\n        if (!this.isDisabled(option)) {\r\n            this.optionSelected.emit(new TypeaheadOptionEvent(option.value));\r\n            this.highlighted$.next(null);\r\n            this.open = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the given option is part of the disabledOptions array.\r\n     */\r\n    isDisabled(option: TypeaheadVisibleOption): boolean {\r\n        if (this.disabledOptions) {\r\n            const result = this.disabledOptions.find((selectedOption) => {\r\n                return this.getKey(selectedOption) === option.key;\r\n            });\r\n            return result !== undefined;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Set the given option as the current highlighted option, available in the highlightedOption parameter.\r\n     */\r\n    highlight(option: TypeaheadVisibleOption) {\r\n        if (!this.isDisabled(option)) {\r\n            this.highlighted$.next(option);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Increment or decrement the highlighted option in the list. Disabled options are skipped.\r\n     * @param d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\r\n     */\r\n    moveHighlight(d: number): any {\r\n        const visibleOptions = this.visibleOptions$.getValue();\r\n        const highlightIndex = this.indexOfVisibleOption(this.highlighted);\r\n        let newIndex = highlightIndex;\r\n        let disabled = true;\r\n        let inBounds = true;\r\n        do {\r\n            newIndex = newIndex + d;\r\n            inBounds = (newIndex >= 0 && newIndex < visibleOptions.length);\r\n            disabled = inBounds && this.isDisabled(visibleOptions[newIndex]);\r\n        }\r\n        while (inBounds && disabled);\r\n\r\n        if (!disabled && inBounds) {\r\n            this.highlighted$.next(visibleOptions[newIndex]);\r\n        }\r\n\r\n        return this.highlighted;\r\n    }\r\n\r\n    /**\r\n     * Set up the options before the dropdown is displayed.\r\n     */\r\n    initOptions() {\r\n        // Clear previous highlight\r\n        this.highlighted$.next(null);\r\n        if (this.selectFirst) {\r\n            // This will highlight the first non-disabled option.\r\n            this.moveHighlight(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the visibleOptions array with the current filter.\r\n     */\r\n    updateOptions() {\r\n        if (typeof this.options === 'object') {\r\n            const normalisedInput = (this.filter || '').toLowerCase();\r\n            const visibleOptions = this.options\r\n                .filter((option) => {\r\n                    return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\r\n                })\r\n                .map((value) => {\r\n                    return {\r\n                        value: value,\r\n                        key: this.getKey(value)\r\n                    };\r\n                });\r\n            this.visibleOptions$.next(visibleOptions);\r\n        }\r\n\r\n        this.initOptions();\r\n    }\r\n\r\n    /**\r\n     * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\r\n     */\r\n    private indexOfVisibleOption(option: any): number {\r\n        if (option) {\r\n            const optionKey = this.getKey(option);\r\n            return this.visibleOptions$.getValue().findIndex((el) => {\r\n                return el.key === optionKey;\r\n            });\r\n        }\r\n\r\n        return -1;\r\n    }\r\n}\r\n\r\n/**\r\n * The API available to option templates.\r\n */\r\nexport interface TypeaheadOptionApi {\r\n\r\n    /**\r\n     * Returns the unique key value of the given option.\r\n     */\r\n    getKey(option: any): string;\r\n\r\n    /**\r\n     * Returns the display value of the given option.\r\n     */\r\n    getDisplay(option: any): string;\r\n\r\n    /**\r\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\r\n     */\r\n    getDisplayHtml(option: any): string;\r\n}\r\n\r\nexport interface TypeaheadVisibleOption {\r\n    value: any;\r\n    key: string;\r\n}","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { Observable ,  Subject } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[uxInfiniteScrollLoadButton]'\r\n})\r\nexport class InfiniteScrollLoadButtonDirective {\r\n\r\n    @Input('uxInfiniteScrollLoadButton')\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n    set visible(value: boolean) {\r\n        if (value !== this._visible) {\r\n            if (value) {\r\n                this._viewContainer.createEmbeddedView(this._template);\r\n\r\n                // Template content follows the elementRef, which is a comment.\r\n                const clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\r\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\r\n            } else {\r\n                this._viewContainer.clear();\r\n            }\r\n        }\r\n\r\n        this._visible = value;\r\n    }\r\n\r\n    @Output() load: Observable<Event>;\r\n\r\n    private _visible: boolean = false;\r\n    private _load = new Subject();\r\n\r\n    constructor(\r\n        private _element: ElementRef,\r\n        private _template: TemplateRef<any>,\r\n        private _viewContainer: ViewContainerRef,\r\n        private _renderer: Renderer2) {\r\n\r\n        this.load = this._load.asObservable() as Observable<Event>;\r\n    }\r\n\r\n    private onClick(event: MouseEvent) {\r\n        this._load.next(event);\r\n    }\r\n\r\n    private getNextElementSibling(element: any): Element {\r\n        var next = element;\r\n        while (next = next.nextSibling) {\r\n            if (next.nodeType === 1) {\r\n                return next;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[uxInfiniteScrollLoading]'\r\n})\r\nexport class InfiniteScrollLoadingDirective {\r\n\r\n    @Input('uxInfiniteScrollLoading')\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n    set visible(value: boolean) {\r\n        if (value !== this._visible) {\r\n            if (value) {\r\n                this._viewContainer.createEmbeddedView(this._templateRef);\r\n            } else {\r\n                this._viewContainer.clear();\r\n            }\r\n        }\r\n        \r\n        this._visible = value;\r\n    }\r\n\r\n    private _visible: boolean = false;\r\n\r\n    constructor(\r\n        private _templateRef: TemplateRef<any>,\r\n        private _viewContainer: ViewContainerRef) { }\r\n}\r\n","\r\nimport { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges } from '@angular/core';\r\nimport { BehaviorSubject ,  Observable ,  from ,  fromEvent ,  of ,  Subject ,  Subscription } from 'rxjs';\r\nimport { auditTime, combineLatest, filter as filterOperator, first, takeUntil } from 'rxjs/operators';\r\nimport { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\r\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\r\n\r\n@Directive({\r\n    selector: '[uxInfiniteScroll]',\r\n    exportAs: 'uxInfiniteScroll'\r\n})\r\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\r\n\r\n    @Input('uxInfiniteScroll') load: InfiniteScrollLoadFunction;\r\n\r\n    @Input('collection') _collection: any[] = [];\r\n    get collection() {\r\n        return this._collection;\r\n    }\r\n    set collection(value: any[]) {\r\n        this.collectionChange.emit(value);\r\n        this._collection = value;\r\n    }\r\n\r\n\r\n    @Input() set scrollElement(element: ElementRef | HTMLElement) {\r\n        this._scrollElement = element instanceof ElementRef ? element : new ElementRef(element);\r\n    }\r\n\r\n    @Input() enabled: boolean = true;\r\n    @Input() filter: any;\r\n    @Input() loadOnInit: boolean = true;\r\n    @Input() loadOnScroll: boolean = true;\r\n    @Input() pageSize: number = 20;\r\n\r\n    @Output() collectionChange = new EventEmitter<any[]>();\r\n\r\n    @Output('loading')\r\n    loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\r\n\r\n    @Output('loaded')\r\n    loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\r\n\r\n    @Output('loadError')\r\n    loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\r\n\r\n    @ContentChildren(InfiniteScrollLoadButtonDirective)\r\n    private _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\r\n\r\n    @ContentChildren(InfiniteScrollLoadingDirective)\r\n    private _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\r\n\r\n    private _pages: any[][];\r\n    private _nextPageNum = 0;\r\n    private _domObserver: MutationObserver;\r\n    private _scrollEventSub: Subscription;\r\n    private _updateRequests = new Subject<InfiniteScrollRequest>();\r\n\r\n    private _isLoading = new BehaviorSubject<boolean>(false);\r\n    private _isExhausted = new BehaviorSubject<boolean>(false);\r\n    private _loadButtonEnabled = new BehaviorSubject<boolean>(false);\r\n    private _canLoadManually: Observable<boolean>;\r\n\r\n    private _scrollElement: ElementRef;\r\n    private _subscriptions: Subscription[] = [];\r\n    private _loadButtonSubscriptions: Subscription[] = [];\r\n    private _onDestroy = new Subject<void>();\r\n\r\n    constructor(private _element: ElementRef) {\r\n        this._canLoadManually = this._isLoading.pipe(combineLatest(\r\n            this._isExhausted,\r\n            this._loadButtonEnabled,\r\n            (isLoading, isExhausted, loadButtonEnabled) => {\r\n                return !isLoading && !isExhausted && loadButtonEnabled;\r\n            }\r\n        ));\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this._scrollElement) {\r\n            this._scrollElement = this._element;\r\n        }\r\n\r\n        this._loadButtonEnabled.next(!this.loadOnScroll);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n\r\n        // There are two kinds of update requests: check and load.\r\n        // Check requests are throttled and will only cause an update if more data is required\r\n        // to fill the scrolling view, and it isn't already loading some.\r\n        // Load requests are not throttled and always request a page of data.\r\n        this._updateRequests.pipe(filterOperator(request => request.check), auditTime(200), takeUntil(this._onDestroy)).subscribe(this.doRequest.bind(this));\r\n        this._updateRequests.pipe(filterOperator(request => !request.check), takeUntil(this._onDestroy)).subscribe(this.doRequest.bind(this));\r\n\r\n        if (this.enabled) {\r\n            // Subscribe to scroll events and DOM changes.\r\n            this.attachEventHandlers();\r\n        }\r\n\r\n        // Connect the Load More button visible state.\r\n        this._canLoadManually.pipe(takeUntil(this._onDestroy)).subscribe(canLoad => {\r\n            this._loadButtonQuery.forEach(loadButton => {\r\n                loadButton.visible = canLoad;\r\n            });\r\n        });\r\n\r\n        // Connect the loading indicator visible state.\r\n        this._isLoading.pipe(takeUntil(this._onDestroy)).subscribe(isLoading => {\r\n            this._loadingIndicatorQuery.forEach(loading => {\r\n                loading.visible = isLoading;\r\n            });\r\n        });\r\n\r\n        // Link the Load More button click event to trigger an update.\r\n        this.attachLoadButtonEvents();\r\n        this._loadButtonQuery.changes.pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n            this.attachLoadButtonEvents();\r\n        });\r\n\r\n        // Initial update.\r\n        if (this.loadOnInit) {\r\n            this.loadNextPage();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        let check = true;\r\n\r\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\r\n            if (changes.enabled.currentValue) {\r\n                this.attachEventHandlers();\r\n                this.reset();\r\n                check = false;\r\n            } else {\r\n                this.detachEventHandlers();\r\n            }\r\n        }\r\n\r\n        if (this.enabled) {\r\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\r\n                this.reset();\r\n                check = false;\r\n            }\r\n\r\n            if (changes.loadOnScroll) {\r\n                this._loadButtonEnabled.next(\r\n                    !changes.loadOnScroll.currentValue\r\n                );\r\n            }\r\n\r\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\r\n                this.reset();\r\n                check = false;\r\n            }\r\n\r\n            this._updateRequests.next({\r\n                check: check,\r\n                pageNumber: this._nextPageNum,\r\n                pageSize: this.pageSize,\r\n                filter: this.filter\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.detachEventHandlers();\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n    }\r\n\r\n    /**\r\n     * Request an additional page of data.\r\n     */\r\n    loadNextPage() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this._updateRequests.next({\r\n            check: false,\r\n            pageNumber: this._nextPageNum,\r\n            pageSize: this.pageSize,\r\n            filter: this.filter\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Request a check for whether an additional page of data is required. This is throttled.\r\n     */\r\n    check() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this._updateRequests.next({\r\n            check: true,\r\n            pageNumber: this._nextPageNum,\r\n            pageSize: this.pageSize,\r\n            filter: this.filter\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Clear the collection. Future requests will load from page 0.\r\n     */\r\n    reset() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        // Reset the page counter.\r\n        this._nextPageNum = 0;\r\n\r\n        this._pages = [];\r\n\r\n        // Clear the collection (without changing the reference).\r\n        if (this.collection) {\r\n            this.collection.length = 0;\r\n        }\r\n\r\n        // Reset the exhausted flag, allowing the Load More button to appear.\r\n        this._isExhausted.next(false);\r\n\r\n        // Cancel any pending requests\r\n        if (this._subscriptions) {\r\n            this._subscriptions.forEach(request => request.unsubscribe());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reload the data without clearing the view.\r\n     */\r\n    reload() {\r\n        this._pages.forEach((page, i) => this.reloadPage(i));\r\n    }\r\n\r\n    /**\r\n     * Reload the data in a specific page without clearing the view.\r\n     * @param pageNum Page number\r\n     */\r\n    reloadPage(pageNum: number) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this._updateRequests.next({\r\n            check: false,\r\n            pageNumber: pageNum,\r\n            pageSize: this.pageSize,\r\n            filter: this.filter,\r\n            reload: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Attach scroll event handler and DOM observer.\r\n     */\r\n    private attachEventHandlers() {\r\n\r\n        // if the scrollElement is documentElement we must watch for a scroll event on the document\r\n        const target = this._scrollElement.nativeElement instanceof HTMLHtmlElement ? document : this._scrollElement.nativeElement;\r\n\r\n        // Subscribe to the scroll event on the target element.\r\n        this._scrollEventSub = fromEvent(target, 'scroll').subscribe(this.check.bind(this));\r\n\r\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\r\n        // required after the initial load.\r\n        this._domObserver = new MutationObserver(this.check.bind(this));\r\n        this._domObserver.observe(this._scrollElement.nativeElement, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Detach scroll event handler and DOM observer.\r\n     */\r\n    private detachEventHandlers() {\r\n        if (this._scrollEventSub) {\r\n            this._scrollEventSub.unsubscribe();\r\n            this._scrollEventSub = null;\r\n        }\r\n\r\n        if (this._domObserver) {\r\n            this._domObserver.disconnect();\r\n            this._domObserver = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\r\n     * for any in the query.\r\n     */\r\n    private attachLoadButtonEvents() {\r\n        this._loadButtonSubscriptions.forEach(s => s.unsubscribe());\r\n        this._loadButtonSubscriptions = this._loadButtonQuery.map(\r\n            loadButton => loadButton.load.subscribe(this.loadNextPage.bind(this))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Conditionally loads a page into the collection based on directive state and request parameters.\r\n     */\r\n    private doRequest(request: InfiniteScrollRequest) {\r\n\r\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not\r\n        // cancel.\r\n        if (this.needsData(request) && this.beginLoading(request)) {\r\n\r\n            // Invoke the callback load function, which returns a promose or plain data.\r\n            const loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\r\n\r\n            const observable = Array.isArray(loadResult) ? of(loadResult) : from<any[]>(loadResult);\r\n\r\n            const subscription = observable.pipe(first()).subscribe(\r\n                items => {\r\n                    // Make sure that the parameters have not changed since the load started;\r\n                    // otherwise discard the results.\r\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\r\n                        if (items && items.length) {\r\n                            this.setPageItems(request.pageNumber, items);\r\n                        }\r\n\r\n                        // Emit the loaded event\r\n                        this.endLoading(request, items);\r\n                    }\r\n                },\r\n                reason => {\r\n                    // Emit the loadError event\r\n                    this.endLoadingWithError(request, reason);\r\n                },\r\n                () => {\r\n                    // remove this request from the list\r\n                    this._subscriptions = this._subscriptions.filter(s => s !== subscription);\r\n                }\r\n            );\r\n\r\n            // add the subscription to the list of requests\r\n            this._subscriptions.push(subscription);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the request should be fulfilled.\r\n     */\r\n    private needsData(request: InfiniteScrollRequest): boolean {\r\n        if (!this.enabled) {\r\n            return false;\r\n        }\r\n\r\n        // Always load for a load request\r\n        if (!request.check) {\r\n            return true;\r\n        }\r\n\r\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\r\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\r\n            return false;\r\n        }\r\n\r\n        // Load if the remaining scroll area is <= the element height.\r\n        if (this._scrollElement && this.loadOnScroll) {\r\n\r\n            const element = <HTMLElement>this._scrollElement.nativeElement;\r\n            const remainingScroll =\r\n                element.scrollHeight -\r\n                (element.scrollTop + element.clientHeight);\r\n\r\n            return remainingScroll <= element.clientHeight;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\r\n     */\r\n    private beginLoading(request: InfiniteScrollRequest): boolean {\r\n\r\n        const event = new InfiniteScrollLoadingEvent(\r\n            request.pageNumber,\r\n            request.pageSize,\r\n            request.filter\r\n        );\r\n        this.loadingEvent.emit(event);\r\n\r\n        this._isLoading.next(!event.defaultPrevented());\r\n\r\n        return !event.defaultPrevented();\r\n    }\r\n\r\n    private setPageItems(pageNum: number, items: any[]) {\r\n        this._pages[pageNum] = items;\r\n        this.collection = this._pages.reduce((previous, current) => previous.concat(current), []);\r\n    }\r\n\r\n    /**\r\n     * Updates state from a successful load. Raises the `loaded` event.\r\n     */\r\n    private endLoading(request: InfiniteScrollRequest, data?: any) {\r\n        this._isLoading.next(false);\r\n\r\n        const isExhausted = !!(data && data.length < this.pageSize);\r\n        this._isExhausted.next(isExhausted);\r\n\r\n        this.loadedEvent.emit(\r\n            new InfiniteScrollLoadedEvent(\r\n                request.pageNumber,\r\n                request.pageSize,\r\n                request.filter,\r\n                data,\r\n                isExhausted\r\n            )\r\n        );\r\n\r\n        if (!request.reload) {\r\n            this._nextPageNum += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates state from a failed load. Raises the `loadError` event.\r\n     */\r\n    private endLoadingWithError(request: InfiniteScrollRequest, error: any) {\r\n        this._isLoading.next(false);\r\n\r\n        this.loadErrorEvent.emit(\r\n            new InfiniteScrollLoadErrorEvent(\r\n                request.pageNumber,\r\n                request.pageSize,\r\n                request.filter,\r\n                error\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * The internal data associated with a load/check request.\r\n */\r\nclass InfiniteScrollRequest {\r\n    check: boolean;\r\n    pageNumber: number;\r\n    pageSize: number;\r\n    filter: any;\r\n    reload?: boolean;\r\n}\r\n\r\nexport type InfiniteScrollLoadFunction = (\r\n    pageNum: number,\r\n    pageSize: number,\r\n    filter: any\r\n) => any | Promise<any>;\r\n\r\n/**\r\n * Event raised before the `loading` function is called.\r\n */\r\nexport class InfiniteScrollLoadingEvent {\r\n    private _defaultPrevented = false;\r\n\r\n    constructor(\r\n        /**\r\n         * The index of the requested page, starting from 0.\r\n         */\r\n        public pageNumber: number,\r\n        /**\r\n         * The number of items requested.\r\n         */\r\n        public pageSize: number,\r\n        /**\r\n         * The filter details as provided via the `filter` binding.\r\n         */\r\n        public filter: any\r\n    ) { }\r\n\r\n    /**\r\n     * Prevents the default behaviour of the `loading` event (loading function will not be called).\r\n     */\r\n    preventDefault() {\r\n        this._defaultPrevented = true;\r\n    }\r\n\r\n    defaultPrevented(): boolean {\r\n        return this._defaultPrevented;\r\n    }\r\n}\r\n\r\n/**\r\n * Event raised when the loading function result has been resolved and added to the collection.\r\n */\r\nexport class InfiniteScrollLoadedEvent {\r\n    constructor(\r\n        /**\r\n         * The index of the requested page, starting from 0.\r\n         */\r\n        public pageNumber: number,\r\n        /**\r\n         * The number of items requested.\r\n         */\r\n        public pageSize: number,\r\n        /**\r\n         * The filter details as provided via the `filter` binding.\r\n         */\r\n        public filter: any,\r\n        /**\r\n         * The result of the promise returned from the loading function.\r\n         */\r\n        public data: any,\r\n        /**\r\n         * True if the data is considered exhausted (number of items returned less than `pageSize`).\r\n         */\r\n        public exhausted: boolean\r\n    ) { }\r\n}\r\n\r\n/**\r\n * Event raised if the loading function returns a rejected promise.\r\n */\r\nexport class InfiniteScrollLoadErrorEvent {\r\n    constructor(\r\n        /**\r\n         * The index of the requested page, starting from 0.\r\n         */\r\n        public pageNumber: number,\r\n        /**\r\n         * The number of items requested.\r\n         */\r\n        public pageSize: number,\r\n        /**\r\n         * The filter details as provided via the `filter` binding.\r\n         */\r\n        public filter: any,\r\n        /**\r\n         * The object provided when rejecting the promise.\r\n         */\r\n        public error: any\r\n    ) { }\r\n}\r\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\r\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\r\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [\r\n        InfiniteScrollDirective,\r\n        InfiniteScrollLoadButtonDirective,\r\n        InfiniteScrollLoadingDirective\r\n    ],\r\n    declarations: [\r\n        InfiniteScrollDirective,\r\n        InfiniteScrollLoadButtonDirective,\r\n        InfiniteScrollLoadingDirective\r\n    ],\r\n    providers: [],\r\n})\r\nexport class InfiniteScrollModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ScrollIntoViewService {\r\n\r\n    scrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\r\n        const offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\r\n        if (offsetTop < scrollParent.scrollTop) {\r\n            scrollParent.scrollTop = offsetTop;\r\n        } else {\r\n            const offsetBottom = offsetTop + elem.offsetHeight;\r\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\r\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\r\n            }\r\n        }\r\n    }\r\n}","import { ScrollIntoViewService } from './scroll-into-view.service';\r\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({ selector: '[uxScrollIntoViewIf]' })\r\nexport class ScrollIntoViewIfDirective implements OnChanges {\r\n\r\n    @Input('uxScrollIntoViewIf') condition = false;\r\n    @Input() scrollParent: HTMLElement;\r\n\r\n    constructor(private element: ElementRef, private scrollIntoViewService: ScrollIntoViewService) {}\r\n    \r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (this.condition) {\r\n            setTimeout(() => {\r\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\r\n            });\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\r\nimport { ScrollIntoViewService } from './scroll-into-view.service';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [ScrollIntoViewIfDirective],\r\n    declarations: [ScrollIntoViewIfDirective],\r\n    providers: [ScrollIntoViewService],\r\n})\r\nexport class ScrollIntoViewIfModule { }\r\n","import { Directive, ElementRef, Input } from '@angular/core';\r\nimport { TypeaheadService } from './typeahead.service';\r\n\r\n@Directive({\r\n    selector: '[uxTypeaheadHighlight]'\r\n})\r\nexport class TypeaheadHighlightDirective {\r\n\r\n    @Input('uxTypeaheadHighlight')\r\n    set highlight(value: boolean) {\r\n        if (value) {\r\n            this._service.highlightedElement$.next(this._elementRef.nativeElement);\r\n        }\r\n    }\r\n\r\n    constructor(private _service: TypeaheadService, private _elementRef: ElementRef) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\r\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\r\nimport { TypeaheadHighlightDirective } from './typeahead-highlight.directive';\r\nimport { TypeaheadKeyService } from './typeahead-key.service';\r\nimport { TypeaheadComponent } from './typeahead.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        InfiniteScrollModule,\r\n        ScrollIntoViewIfModule\r\n    ],\r\n    exports: [TypeaheadComponent],\r\n    declarations: [TypeaheadComponent, TypeaheadHighlightDirective],\r\n    providers: [TypeaheadKeyService],\r\n})\r\nexport class TypeaheadModule { }\r\n","import { Component, ElementRef, EventEmitter, HostBinding, Inject, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, StaticProvider, TemplateRef, ViewChild, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { BehaviorSubject ,  Observable ,  Subscription } from 'rxjs';\r\nimport { debounceTime, filter, map } from 'rxjs/operators';\r\nimport { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\r\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\r\n\r\nlet uniqueId = 0;\r\n\r\nexport const SELECT_VALUE_ACCESSOR: StaticProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ux-select',\r\n    template: `<ux-tag-input *ngIf=\"multiple\"\r\n    [id]=\"id + '-input'\"\r\n    [(tags)]=\"value\"\r\n    [(input)]=\"input\"\r\n    [addOnPaste]=\"false\"\r\n    [disabled]=\"disabled\"\r\n    [display]=\"display\"\r\n    [freeInput]=\"false\"\r\n    [placeholder]=\"placeholder\"\r\n    [showTypeaheadOnClick]=\"true\">\r\n\r\n    <ux-typeahead #multipleTypeahead\r\n        [id]=\"id + '-typeahead'\"\r\n        [options]=\"options\"\r\n        [filter]=\"filter$ | async\"\r\n        [(open)]=\"dropdownOpen\"\r\n        [display]=\"display\"\r\n        [key]=\"key\"\r\n        [disabledOptions]=\"value\"\r\n        [dropDirection]=\"dropDirection\"\r\n        [maxHeight]=\"maxHeight\"\r\n        [multiselectable]=\"true\"\r\n        [pageSize]=\"pageSize\"\r\n        [selectFirst]=\"true\"\r\n        [loadingTemplate]=\"loadingTemplate\"\r\n        [optionTemplate]=\"optionTemplate\"\r\n        [noOptionsTemplate]=\"noOptionsTemplate\">\r\n    </ux-typeahead>\r\n\r\n</ux-tag-input>\r\n\r\n<div *ngIf=\"!multiple\"\r\n    class=\"inner-addon right-addon\"\r\n    [class.disabled]=\"disabled\"\r\n    role=\"combobox\"\r\n    [attr.aria-expanded]=\"dropdownOpen\"\r\n    aria-haspopup=\"listbox\">\r\n\r\n    <i class=\"hpe-icon\"\r\n        [class.hpe-down]=\"dropDirection === 'down'\"\r\n        [class.hpe-up]=\"dropDirection === 'up'\"></i>\r\n\r\n    <input #singleInput type=\"text\" [attr.id]=\"id + '-input'\" class=\"form-control\"\r\n        [attr.aria-activedescendant]=\"highlightedElement?.id\"\r\n        aria-autocomplete=\"list\"\r\n        [attr.aria-controls]=\"singleTypeahead.id\"\r\n        aria-multiline=\"false\"\r\n        [(ngModel)]=\"input\"\r\n        [placeholder]=\"placeholder\"\r\n        [disabled]=\"disabled\"\r\n        (click)=\"inputClickHandler($event)\"\r\n        (blur)=\"inputBlurHandler($event)\"\r\n        (keydown)=\"inputKeyHandler($event)\">\r\n\r\n    <ux-typeahead #singleTypeahead\r\n        [id]=\"id + '-typeahead'\"\r\n        [options]=\"options\"\r\n        [filter]=\"filter$ | async\"\r\n        [(open)]=\"dropdownOpen\"\r\n        [display]=\"display\"\r\n        [key]=\"key\"\r\n        [dropDirection]=\"dropDirection\"\r\n        [maxHeight]=\"maxHeight\"\r\n        [multiselectable]=\"false\"\r\n        [openOnFilterChange]=\"false\"\r\n        [pageSize]=\"pageSize\"\r\n        [selectFirst]=\"true\"\r\n        [loadingTemplate]=\"loadingTemplate\"\r\n        [optionTemplate]=\"optionTemplate\"\r\n        [noOptionsTemplate]=\"noOptionsTemplate\"\r\n        (optionSelected)=\"singleOptionSelected($event)\"\r\n        (highlightedElementChange)=\"highlightedElement = $event\">\r\n    </ux-typeahead>\r\n\r\n</div>\r\n`,\r\n    providers: [SELECT_VALUE_ACCESSOR]\r\n})\r\nexport class SelectComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\r\n\r\n    @Input() @HostBinding('attr.id') id: string = `ux-select-${++uniqueId}`;\r\n\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value: any) {\r\n        this._value = value;\r\n        this.valueChange.emit(value);\r\n        this.propagateChange(value);\r\n\r\n        // if we are not allow multiple selection update the input value (supporting ngModel)\r\n        if (!this.multiple && value !== null) {\r\n            this.input = this.getDisplay(value);\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    get input() {\r\n        return this._input$.value;\r\n    }\r\n    set input(value: string) {\r\n        this._input$.next(value);\r\n        this.inputChange.emit(value);\r\n    }\r\n\r\n    @Input()\r\n    get dropdownOpen() {\r\n        return this._dropdownOpen;\r\n    }\r\n    set dropdownOpen(value: boolean) {\r\n        this._dropdownOpen = value;\r\n        this.dropdownOpenChange.emit(value);\r\n    }\r\n\r\n    @Input() options: any[] | InfiniteScrollLoadFunction;\r\n    @Input() display: (option: any) => string | string;\r\n    @Input() key: (option: any) => string | string;\r\n    @Input() allowNull: boolean = false;\r\n    @Input() disabled: boolean = false;\r\n    @Input() dropDirection: 'up' | 'down' = 'down';\r\n    @Input() maxHeight: string = '250px';\r\n    @Input() multiple: boolean = false;\r\n    @Input() pageSize: number = 20;\r\n    @Input() placeholder: string;\r\n\r\n    @Input() loadingTemplate: TemplateRef<any>;\r\n    @Input() noOptionsTemplate: TemplateRef<any>;\r\n    @Input() optionTemplate: TemplateRef<any>;\r\n\r\n    @Output() valueChange = new EventEmitter<any>();\r\n    @Output() inputChange = new EventEmitter<string>();\r\n    @Output() dropdownOpenChange = new EventEmitter<boolean>();\r\n\r\n    @ViewChild('singleInput') singleInput: ElementRef;\r\n    @ViewChild('multipleTypeahead') multipleTypeahead: TypeaheadComponent;\r\n    @ViewChild('singleTypeahead') singleTypeahead: TypeaheadComponent;\r\n\r\n    highlightedElement: HTMLElement;\r\n    filter$: Observable<string>;\r\n    propagateChange = (_: any) => { };\r\n\r\n    private _value: any;\r\n    private _input$ = new BehaviorSubject<string>('');\r\n    private _dropdownOpen: boolean = false;\r\n    private _subscription = new Subscription();\r\n\r\n    constructor(\r\n        private _element: ElementRef,\r\n        @Inject(DOCUMENT) private _document: any,\r\n        private _typeaheadKeyService: TypeaheadKeyService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // Changes to the input field\r\n        const onInput = this._input$.pipe(\r\n            filter(value => this.allowNull),\r\n            filter(value => !this.multiple && value !== this.getDisplay(this.value))\r\n        ).subscribe(value => this.value = null);\r\n\r\n        // Set up filter from input\r\n        this.filter$ = this._input$.pipe(\r\n            map(input => !this.multiple && input === this.getDisplay(this.value) ? '' : input),\r\n            debounceTime(200)\r\n        );\r\n\r\n        // Open the dropdown when filter is nonempty.\r\n        const onFilter = this.filter$.pipe(filter(value => value && value.length > 0)).subscribe(() => this.dropdownOpen = true);\r\n\r\n        // store the subscriptions\r\n        this._subscription.add(onInput);\r\n        this._subscription.add(onFilter);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.multiple && !changes.multiple.firstChange && changes.multiple.currentValue !== changes.multiple.previousValue) {\r\n            this.input = '';\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (obj !== undefined && obj !== this._value) {\r\n            this.value = obj;\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void { }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    inputClickHandler(event: MouseEvent) {\r\n        this.selectInputText();\r\n        this.dropdownOpen = true;\r\n    }\r\n\r\n    inputBlurHandler(event: Event) {\r\n\r\n        // If a click on the typeahead is in progress, just refocus the input.\r\n        // This works around an issue in IE where clicking a scrollbar drops focus.\r\n        if (this.singleTypeahead && this.singleTypeahead.clicking) {\r\n            this.singleInput.nativeElement.focus();\r\n            return;\r\n        }\r\n\r\n        // Close dropdown and reset text input if focus is lost\r\n        setTimeout(() => {\r\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\r\n                this.dropdownOpen = false;\r\n                if (!this.multiple) {\r\n                    this.input = this.getDisplay(this.value);\r\n                }\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    /**\r\n     * Key handler for single select only. Multiple select key handling is in TagInputComponent.\r\n     */\r\n    inputKeyHandler(event: KeyboardEvent) {\r\n\r\n        // Standard keys for typeahead (up/down/esc)\r\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\r\n\r\n        switch (event.key) {\r\n            case 'Enter':\r\n                if (this._dropdownOpen) {\r\n                    // Set the highlighted option as the value and close\r\n                    this.value = this.singleTypeahead.highlighted;\r\n                    this.dropdownOpen = false;\r\n                }\r\n\r\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\r\n                this.input = this.getDisplay(this.value);\r\n                event.preventDefault();\r\n                break;\r\n        }\r\n    }\r\n\r\n    singleOptionSelected(event: TypeaheadOptionEvent) {\r\n        if (event.option) {\r\n            this.value = event.option;\r\n            this.dropdownOpen = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the display value of the given option.\r\n     */\r\n    getDisplay(option: any): string {\r\n        if (option === null || option === undefined) {\r\n            return '';\r\n        }\r\n        if (typeof this.display === 'function') {\r\n            return this.display(option);\r\n        }\r\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\r\n            return option[<string>this.display];\r\n        }\r\n        return option;\r\n    }\r\n\r\n    private selectInputText() {\r\n        this.singleInput.nativeElement.select();\r\n    }\r\n}","export class TagInputEvent {\r\n\r\n    private _defaultPrevented = false;\r\n\r\n    constructor(public tag: any) {}\r\n\r\n    preventDefault() {\r\n        this._defaultPrevented = true;\r\n    }\r\n\r\n    defaultPrevented(): boolean {\r\n        return this._defaultPrevented;\r\n    }\r\n}","import { AfterContentInit, Component, ContentChildren, ElementRef, EventEmitter, HostListener, Inject, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges, TemplateRef, ViewChild, forwardRef, HostBinding } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\nimport { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\r\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\r\nimport { TagInputEvent } from './tag-input-event';\r\n\r\nlet uniqueId = 0;\r\n\r\nconst TAGINPUT_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TagInputComponent),\r\n    multi: true\r\n};\r\nconst TAGINPUT_VALIDATOR = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => TagInputComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ux-tag-input',\r\n    template: `<ol [attr.role]=\"typeahead ? 'combobox' : 'none'\" [attr.aria-haspopup]=\"typeahead ? 'listbox' : null\">\r\n    <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\r\n        [class.disabled]=\"disabled\"\r\n        [ngClass]=\"tagClass(tag, i, isSelected(i))\"\r\n        [attr.tabindex]=\"disabled ? null : 0\"\r\n        [focusIf]=\"isSelected(i)\"\r\n        (click)=\"tagClickHandler($event, tag, i)\"\r\n        (focus)=\"selectTagAt(i)\">\r\n\r\n        <ng-container [ngTemplateOutlet]=\"tagTemplate\"\r\n            [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\r\n        </ng-container>\r\n\r\n    </li>\r\n    <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\" role=\"none\">\r\n        <input #tagInput type=\"text\" [attr.id]=\"id\" class=\"ux-tag-input\"\r\n            [(ngModel)]=\"input\"\r\n            [class.invalid]=\"!inputValid\"\r\n            [attr.aria-activedescendant]=\"highlightedElement?.id\"\r\n            [attr.aria-autocomplete]=\"typeahead ? 'list' : 'none'\"\r\n            [attr.aria-controls]=\"typeahead?.id\"\r\n            aria-multiline=\"false\"\r\n            [placeholder]=\"disabled ? '' : (placeholder || '')\"\r\n            [disabled]=\"disabled\"\r\n            [focusIf]=\"isSelected(tags.length)\"\r\n            (click)=\"inputClickHandler()\"\r\n            (focus)=\"inputFocusHandler()\"\r\n            (paste)=\"inputPasteHandler($event)\">\r\n    </li>\r\n</ol>\r\n\r\n<ng-content #typeahead></ng-content>\r\n\r\n<ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\r\n    <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\r\n    <button *ngIf=\"api.canRemoveTagAt(index)\"\r\n        type=\"button\"\r\n        class=\"ux-tag-remove\"\r\n        aria-label=\"Remove Item\"\r\n        [disabled]=\"disabled\"\r\n        (click)=\"api.removeTagAt(index); $event.stopPropagation();\">\r\n        <span class=\"hpe-icon hpe-close\"></span>\r\n    </button>\r\n</ng-template>`,\r\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\r\n    host: {\r\n        '[class.disabled]': 'disabled',\r\n        '[class.focus]': 'hasFocus()',\r\n        '[class.invalid]': '!valid || !inputValid'\r\n    }\r\n})\r\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor, OnDestroy {\r\n\r\n    @Input() @HostBinding('attr.id') id: string = `ux-tag-input-${++uniqueId}`;\r\n\r\n    @Input('tags')\r\n    get tags() {\r\n        if (!this._tags) {\r\n            this._tags = [];\r\n        }\r\n        return this._tags;\r\n    }\r\n    set tags(value: any[]) {\r\n        this._tags = value;\r\n        this._onChangeHandler(this._tags);\r\n        this.tagsChange.emit(this._tags);\r\n    }\r\n\r\n    @Output() tagsChange = new EventEmitter<any[]>();\r\n\r\n    @Input('input')\r\n    get input() {\r\n        return this._input;\r\n    }\r\n    set input(value: string) {\r\n        this._input = value;\r\n        this.inputChange.emit(value);\r\n    }\r\n\r\n    @Output() inputChange = new EventEmitter<string>();\r\n\r\n    @Input() display: (option: any) => string | string;\r\n    @Input() addOnPaste: boolean = true;\r\n    @Input() disabled: boolean = false;\r\n    @Input() enforceTagLimits: boolean = false;\r\n    @Input() freeInput: boolean = true;\r\n    @Input() maxTags: number = Number.MAX_VALUE;\r\n    @Input() minTags: number = 0;\r\n    @Input() placeholder: string = '';\r\n    @Input() showTypeaheadOnClick: boolean = false;\r\n    @Input() tagDelimiters: string = '';\r\n    @Input() tagPattern: RegExp;\r\n    @Input() tagTemplate: TemplateRef<any>;\r\n    @Input() tagClass: TagClassFunction = () => undefined;\r\n    @Input() validationErrors: any = {};\r\n    @Input('createTag') createTagHandler: (value: string) => any;\r\n\r\n    @Output() tagAdding = new EventEmitter<TagInputEvent>();\r\n    @Output() tagAdded = new EventEmitter<TagInputEvent>();\r\n    @Output() tagInvalidated = new EventEmitter<TagInputEvent>();\r\n    @Output() tagRemoving = new EventEmitter<TagInputEvent>();\r\n    @Output() tagRemoved = new EventEmitter<TagInputEvent>();\r\n    @Output() tagClick = new EventEmitter<TagInputEvent>();\r\n\r\n    @ContentChildren(TypeaheadComponent) typeaheadQuery: QueryList<TypeaheadComponent>;\r\n\r\n    @ViewChild('tagInput') tagInput: ElementRef;\r\n\r\n    @ViewChild('defaultTagTemplate') private _defaultTagTemplate: TemplateRef<any>;\r\n\r\n    selectedIndex: number = -1;\r\n\r\n    tagApi: TagApi = {\r\n        getTagDisplay: this.getTagDisplay.bind(this),\r\n        removeTagAt: this.removeTagAt.bind(this),\r\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\r\n    };\r\n\r\n    valid: boolean = true;\r\n    inputValid: boolean = true;\r\n\r\n    typeahead: TypeaheadComponent;\r\n\r\n    highlightedElement: HTMLElement;\r\n\r\n    private _input: string = '';\r\n    private _tags: any[] = [];\r\n    private _onChangeHandler: (_: any) => void = () => { };\r\n    private _onTouchedHandler: () => void = () => { };\r\n    private _typeaheadSubscription: Subscription;\r\n\r\n    constructor(\r\n        private _element: ElementRef,\r\n        @Inject(DOCUMENT) private _document: any,\r\n        private _typeaheadKeyService: TypeaheadKeyService) { }\r\n\r\n    ngOnInit() {\r\n        if (!this.tagTemplate) {\r\n            this.tagTemplate = this._defaultTagTemplate;\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        // Watch for optional child typeahead control\r\n        this.connectTypeahead(this.typeaheadQuery.first);\r\n        this.typeaheadQuery.changes.subscribe((query) => {\r\n            this.connectTypeahead(query.first);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.disabled) {\r\n            if (changes.disabled.currentValue) {\r\n                // Clear selection and close dropdown\r\n                this.selectedIndex = -1;\r\n                if (this.typeahead) {\r\n                    this.typeahead.open = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Update validation status\r\n        this.validate();\r\n    }\r\n\r\n    writeValue(value: any[]) {\r\n        if (value) {\r\n            this.tags = value;\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this._onChangeHandler = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this._onTouchedHandler = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this._typeaheadSubscription) {\r\n            this._typeaheadSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validate the value of the control (tags property).\r\n     */\r\n    validate() {\r\n        this.valid = true;\r\n        let tagRangeError = null;\r\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\r\n            tagRangeError = {\r\n                given: this.tags.length,\r\n                min: this.minTags,\r\n                max: this.maxTags\r\n            };\r\n            this.valid = false;\r\n        }\r\n        this.validationErrors['tagRangeError'] = tagRangeError;\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    keyHandler(event: KeyboardEvent) {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        // Get the input field cursor location\r\n        const inputCursorPos = this.tagInput.nativeElement.selectionStart;\r\n\r\n        // Determine if the input field has any text selected\r\n        const hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\r\n\r\n        // Determine if a tag has focus\r\n        const tagSelected = this.isValidTagIndex(this.selectedIndex);\r\n\r\n        const inputLength = this.input ? this.input.length : 0;\r\n\r\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\r\n        const canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\r\n        const canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\r\n\r\n        // Forward key events to the typeahead component.\r\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\r\n\r\n        switch (event.key) {\r\n            case 'Enter':\r\n                // Check if a typeahead option is highlighted\r\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\r\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\r\n                    this.commitTypeahead(this.typeahead.highlighted);\r\n                    this.typeahead.open = false;\r\n                } else {\r\n                    // Validate and add the input text as a tag, if possible\r\n                    this.commitInput();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 'Backspace':\r\n                if (canNavigateLeft) {\r\n                    this.backspace();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 'Delete':\r\n            case 'Del':\r\n                if (tagSelected) {\r\n                    this.removeTagAt(this.selectedIndex);\r\n                }\r\n                break;\r\n            case 'ArrowLeft':\r\n            case 'Left':\r\n                if (canNavigateLeft) {\r\n                    this.moveSelection(-1);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 'ArrowRight':\r\n            case 'Right':\r\n                if (canNavigateRight) {\r\n                    this.moveSelection(1);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n        }\r\n\r\n        // Check for keys in the tagDelimiters\r\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\r\n            // Commit previous text\r\n            this.commitInput();\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener('focusout', ['$event'])\r\n    focusOutHandler(event: FocusEvent) {\r\n\r\n        // If a click on the typeahead is in progress, don't do anything.\r\n        // This works around an issue in IE where clicking a scrollbar drops focus.\r\n        if (this.typeahead && this.typeahead.clicking) {\r\n            return;\r\n        }\r\n\r\n        // Close the dropdown on blur\r\n        setTimeout(() => {\r\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\r\n                this.selectedIndex = -1;\r\n                if (this.typeahead) {\r\n                    this.typeahead.open = false;\r\n                }\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    tagClickHandler(event: MouseEvent, tag: any, index: number) {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        // Send tagClick event\r\n        const tagClickEvent = new TagInputEvent(tag);\r\n        this.tagClick.emit(tagClickEvent);\r\n\r\n        // Prevent focus if preventDefault() was called\r\n        if (tagClickEvent.defaultPrevented()) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        // Select the tag (for IE that doesn't propagate focus)\r\n        this.selectTagAt(index);\r\n    }\r\n\r\n    inputClickHandler() {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        if (this.typeahead && this.showTypeaheadOnClick) {\r\n            this.typeahead.open = true;\r\n        }\r\n    }\r\n\r\n    inputFocusHandler() {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        this.selectInput();\r\n    }\r\n\r\n    inputPasteHandler(event: ClipboardEvent) {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        if (this.addOnPaste) {\r\n            // Get text from the clipboard\r\n            let input: string = null;\r\n            if (event.clipboardData) {\r\n                input = event.clipboardData.getData('text/plain');\r\n            } else if ((<any>window).clipboardData) {\r\n                // Internet Explorer only\r\n                input = (<any>window).clipboardData.getData('Text');\r\n            }\r\n\r\n            // Commit the clipboard text directly\r\n            if (this.commit(input)) {\r\n                this.selectInput();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    typeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        // When the typeahead sends the optionSelected event, commit the object directly\r\n        this.commitTypeahead(event.option);\r\n    }\r\n\r\n    /**\r\n     * Commit the current input value and clear the input field if successful.\r\n     */\r\n    commitInput() {\r\n        if (this.commit(this.input)) {\r\n            this.selectInput();\r\n            this.input = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Commit the given tag object and clear the input if successful.\r\n     */\r\n    commitTypeahead(tag: any) {\r\n        if (this.addTag(tag)) {\r\n            this.selectInput();\r\n            this.input = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\r\n     */\r\n    commit(input: string): boolean {\r\n        if (input && this.freeInput) {\r\n\r\n            // Split the tags by the tagDelimiters if configured\r\n            const newTags = this.splitTagInput(input);\r\n\r\n            // Check tag validation for all of the individual values\r\n            let allValid = true;\r\n            for (let newTag of newTags) {\r\n                const valid = this.validateTag(newTag);\r\n                if (!valid) {\r\n                    allValid = false;\r\n                }\r\n            }\r\n\r\n            // Add the tags if all are valid\r\n            if (allValid) {\r\n                for (let newTag of newTags) {\r\n                    this.addTag(this.createTag(newTag));\r\n                }\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\r\n     */\r\n    backspace() {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        if (!this.isValidTagIndex(this.selectedIndex)) {\r\n            this.selectTagAt(this.tags.length - 1);\r\n        } else {\r\n            this.removeTagAt(this.selectedIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\r\n     * @param d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\r\n     */\r\n    moveSelection(d: number) {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        if (this.isValidSelectIndex(this.selectedIndex)) {\r\n            this.selectedIndex += d;\r\n\r\n            // Do wrapping of selection when out of bounds\r\n            if (this.selectedIndex < 0) {\r\n                this.selectedIndex = this.tags.length;\r\n            } else if (this.selectedIndex > this.tags.length) {\r\n                this.selectedIndex = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\r\n     */\r\n    getTagDisplay(tag: any): string {\r\n        if (typeof this.display === 'function') {\r\n            return this.display(tag);\r\n        }\r\n        if (typeof this.display === 'string') {\r\n            return tag[<string>this.display];\r\n        }\r\n        return tag;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the given index is selected (tag index or input field).\r\n     */\r\n    isSelected(index: number): boolean {\r\n        return index === this.selectedIndex;\r\n    }\r\n\r\n    /**\r\n     * Select the tag at the given index. Does nothing if disabled is true.\r\n     */\r\n    selectTagAt(tagIndex: number) {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        if (this.isValidTagIndex(tagIndex)) {\r\n            this.selectedIndex = tagIndex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the input field, giving it focus. Does nothing if disabled is true.\r\n     */\r\n    selectInput() {\r\n\r\n        if (this.disabled) { return; }\r\n\r\n        this.selectedIndex = this.tags.length;\r\n    }\r\n\r\n    /**\r\n     * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\r\n     */\r\n    removeTagAt(tagIndex: number) {\r\n\r\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\r\n\r\n        // Check that the tagIndex is in range\r\n        if (this.isValidTagIndex(tagIndex)) {\r\n            const tag = this.tags[tagIndex];\r\n            const tagRemovingEvent = new TagInputEvent(tag);\r\n            this.tagRemoving.emit(tagRemovingEvent);\r\n            if (!tagRemovingEvent.defaultPrevented()) {\r\n                // Select input first to avoid issues with dropping focus\r\n                this.selectInput();\r\n                // Remove the tag\r\n                this.tags.splice(tagIndex, 1);\r\n                // Set focus again since indices have changed\r\n                this.selectInput();\r\n                this.tagRemoved.emit(new TagInputEvent(tag));\r\n                this.validate();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the tag at the given index can be removed.\r\n     */\r\n    canRemoveTagAt(tagIndex: number): boolean {\r\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the input field should be available.\r\n     */\r\n    isInputVisible() {\r\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\r\n    }\r\n\r\n    /**\r\n     * Returns true if any part of the control has focus.\r\n     */\r\n    hasFocus(): boolean {\r\n        return this.isValidSelectIndex(this.selectedIndex);\r\n    }\r\n\r\n    private connectTypeahead(typeahead: TypeaheadComponent) {\r\n        if (this._typeaheadSubscription) {\r\n            this._typeaheadSubscription.unsubscribe();\r\n            this._typeaheadSubscription = null;\r\n        }\r\n\r\n        this.typeahead = typeahead;\r\n        if (this.typeahead) {\r\n            // Set up event handler for selected options\r\n            this._typeaheadSubscription = this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\r\n\r\n            this._typeaheadSubscription.add(\r\n                this.typeahead.highlightedElementChange.subscribe((element: HTMLElement) => {\r\n                    this.highlightedElement = element;\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\r\n     */\r\n    private validateTag(tagValue: string): boolean {\r\n        let inputPattern = null;\r\n        this.inputValid = true;\r\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\r\n            inputPattern = {\r\n                given: tagValue,\r\n                pattern: this.tagPattern\r\n            };\r\n            this.inputValid = false;\r\n        }\r\n        this.validationErrors['inputPattern'] = inputPattern;\r\n        return this.inputValid;\r\n    }\r\n\r\n    /**\r\n     * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\r\n     */\r\n    private createTag(tagValue: string): any {\r\n        let tag = null;\r\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\r\n            tag = this.createTagHandler(tagValue);\r\n        } else if (typeof this.display === 'string') {\r\n            tag = {};\r\n            tag[<string>this.display] = tagValue;\r\n        } else {\r\n            tag = tagValue;\r\n        }\r\n        return tag;\r\n    }\r\n\r\n    /**\r\n     * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\r\n     */\r\n    private addTag(tag: any): boolean {\r\n        if (tag) {\r\n            // Verify that the new tag can be displayed\r\n            const displayValue = this.getTagDisplay(tag);\r\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\r\n                const tagAddingEvent = new TagInputEvent(tag);\r\n                this.tagAdding.emit(tagAddingEvent);\r\n                if (!tagAddingEvent.defaultPrevented()) {\r\n                    this.tags = this.tags || [];\r\n                    this.tags.push(tag);\r\n                    this.tagAdded.emit(new TagInputEvent(tag));\r\n                    this.validate();\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the given tagIndex is a valid tag index.\r\n     */\r\n    private isValidTagIndex(tagIndex: number): boolean {\r\n        return tagIndex >= 0 && tagIndex < this.tags.length;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the given index is a valid selection index (tags or input field).\r\n     */\r\n    private isValidSelectIndex(index: number): boolean {\r\n        return index >= 0 && index <= this.tags.length;\r\n    }\r\n\r\n    /**\r\n     * Returns the character corresponding to the given key event, mainly for IE compatibility.\r\n     */\r\n    private getKeyChar(event: KeyboardEvent): string {\r\n        switch (event.key) {\r\n            case 'Spacebar':\r\n                return ' ';\r\n        }\r\n        return event.key;\r\n    }\r\n\r\n    /**\r\n     * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\r\n     */\r\n    private splitTagInput(input: string): string[] {\r\n        let tagValues = [input];\r\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\r\n            const escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n            const delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\r\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\r\n        }\r\n        return tagValues;\r\n    }\r\n}\r\n\r\n/**\r\n * The API available to tag templates.\r\n */\r\nexport interface TagApi {\r\n    /**\r\n     * Returns the display value of the given tag, according to the displayProperty property.\r\n     */\r\n    getTagDisplay: (tag: any) => string;\r\n\r\n    /**\r\n     * Removes the tag at the given index, if possible.\r\n     */\r\n    removeTagAt: (index: number) => void;\r\n\r\n    /**\r\n     * \tReturns true if the tag at the given index can be removed.\r\n     */\r\n    canRemoveTagAt: (index: number) => boolean;\r\n}\r\n\r\n/**\r\n * The function used to return custom class information, for use in `ngClass`.\r\n */\r\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);","import { FocusIfModule } from '../../directives/focus-if/index';\r\nimport { TypeaheadModule } from '../typeahead/index';\r\nimport { TagInputComponent } from './tag-input.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        FocusIfModule,\r\n        TypeaheadModule\r\n    ],\r\n    exports: [TagInputComponent],\r\n    declarations: [TagInputComponent],\r\n    providers: [],\r\n})\r\nexport class TagInputModule { }\r\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\r\nimport { TagInputModule } from '../tag-input/index';\r\nimport { TypeaheadModule } from '../typeahead/index';\r\nimport { SelectComponent } from './select.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        InfiniteScrollModule,\r\n        TagInputModule,\r\n        TypeaheadModule\r\n    ],\r\n    exports: [SelectComponent],\r\n    declarations: [SelectComponent]\r\n})\r\nexport class SelectModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchBuilderComponent } from './search-builder.component';\r\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\r\nimport { SearchTextComponent } from './search-components/text/text.component';\r\nimport { SearchDateComponent } from './search-components/date/date.component';\r\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\r\nimport { BaseSearchComponent } from './search-components/base-search.component';\r\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\r\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\r\nimport { SearchSelectComponent } from './search-components/select/select.component';\r\nimport { SelectModule } from '../select/index';\r\nimport { PopoverModule } from '../popover/index';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    DateTimePickerModule,\r\n    PopoverModule,\r\n    SelectModule\r\n  ],\r\n  exports: [\r\n    SearchBuilderComponent,\r\n    SearchBuilderGroupComponent,\r\n    BaseSearchComponent\r\n  ],\r\n  declarations: [\r\n    SearchBuilderComponent,\r\n    SearchBuilderGroupComponent,\r\n    SearchTextComponent,\r\n    SearchDateComponent,\r\n    SearchDateRangeComponent,\r\n    SearchBuilderOutletDirective,\r\n    SearchSelectComponent,\r\n    BaseSearchComponent\r\n  ],\r\n  entryComponents: [\r\n    SearchTextComponent,\r\n    SearchDateComponent,\r\n    SearchDateRangeComponent,\r\n    SearchSelectComponent\r\n  ]\r\n})\r\nexport class SearchBuilderModule { }\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { SidePanelService } from './side-panel.service';\r\n\r\n@Directive({\r\n    selector: '[uxSidePanelClose]'\r\n})\r\nexport class SidePanelCloseDirective {\r\n\r\n    constructor(private _service: SidePanelService) { }\r\n\r\n    @HostListener('click')\r\n    clickHandler() {\r\n        this._service.close();\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SidePanelComponent } from './side-panel.component';\r\nimport { SidePanelCloseDirective } from './side-panel-close.directive';\r\n\r\nconst EXPORTS = [\r\n    SidePanelComponent,\r\n    SidePanelCloseDirective\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: EXPORTS,\r\n    declarations: EXPORTS\r\n})\r\nexport class SidePanelModule { }\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, DoCheck, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ColorService } from '../../services/color/index';\r\n\r\n@Component({\r\n    selector: 'ux-slider',\r\n    template: `<div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\r\n\r\n    <!-- Section Beneath Lower Thumb -->\r\n    <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\r\n\r\n    <!-- Lower Thumb Button / Line -->\r\n    <div class=\"thumb lower\"\r\n        uxDrag\r\n        role=\"slider\"\r\n        tabindex=\"0\"\r\n        #lowerthumb\r\n        [attr.aria-label]=\"options.type === sliderType.Range ? options.handles.aria.lowerThumb : options.handles.aria.thumb\"\r\n        [attr.aria-valuemin]=\"options?.track?.min\"\r\n        [attr.aria-valuemax]=\"options.type === sliderType.Range ? getThumbValue(sliderThumb.Upper) : options?.track?.max\"\r\n        [attr.aria-valuenow]=\"getThumbValue(sliderThumb.Lower)\"\r\n        [attr.aria-valuetext]=\"getAriaValueText(sliderThumb.Lower)\"\r\n        [style.left.%]=\"thumbs.lower.position\"\r\n        [class.active]=\"thumbs.lower.drag\"\r\n        [style.z-index]=\"thumbs.lower.order\"\r\n        [class.button]=\"options.handles.style === sliderStyle.Button\"\r\n        [class.line]=\"options.handles.style === sliderStyle.Line\"\r\n        [class.narrow]=\"options.track.height === sliderSize.Narrow\"\r\n        [class.wide]=\"options.track.height === sliderSize.Wide\"\r\n        (dragstart)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart); lowerthumb.focus()\"\r\n        (drag)=\"updateThumbPosition($event, sliderThumb.Lower)\"\r\n        (dragend)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragEnd)\"\r\n        (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\r\n        (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\"\r\n        (focus)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\r\n        (blur)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\"\r\n        (keydown.ArrowLeft)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, false); $event.preventDefault()\"\r\n        (keydown.ArrowRight)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, true); $event.preventDefault()\"\r\n        (keydown.ArrowUp)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, false); $event.preventDefault()\"\r\n        (keydown.ArrowDown)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, true); $event.preventDefault()\"\r\n        (keydown.PageDown)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.Major, false); $event.preventDefault()\"\r\n        (keydown.PageUp)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.Major, true); $event.preventDefault()\"\r\n        (keydown.Home)=\"snapToEnd(sliderThumb.Lower, false); $event.preventDefault()\"\r\n        (keydown.End)=\"snapToEnd(sliderThumb.Lower, true); $event.preventDefault()\">\r\n\r\n        <!-- Lower Thumb Callout -->\r\n        <div class=\"tooltip top tooltip-lower\" #lowerTooltip\r\n            [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.lower.drag === false\"\r\n            [style.opacity]=\"tooltips.lower.visible ? 1 : 0\"\r\n            [style.left.px]=\"tooltips.lower.position\">\r\n\r\n            <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\r\n\r\n            <div class=\"tooltip-inner\"\r\n                [style.background-color]=\"options.handles.callout.background\"\r\n                [style.color]=\"options.handles.callout.color\">\r\n                {{ tooltips.lower.label }}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Section of Track Between Lower and Upper Thumbs -->\r\n    <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\r\n    </div>\r\n\r\n    <!-- Upper Thumb Button / Line -->\r\n    <div class=\"thumb upper\"\r\n        uxDrag\r\n        role=\"slider\"\r\n        tabindex=\"0\"\r\n        #upperthumb\r\n        [attr.aria-label]=\"options.handles.aria.upperThumb\"\r\n        [attr.aria-valuemin]=\"getThumbValue(sliderThumb.Lower) || options?.track?.min\"\r\n        [attr.aria-valuemax]=\"options?.track?.max\"\r\n        [attr.aria-valuenow]=\"getThumbValue(sliderThumb.Upper)\"\r\n        [attr.aria-valuetext]=\"getAriaValueText(sliderThumb.Upper)\"\r\n        [hidden]=\"options.type !== sliderType.Range\"\r\n        [class.active]=\"thumbs.upper.drag\"\r\n        [style.left.%]=\"thumbs.upper.position\"\r\n        [style.z-index]=\"thumbs.upper.order\"\r\n        [class.button]=\"options.handles.style === sliderStyle.Button\"\r\n        [class.line]=\"options.handles.style === sliderStyle.Line\"\r\n        [class.narrow]=\"options.track.height === sliderSize.Narrow\"\r\n        [class.wide]=\"options.track.height === sliderSize.Wide\"\r\n        (dragstart)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart); upperthumb.focus()\"\r\n        (drag)=\"updateThumbPosition($event, sliderThumb.Upper)\"\r\n        (dragend)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragEnd)\"\r\n        (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\r\n        (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\"\r\n        (focus)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\r\n        (blur)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\"\r\n        (keydown.ArrowLeft)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, false); $event.preventDefault()\"\r\n        (keydown.ArrowRight)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, true); $event.preventDefault()\"\r\n        (keydown.ArrowUp)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, false); $event.preventDefault()\"\r\n        (keydown.ArrowDown)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, true); $event.preventDefault()\"\r\n        (keydown.PageDown)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.Major, false); $event.preventDefault()\"\r\n        (keydown.PageUp)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.Major, true); $event.preventDefault()\"\r\n        (keydown.Home)=\"snapToEnd(sliderThumb.Upper, false); $event.preventDefault()\"\r\n        (keydown.End)=\"snapToEnd(sliderThumb.Upper, true); $event.preventDefault()\">\r\n\r\n        <!-- Upper Thumb Callout -->\r\n        <div class=\"tooltip top tooltip-upper\" #upperTooltip\r\n            [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.upper.drag === false\"\r\n            [style.opacity]=\"tooltips.upper.visible ? 1 : 0\"\r\n            [style.left.px]=\"tooltips.upper.position\">\r\n\r\n            <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\r\n\r\n            <div class=\"tooltip-inner\"\r\n                *ngIf=\"options.type === sliderType.Range\"\r\n                [style.background-color]=\"options.handles.callout.background\"\r\n                [style.color]=\"options.handles.callout.color\">\r\n                {{ tooltips.upper.label }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Section of Track Abover Upper Thumb -->\r\n    <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\r\n\r\n</div>\r\n\r\n<!-- Chart Ticks and Tick Labels -->\r\n<div class=\"tick-container\"\r\n    role=\"presentation\"\r\n    *ngIf=\"(options.track.ticks.major.show || options.track.ticks.minor.show) && options.handles.callout.trigger !== sliderCalloutTrigger.Dynamic\"\r\n    [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\r\n\r\n    <div class=\"tick\"\r\n        *ngFor=\"let tick of ticks\"\r\n        [class.major]=\"tick.type === sliderTickType.Major\"\r\n        [class.minor]=\"tick.type === sliderTickType.Minor\"\r\n        [style.left.%]=\"tick.position\"\r\n        [hidden]=\"!tick.showTicks\">\r\n\r\n        <div class=\"tick-indicator\"></div>\r\n        <div class=\"tick-label\" aria-hidden=\"true\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\r\n    </div>\r\n</div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck {\r\n\r\n    @Input() value: SliderValue | number = 0;\r\n    @Input() options: SliderOptions;\r\n    @Output() valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\r\n\r\n    @ViewChild('lowerTooltip') lowerTooltip: ElementRef;\r\n    @ViewChild('upperTooltip') upperTooltip: ElementRef;\r\n    @ViewChild('track') track: ElementRef;\r\n\r\n    // store current values for deep change detection\r\n    private _value: SliderValue | number;\r\n\r\n    // expose enums to Angular view\r\n    sliderType = SliderType;\r\n    sliderStyle = SliderStyle;\r\n    sliderSize = SliderSize;\r\n    sliderSnap = SliderSnap;\r\n    sliderThumb = SliderThumb;\r\n    sliderTickType = SliderTickType;\r\n    sliderThumbEvent = SliderThumbEvent;\r\n    sliderCalloutTrigger = SliderCalloutTrigger;\r\n\r\n    tracks = {\r\n        lower: {\r\n            size: 0,\r\n            color: ''\r\n        },\r\n        middle: {\r\n            size: 0,\r\n            color: ''\r\n        },\r\n        upper: {\r\n            size: 0,\r\n            color: ''\r\n        }\r\n    };\r\n\r\n    tooltips = {\r\n        lower: {\r\n            visible: false,\r\n            position: 0,\r\n            label: ''\r\n        },\r\n        upper: {\r\n            visible: false,\r\n            position: 0,\r\n            label: ''\r\n        }\r\n    };\r\n\r\n    thumbs = {\r\n        lower: {\r\n            hover: false,\r\n            drag: false,\r\n            position: 0,\r\n            order: 100,\r\n            value: null as number\r\n        },\r\n        upper: {\r\n            hover: false,\r\n            drag: false,\r\n            position: 0,\r\n            order: 101,\r\n            value: null as number\r\n        }\r\n    };\r\n\r\n    // store all the ticks to display\r\n    ticks: SliderTick[] = [];\r\n    defaultOptions: SliderOptions;\r\n\r\n    constructor(colorService: ColorService, private _changeDetectorRef: ChangeDetectorRef) {\r\n\r\n        // setup default options\r\n        this.defaultOptions = {\r\n            type: SliderType.Value,\r\n            handles: {\r\n                style: SliderStyle.Button,\r\n                callout: {\r\n                    trigger: SliderCalloutTrigger.None,\r\n                    background: colorService.getColor('grey2').toHex(),\r\n                    color: '#fff',\r\n                    formatter: (value: number): string | number => value\r\n                },\r\n                keyboard: {\r\n                    major: 5,\r\n                    minor: 1\r\n                },\r\n                aria: {\r\n                    thumb: 'Slider value',\r\n                    lowerThumb: 'Slider lower value',\r\n                    upperThumb: 'Slider upper value'\r\n                }\r\n            },\r\n            track: {\r\n                height: SliderSize.Wide,\r\n                min: 0,\r\n                max: 100,\r\n                ticks: {\r\n                    snap: SliderSnap.None,\r\n                    major: {\r\n                        show: true,\r\n                        steps: 10,\r\n                        labels: true,\r\n                        formatter: (value: number): string | number => value\r\n                    },\r\n                    minor: {\r\n                        show: true,\r\n                        steps: 5,\r\n                        labels: false,\r\n                        formatter: (value: number): string | number => value\r\n                    }\r\n                },\r\n                colors: {\r\n                    lower: colorService.getColor('grey6').toHex(),\r\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\r\n                    higher: colorService.getColor('grey6').toHex()\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.updateOptions();\r\n        this.updateValues();\r\n\r\n        this.setThumbState(SliderThumb.Lower, false, false);\r\n        this.setThumbState(SliderThumb.Upper, false, false);\r\n\r\n        // emit the initial value\r\n        this.valueChange.next(this.clone(this.value));\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n\r\n        if (this.detectValueChange(this.value, this._value)) {\r\n            this.updateValues();\r\n            this._value = this.clone(this.value);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // persistent tooltips will need positioned correctly at this stage\r\n        setTimeout(() => {\r\n            this.updateTooltipPosition(SliderThumb.Lower);\r\n            this.updateTooltipPosition(SliderThumb.Upper);\r\n\r\n            // mark as dirty\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    snapToNearestTick(thumb: SliderThumb, snapTarget: SliderSnap, forwards: boolean): void {\r\n\r\n        // get the value for the thumb\r\n        const { value } = this.getThumbState(thumb);\r\n\r\n        // get the closest ticks - remove any tick if we are currently on it\r\n        const closest = this.getTickDistances(value, thumb, snapTarget)\r\n            .filter(tick => tick.value !== value)\r\n            .find(tick => forwards ? tick.value > value : tick.value < value);\r\n\r\n        // If we have no ticks then move by a predefined amount\r\n        if (closest) {\r\n            return this.setThumbValue(thumb, this.validateValue(thumb, closest.value));\r\n        }\r\n\r\n        const step = snapTarget === SliderSnap.Major ? this.options.handles.keyboard.major : this.options.handles.keyboard.minor;\r\n\r\n        this.setThumbValue(thumb, this.validateValue(thumb, value + (forwards ? step : -step)));\r\n\r\n    }\r\n\r\n    snapToEnd(thumb: SliderThumb, forwards: boolean): void {\r\n        this.setThumbValue(thumb, this.validateValue(thumb, forwards ? this.options.track.max : this.options.track.min));\r\n    }\r\n\r\n    getThumbValue(thumb: SliderThumb): number {\r\n        return this.getThumbState(thumb).value;\r\n    }\r\n\r\n    getFormattedValue(thumb: SliderThumb): string | number {\r\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\r\n    }\r\n\r\n    private getThumbState(thumb: SliderThumb) {\r\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\r\n    }\r\n\r\n    private setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\r\n\r\n        if (thumb === SliderThumb.Lower) {\r\n            this.thumbs.lower.hover = hover;\r\n            this.thumbs.lower.drag = drag;\r\n        } else {\r\n            this.thumbs.upper.hover = hover;\r\n            this.thumbs.upper.drag = drag;\r\n        }\r\n\r\n        // update the visibility of the tooltips\r\n        this.updateTooltips(thumb);\r\n    }\r\n\r\n    thumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\r\n\r\n        // get the current thumb state\r\n        const state = this.getThumbState(thumb);\r\n\r\n        // update based upon event\r\n        switch (event) {\r\n\r\n            case SliderThumbEvent.DragStart:\r\n                state.drag = true;\r\n                break;\r\n\r\n            case SliderThumbEvent.DragEnd:\r\n                state.drag = false;\r\n                break;\r\n\r\n            case SliderThumbEvent.MouseOver:\r\n                state.hover = true;\r\n                break;\r\n\r\n            case SliderThumbEvent.MouseLeave:\r\n                state.hover = false;\r\n                break;\r\n\r\n            case SliderThumbEvent.None:\r\n                state.drag = false;\r\n                state.hover = false;\r\n                break;\r\n        }\r\n\r\n        // update the thumb state\r\n        this.setThumbState(thumb, state.hover, state.drag);\r\n    }\r\n\r\n    getAriaValueText(thumb: SliderThumb): string | number {\r\n        // get the current thumb value\r\n        const value = this.getThumbValue(thumb);\r\n\r\n        // get all the ticks\r\n        const tick = this.ticks.find(_tick => _tick.value === value);\r\n\r\n        if (tick && tick.label) {\r\n            return tick.label;\r\n        }\r\n\r\n        // otherwise simply display the formatted value\r\n        return this.getFormattedValue(thumb);\r\n    }\r\n\r\n    private updateTooltips(thumb: SliderThumb): void {\r\n\r\n        let visible = false;\r\n        const state = this.getThumbState(thumb);\r\n\r\n        switch (this.options.handles.callout.trigger) {\r\n\r\n            case SliderCalloutTrigger.Persistent:\r\n                visible = true;\r\n                break;\r\n\r\n            case SliderCalloutTrigger.Drag:\r\n                visible = state.drag;\r\n                break;\r\n\r\n            case SliderCalloutTrigger.Hover:\r\n                visible = state.hover || state.drag;\r\n                break;\r\n\r\n            case SliderCalloutTrigger.Dynamic:\r\n                visible = true;\r\n                break;\r\n        }\r\n\r\n        // update the state for the corresponding thumb\r\n        this.getTooltip(thumb).visible = visible;\r\n\r\n        // update the tooltip text\r\n        this.updateTooltipText(thumb);\r\n\r\n        // update the tooltip positions\r\n        this.updateTooltipPosition(thumb);\r\n    }\r\n\r\n    private updateTooltipText(thumb: SliderThumb) {\r\n\r\n        // get the thumb value\r\n        let state = this.getThumbState(thumb);\r\n        let tooltip = this.getTooltip(thumb);\r\n\r\n        // store the formatted label\r\n        tooltip.label = this.getFormattedValue(thumb).toString();\r\n    }\r\n\r\n    private getTooltipElement(thumb: SliderThumb): ElementRef {\r\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\r\n    }\r\n\r\n    private getTooltip(thumb: SliderThumb) {\r\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\r\n    }\r\n\r\n    private updateTooltipPosition(thumb: SliderThumb): void {\r\n\r\n        const tooltip = this.getTooltip(thumb);\r\n\r\n        // if tooltip is not visible then stop here\r\n        if (tooltip.visible === false) {\r\n            return;\r\n        }\r\n\r\n        let tooltipElement = this.getTooltipElement(thumb);\r\n\r\n        // get the element widths\r\n        let thumbWidth: number;\r\n\r\n        if (this.options.handles.style === SliderStyle.Button) {\r\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\r\n        } else {\r\n            thumbWidth = 2;\r\n        }\r\n\r\n        let tooltipWidth = tooltipElement.nativeElement.offsetWidth;\r\n\r\n        // calculate the tooltips new position\r\n        let tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\r\n\r\n        // update tooltip position\r\n        tooltip.position = -tooltipPosition;\r\n\r\n        if (this.options.type === SliderType.Range && this.options.handles.callout.trigger === SliderCalloutTrigger.Dynamic) {\r\n            this.preventTooltipOverlap(tooltip);\r\n        }\r\n    }\r\n\r\n    private preventTooltipOverlap(tooltip: any): void {\r\n        const trackWidth = this.track.nativeElement.offsetWidth;\r\n\r\n        const lower = (trackWidth / 100) * this.thumbs.lower.position;\r\n        const upper = (trackWidth / 100) * this.thumbs.upper.position;\r\n\r\n        const lowerWidth = this.lowerTooltip.nativeElement.offsetWidth / 2;\r\n        const upperWidth = this.upperTooltip.nativeElement.offsetWidth / 2;\r\n\r\n        const diff = (lower + lowerWidth) - (upper - upperWidth);\r\n\r\n        // if the tooltips are closer than 16px then adjust so the dont move any close\r\n        if (diff > 0) {\r\n            if (tooltip === this.tooltips.lower && this.thumbs.lower.drag === false) {\r\n                tooltip.position -= (diff / 2);\r\n            } else if (tooltip === this.tooltips.upper && this.thumbs.upper.drag === false) {\r\n                tooltip.position += (diff / 2);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clamp(value: number, min: number, max: number): number {\r\n        return Math.min(Math.max(value, min), max);\r\n    }\r\n\r\n    updateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\r\n\r\n        // get event position - either mouse or touch\r\n        let eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\r\n\r\n        // if event position is null do nothing\r\n        if (eventPosition === null) {\r\n            return;\r\n        }\r\n\r\n        // get mouse position\r\n        let mouseX = window.pageXOffset + eventPosition;\r\n\r\n        // get track size and position\r\n        let trackBounds = this.track.nativeElement.getBoundingClientRect();\r\n\r\n        // restrict the value within the range size\r\n        let position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\r\n\r\n        // get fraction representation of location within the track\r\n        let fraction = (position / trackBounds.width);\r\n\r\n        // convert to value within the range\r\n        let value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\r\n\r\n        // ensure value is valid\r\n        value = this.validateValue(thumb, value);\r\n\r\n        // snap to a tick if required\r\n        value = this.snapToTick(value, thumb);\r\n\r\n        // update the value accordingly\r\n        this.setThumbValue(thumb, value);\r\n\r\n        this.updateOrder(thumb);\r\n        this.updateValues();\r\n\r\n        // update tooltip text & position\r\n        this.updateTooltipText(thumb);\r\n\r\n        // update the position of all visible tooltips\r\n        this.updateTooltipPosition(SliderThumb.Lower);\r\n        this.updateTooltipPosition(SliderThumb.Upper);\r\n\r\n        // mark as dirty for change detection\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    private updateOrder(thumb: SliderThumb): void {\r\n\r\n        let lower = thumb === SliderThumb.Lower ? 101 : 100;\r\n        let upper = thumb === SliderThumb.Lower ? 100 : 101;\r\n\r\n        // The most recently used thumb should be above\r\n        this.thumbs.lower.order = lower;\r\n        this.thumbs.upper.order = upper;\r\n    }\r\n\r\n    private getTickDistances(value: number, thumb: SliderThumb, snapTarget: SliderSnap): SliderTick[] {\r\n\r\n        // if snap target is none then return original value\r\n        if (snapTarget === SliderSnap.None) {\r\n            return [];\r\n        }\r\n\r\n        // get filtered ticks\r\n        let ticks: SliderTick[];\r\n\r\n        switch (snapTarget) {\r\n\r\n            case SliderSnap.Minor:\r\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\r\n                break;\r\n\r\n            case SliderSnap.Major:\r\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\r\n                break;\r\n\r\n            default:\r\n                ticks = this.ticks.slice(0);\r\n        }\r\n\r\n        // get the track limit\r\n        let lowerLimit = this.options.track.min;\r\n        let upperLimit = this.options.track.max;\r\n\r\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\r\n            upperLimit = this.thumbs.upper.value;\r\n        }\r\n\r\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\r\n            lowerLimit = this.thumbs.lower.value;\r\n        }\r\n\r\n        // Find the closest tick to the current position\r\n        const range = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit);\r\n\r\n        // If there are no close ticks in the valid range then dont snap\r\n        if (range.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        return range.sort((tickOne, tickTwo) => {\r\n\r\n            const tickOneDelta = Math.max(tickOne.value, value) - Math.min(tickOne.value, value);\r\n            const tickTwoDelta = Math.max(tickTwo.value, value) - Math.min(tickTwo.value, value);\r\n            \r\n            return tickOneDelta - tickTwoDelta;\r\n        });\r\n    }\r\n\r\n    private snapToTick(value: number, thumb: SliderThumb): number {\r\n\r\n        const tickDistances = this.getTickDistances(value, thumb, this.options.track.ticks.snap);\r\n\r\n        // if there are no ticks return the current value\r\n        if (tickDistances.length === 0) {\r\n            return value;\r\n        }\r\n\r\n        // get the closest tick\r\n        return tickDistances[0].value;\r\n    }\r\n\r\n    private validateValue(thumb: SliderThumb, value: number): number {\r\n\r\n        // if slider is not a range value is always valid providing it is within the chart min and max values\r\n        if (this.options.type === SliderType.Value) {\r\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\r\n        }\r\n\r\n        // check if value is with chart ranges\r\n        if (value > this.options.track.max) {\r\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\r\n        }\r\n\r\n        if (value < this.options.track.min) {\r\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\r\n        }\r\n\r\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\r\n        if (thumb === SliderThumb.Lower) {\r\n\r\n            if (this.thumbs.upper.value === null) {\r\n                return value;\r\n            }\r\n\r\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\r\n        }\r\n\r\n        if (thumb === SliderThumb.Upper) {\r\n\r\n            if (this.thumbs.lower.value === null) {\r\n                return value;\r\n            }\r\n\r\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\r\n        }\r\n    }\r\n\r\n    private updateOptions(): void {\r\n\r\n        // add in the default options that user hasn't specified\r\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\r\n\r\n        this.updateTrackColors();\r\n        this.updateTicks();\r\n        this.updateValues();\r\n    }\r\n\r\n    private updateValues(): void {\r\n\r\n        if (this.value === undefined || this.value === null) {\r\n            this.value = 0;\r\n        }\r\n\r\n        let lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\r\n        let upperValue = typeof this.value === 'number' ? this.value : this.value.high;\r\n\r\n        // validate values\r\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\r\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\r\n\r\n        // calculate the positions as percentages\r\n        let lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\r\n        let upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\r\n\r\n        // update thumb positions\r\n        this.thumbs.lower.position = lowerPosition;\r\n        this.thumbs.upper.position = upperPosition;\r\n\r\n        // calculate the track sizes\r\n        this.tracks.lower.size = lowerPosition;\r\n        this.tracks.middle.size = upperPosition - lowerPosition;\r\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\r\n\r\n        // update the value input\r\n        this.setValue(lowerValue, upperValue);\r\n    }\r\n\r\n    private setValue(low: number, high?: number): void {\r\n\r\n        this.thumbs.lower.value = low;\r\n        this.thumbs.upper.value = high;\r\n\r\n        let previousValue = this.clone(this._value);\r\n\r\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\r\n\r\n        // call the event emitter if changes occured\r\n        if (this.detectValueChange(this.value, previousValue)) {\r\n            this.valueChange.emit(this.clone(this.value));\r\n\r\n            this.updateTooltipText(SliderThumb.Lower);\r\n            this.updateTooltipText(SliderThumb.Upper);\r\n        } else {\r\n            this.valueChange.emit(this.clone(this.value));\r\n        }\r\n    }\r\n\r\n    private setThumbValue(thumb: SliderThumb, value: number): void {\r\n\r\n        // update the thumb value\r\n        this.getThumbState(thumb).value = value;\r\n\r\n        // forward these changes to the value\r\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\r\n    }\r\n\r\n    private updateTicks(): void {\r\n\r\n        // get tick options\r\n        const majorOptions = this.options.track.ticks.major;\r\n        const minorOptions = this.options.track.ticks.minor;\r\n\r\n        // check if we should show ticks\r\n        if (majorOptions.show === false && minorOptions.show === false) {\r\n            this.ticks = [];\r\n        }\r\n\r\n        // create ticks for both major and minor - only get the ones to be shown\r\n        const majorTicks = this.getTicks(majorOptions, SliderTickType.Major).filter(tick => tick.showTicks);\r\n        const minorTicks = this.getTicks(minorOptions, SliderTickType.Minor).filter(tick => tick.showTicks);\r\n\r\n        // remove any minor ticks that are on a major interval\r\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\r\n    }\r\n\r\n    private updateTrackColors(): void {\r\n\r\n        // get colors for each part of the track\r\n        const { lower, range, higher } = this.options.track.colors;\r\n\r\n        // update the controller value\r\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\r\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\r\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\r\n    }\r\n\r\n    private getSteps(steps: number | number[]): number[] {\r\n\r\n        // if they are already an array just return it\r\n        if (steps instanceof Array) {\r\n            return steps;\r\n        }\r\n\r\n        let output: number[] = [];\r\n\r\n        // otherwise calculate the steps\r\n        for (let idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\r\n            output.push(idx);\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    private getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\r\n\r\n        // create an array to store the ticks and step points\r\n        let steps = this.getSteps(options.steps);\r\n\r\n        // get some chart options\r\n        let min = this.options.track.min;\r\n        let max = this.options.track.max;\r\n\r\n        // convert each step to a slider tick and remove invalid ticks\r\n        return steps.map(step => {\r\n            return {\r\n                showTicks: options.show,\r\n                showLabels: options.labels,\r\n                type: type,\r\n                position: ((step - min) / (max - min)) * 100,\r\n                value: step,\r\n                label: options.formatter(step)\r\n            };\r\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\r\n    }\r\n\r\n    private unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\r\n\r\n        // get all ticks combined removing any minor ticks with the same value as major ticks\r\n        return majorTicks.concat(minorTicks)\r\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\r\n            .sort((t1, t2) => t1.value - t2.value);\r\n    }\r\n\r\n    private deepMerge<T>(destination: T, source: T): T {\r\n\r\n        // loop though all of the properties in the source object\r\n        for (let prop in source) {\r\n\r\n            // check if the destination object has the property\r\n            if (!destination.hasOwnProperty(prop)) {\r\n                // copy the property across\r\n                destination[prop] = source[prop];\r\n                continue;\r\n            }\r\n\r\n            // if the property exists and is not an object then skip\r\n            if (typeof destination[prop] !== 'object') {\r\n                continue;\r\n            }\r\n\r\n            // check if property is an array\r\n            if (destination[prop] instanceof Array) {\r\n                continue;\r\n            }\r\n\r\n            // if it is an object then perform a recursive check\r\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\r\n        }\r\n\r\n        return destination;\r\n    }\r\n\r\n    private detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\r\n\r\n        // compare two slider values\r\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\r\n\r\n            // references to the objects in the correct types\r\n            const obj1 = value1 as SliderValue;\r\n            const obj2 = value2 as SliderValue;\r\n\r\n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\r\n        }\r\n\r\n        // if not a slider value - should be number of nullable type - compare normally\r\n        return value1 !== value2;\r\n    }\r\n\r\n    /**\r\n     * Determines whether or not an object conforms to the\r\n     * SliderValue interface.\r\n     * @param value - The object to check - this must be type any\r\n     */\r\n    private isSliderValue(value: any): boolean {\r\n\r\n        // check if is an object\r\n        if (typeof value !== 'object') {\r\n            return false;\r\n        }\r\n\r\n        // next check if it contains the necessary properties\r\n        return 'low' in value && 'high' in value;\r\n    }\r\n\r\n    private clone(value: number | SliderValue): number | SliderValue {\r\n\r\n        // if it is not an object simply return the value\r\n        if (typeof value !== 'object') {\r\n            return value;\r\n        }\r\n\r\n        // create a new object from the existing one\r\n        const instance = { ...value };\r\n\r\n        // delete remove the value from the old object\r\n        value = undefined;\r\n\r\n        // return the new instance of the object\r\n        return instance;\r\n    }\r\n}\r\n\r\nexport enum SliderType {\r\n    Value,\r\n    Range\r\n}\r\n\r\nexport enum SliderStyle {\r\n    Button,\r\n    Line\r\n}\r\n\r\nexport enum SliderSize {\r\n    Narrow,\r\n    Wide\r\n}\r\n\r\nexport enum SliderCalloutTrigger {\r\n    None,\r\n    Hover,\r\n    Drag,\r\n    Persistent,\r\n    Dynamic\r\n}\r\n\r\nexport interface SliderValue {\r\n    low: number;\r\n    high: number;\r\n}\r\n\r\nexport enum SliderSnap {\r\n    None,\r\n    Minor,\r\n    Major,\r\n    All\r\n}\r\n\r\nexport enum SliderTickType {\r\n    Minor,\r\n    Major\r\n}\r\n\r\nexport interface SliderOptions {\r\n    type?: SliderType;\r\n    handles?: SliderHandleOptions;\r\n    track?: SliderTrackOptions;\r\n}\r\n\r\nexport interface SliderHandleOptions {\r\n    style?: SliderStyle;\r\n    callout?: SliderCallout;\r\n    keyboard?: SliderKeyboardOptions;\r\n    aria?: SliderAriaOptions;\r\n}\r\n\r\nexport interface SliderAriaOptions {\r\n    thumb: string;\r\n    lowerThumb: string;\r\n    upperThumb: string;\r\n}\r\n\r\nexport interface SliderKeyboardOptions {\r\n    major?: number;\r\n    minor?: number;\r\n}\r\n\r\nexport interface SliderTrackOptions {\r\n    height?: SliderSize;\r\n    min?: number;\r\n    max?: number;\r\n    ticks?: SliderTicksOptions;\r\n    colors?: SliderTrackColors;\r\n}\r\n\r\nexport interface SliderTicksOptions {\r\n    snap?: SliderSnap;\r\n    major?: SliderTickOptions;\r\n    minor?: SliderTickOptions;\r\n}\r\n\r\nexport interface SliderTickOptions {\r\n    show?: boolean;\r\n    steps?: number | number[];\r\n    labels?: boolean;\r\n    formatter?: (value: number) => string | number;\r\n}\r\n\r\nexport interface SliderTick {\r\n    showTicks: boolean;\r\n    showLabels: boolean;\r\n    type: SliderTickType;\r\n    position: number;\r\n    value: number;\r\n    label: string | number;\r\n}\r\n\r\nexport interface SliderTrackColors {\r\n    lower?: string | string[];\r\n    range?: string | string[];\r\n    higher?: string | string[];\r\n}\r\n\r\nexport interface SliderCallout {\r\n    trigger?: SliderCalloutTrigger;\r\n    background?: string;\r\n    color?: string;\r\n    formatter?: (value: number) => string | number;\r\n}\r\n\r\nexport enum SliderThumbEvent {\r\n    None,\r\n    MouseOver,\r\n    MouseLeave,\r\n    DragStart,\r\n    DragEnd\r\n}\r\n\r\nexport enum SliderThumb {\r\n    Lower,\r\n    Upper\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ColorServiceModule } from '../../services/color/index';\r\n\r\nimport { SliderComponent } from './slider.component';\r\nimport { DragModule } from '../../directives/drag/index';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ColorServiceModule,\r\n        DragModule\r\n    ],\r\n    exports: [SliderComponent],\r\n    declarations: [SliderComponent]\r\n})\r\nexport class SliderModule { }","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ColorService } from '../../services/color/index';\r\nimport { ColorIdentifier } from '../../index';\r\n\r\n@Component({\r\n    selector: 'ux-spark',\r\n    template: `<!-- Inline Spark Chart -->\r\n<div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\r\n\r\n    <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\r\n\r\n    <div class=\"ux-spark-line\">\r\n\r\n        <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\r\n            <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\r\n            <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\r\n        </div>\r\n\r\n        <div class=\"ux-spark ux-inline ux-spark-theme-{{theme}}\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [uxTooltip]=\"tooltip\">\r\n            <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\r\n        </div>\r\n\r\n        <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\r\n            <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\r\n            <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<!-- End Inline Spark Chart -->\r\n\r\n\r\n<!-- Non Inline Spark Chart -->\r\n<div *ngIf=\"!inlineLabel\">\r\n\r\n    <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\r\n        <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\r\n        <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\r\n    </div>\r\n\r\n    <div class=\"ux-spark ux-spark-theme-{{theme}}\" [class.ux-spark-multi-value]=\"values.length > 1\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\r\n        [uxTooltip]=\"tooltip\">\r\n        <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\r\n    </div>\r\n\r\n    <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\r\n        <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\r\n        <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\r\n    </div>\r\n</div>\r\n\r\n<!-- End Non Inline Spark Chart -->`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SparkComponent {\r\n\r\n    values: number[] = [];\r\n\r\n    @Input() barHeight: number = 10;\r\n    @Input() inlineLabel: string;\r\n    @Input() topLeftLabel: string;\r\n    @Input() topRightLabel: string;\r\n    @Input() bottomLeftLabel: string;\r\n    @Input() bottomRightLabel: string;\r\n    @Input() tooltip: string;\r\n\r\n    private _trackColor: string;\r\n    private _theme: ColorIdentifier = 'primary';    \r\n    private _barColor: string | string[] = [];\r\n    \r\n    @Input() \r\n    set theme(value: string) {\r\n        this._theme = this._colorService.resolveColorName(value);\r\n    }\r\n\r\n    get theme(): string {\r\n        return this._theme;\r\n    }\r\n\r\n    @Input() \r\n    set trackColor(value: string) {\r\n        this._trackColor = this._colorService.resolve(value);\r\n    }\r\n\r\n    get trackColor(): string {\r\n        return this._trackColor;\r\n    }\r\n\r\n    @Input() \r\n    set barColor(value: string | string[]) {\r\n\r\n        if (Array.isArray(value)) {\r\n            this._barColor = value.map(color => this._colorService.resolve(color));\r\n        } else {\r\n            this._barColor = [this._colorService.resolve(value)];\r\n        }\r\n    }\r\n\r\n    get barColor(): string | string[] {\r\n        return this._barColor;\r\n    }\r\n\r\n    @Input()\r\n    set value(value: number | number[]) {\r\n\r\n        // ensure 'value' is an array at this point\r\n        const values = Array.isArray(value) ? value : [value];\r\n\r\n        // get the total value of all lines\r\n        const total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\r\n\r\n        // figure out the percentages for each spark line\r\n        this.values = values.map(val => (val / total) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return this.values;\r\n    }\r\n\r\n    constructor(private _colorService: ColorService) { }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SparkComponent } from './spark.component';\r\nimport { ColorServiceModule } from '../../services/color/index';\r\nimport { TooltipModule } from '../tooltip/index';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ColorServiceModule,\r\n        TooltipModule\r\n    ],\r\n    exports: [SparkComponent],\r\n    declarations: [SparkComponent]\r\n})\r\nexport class SparkModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { TabComponent } from './tab/tab.component';\r\n\r\n@Injectable()\r\nexport class TabsetService {\r\n\r\n    tabs$ = new BehaviorSubject<TabComponent[]>([]);\r\n    active$ = new BehaviorSubject<TabComponent>(null);\r\n    focused$ = new BehaviorSubject<boolean>(false);\r\n    highlighted$ = new BehaviorSubject<TabComponent>(null);\r\n\r\n    add(tab: TabComponent): void {\r\n        this.tabs$.next([...this.tabs$.value, tab]);\r\n\r\n        // check if this is the only tab. If so select this by default\r\n        if (!this.active$.value) {\r\n            this.select(tab);\r\n        }\r\n    }\r\n\r\n    remove(tab: TabComponent): void {\r\n\r\n        // remove the tab\r\n        this.tabs$.next(this.tabs$.value.filter(_tab => _tab !== tab));\r\n    }\r\n\r\n    select(tab: TabComponent): void {\r\n        if (!tab.disabled) {\r\n            this.active$.next(tab);\r\n            this.highlighted$.next(tab);\r\n        }\r\n    }\r\n\r\n    selectAtIndex(index: number): void {\r\n\r\n        // if there are no tabs then do nothing\r\n        if (this.tabs$.value.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // check if the index is within the bounds\r\n        if (index < 0) {\r\n            return this.selectAtIndex(this.tabs$.value.length - 1);\r\n        } else if (index >= this.tabs$.value.length) {\r\n            return this.selectAtIndex(0);\r\n        }\r\n\r\n        const target = this.tabs$.value[index];\r\n\r\n        if (target) {\r\n            this.select(target);\r\n        }\r\n    }\r\n\r\n    selectNextTab(): void {\r\n        // find the currently selected index\r\n        const index = this.tabs$.value.indexOf(this.active$.value);\r\n\r\n        // check the tabs after the active one to see if there are any selectable tabs\r\n        const tabs = this.tabs$.value.slice(index + 1);\r\n\r\n        // check if any of the tabs are not disabled\r\n        for (let tab of tabs) {\r\n            if (!tab.disabled) {\r\n                return this.select(tab);\r\n            }\r\n        }\r\n\r\n        // if we reach here then no tab could be selected - select the first tab\r\n        this.selectFirstTab();\r\n    }\r\n\r\n    selectPreviousTab(): void {\r\n        // find the currently selected index\r\n        const index = this.tabs$.value.indexOf(this.active$.value);\r\n\r\n        // check the tabs before the active one to see if there are any selectable tabs\r\n        const tabs = this.tabs$.value.slice(0, index);\r\n\r\n        // check if any of the tabs are not disabled\r\n        for (let tab of tabs.reverse()) {\r\n            if (!tab.disabled) {\r\n                return this.select(tab);\r\n            }\r\n        }\r\n\r\n        // if we reach here then no previous tab could be selected - select the last tab\r\n        this.selectLastTab();\r\n    }\r\n\r\n    selectFirstTab(): void {\r\n        // find the index of the first non-disabled tab\r\n        const tabIndex = this.tabs$.value.findIndex(tab => !tab.disabled);\r\n\r\n        if (tabIndex !== -1) {\r\n            this.selectAtIndex(tabIndex);\r\n        }\r\n    }\r\n\r\n    selectLastTab(): void {\r\n        // find the index of the first non-disabled tab\r\n        const tabIndex = this.tabs$.value.slice().reverse().findIndex(tab => !tab.disabled);\r\n\r\n        if (tabIndex !== -1) {\r\n            this.selectAtIndex((this.tabs$.value.length - 1) - tabIndex);\r\n        }\r\n    }\r\n} ","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { TabComponent } from './tab/tab.component';\r\nimport { TabsetService } from './tabset.service';\r\n\r\n@Component({\r\n    selector: 'ux-tabset',\r\n    template: `<!-- Nav tabs -->\r\n<ul role=\"tablist\"\r\n    class=\"nav nav-tabs\"\r\n    [class.minimal-tab]=\"minimal\"\r\n    [attr.aria-label]=\"ariaLabel\"\r\n    [attr.aria-orientation]=\"stacked === 'none' ? 'horizontal' : 'vertical'\">\r\n\r\n\t<li role=\"presentation\" \r\n        class=\"nav-item\"\r\n        *ngFor=\"let tab of tabset.tabs$ | async; let index = index\"\r\n        [class.active]=\"tab.active$ | async\"\r\n        [class.disabled]=\"tab.disabled\"\r\n        [ngClass]=\"tab.customClass\">\r\n\r\n        <a class=\"nav-link\"\r\n            [id]=\"tab.id\"\r\n            role=\"tab\"\r\n            [uxTabFocus]=\"tab\"\r\n            [tabindex]=\"(tab.active$ | async) ? 0 : -1\"\r\n            [class.highlighted]=\"(tabset.focused$ | async) && (tabset.highlighted$ | async) === tab\"            \r\n            (mousedown)=\"tabset.select(tab)\"\r\n            (focus)=\"tabset.focused$.next(true)\"\r\n            (blur)=\"tabset.focused$.next(false)\"\r\n            (mousedown)=\"tabset.focused$.next(true)\"\r\n            (keydown.ArrowUp)=\"selectPreviousTab($event)\"\r\n            (keydown.ArrowLeft)=\"selectPreviousTab($event)\"\r\n            (keydown.ArrowRight)=\"selectNextTab($event)\"\r\n            (keydown.ArrowDown)=\"selectNextTab($event)\"\r\n            (keydown.Home)=\"tabset.selectFirstTab(); $event.preventDefault()\"\r\n            (keydown.End)=\"tabset.selectLastTab(); $event.preventDefault()\"\r\n            [attr.aria-controls]=\"tab.id\"\r\n            [attr.aria-selected]=\"tab.active$ | async\"\r\n            [attr.aria-disabled]=\"tab.disabled\">\r\n\r\n            <span *ngIf=\"!tab.headingRef\">{{ tab.heading }}</span>\r\n\r\n            <ng-container *ngIf=\"tab.headingRef\" [ngTemplateOutlet]=\"tab.headingRef\"></ng-container>\r\n        </a>\r\n\r\n\t</li>\r\n\r\n</ul>\r\n\r\n<!-- Tab panes -->\r\n<div class=\"tab-content\">\r\n\t<ng-content></ng-content>\r\n</div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [TabsetService],\r\n    host: {\r\n        '[class.tabs-left]': 'stacked === \"left\"',\r\n        '[class.tabs-right]': 'stacked === \"right\"',\r\n    }\r\n})\r\nexport class TabsetComponent {\r\n\r\n    @Input() minimal: boolean = true;\r\n    @Input() stacked: 'left' | 'right' | 'none' = 'none';\r\n    @Input('aria-label') ariaLabel: string;\r\n\r\n    constructor(public tabset: TabsetService) { }\r\n\r\n    /**\r\n     * Allow manual tab selected\r\n     */\r\n    select(tab: TabComponent): void {\r\n        this.tabset.select(tab);\r\n    }\r\n\r\n    selectPreviousTab(event: KeyboardEvent): void {\r\n\r\n        // determine which arrow key is pressed\r\n        const arrowLeft = event.key === 'ArrowLeft' || event.keyCode === 37;\r\n        const arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;\r\n\r\n        // only perform action if the arrow key matches the orientation\r\n        if (arrowLeft && this.stacked !== 'none' || arrowUp && this.stacked === 'none') {\r\n            return;\r\n        }\r\n\r\n        // perform selection\r\n        this.tabset.selectPreviousTab();\r\n\r\n        // prevent the browser from scrolling when arrow keys are pressed\r\n        event.preventDefault();\r\n    }\r\n\r\n    selectNextTab(event: KeyboardEvent): void {\r\n\r\n        // determine which arrow key is pressed\r\n        const arrowRight = event.key === 'ArrowRight' || event.keyCode === 39;\r\n        const arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;\r\n\r\n        // only perform action if the arrow key matches the orientation\r\n        if (arrowRight && this.stacked !== 'none' || arrowDown && this.stacked === 'none') {\r\n            return;\r\n        }\r\n\r\n        // perform selection\r\n        this.tabset.selectNextTab();\r\n\r\n        // prevent the browser from scrolling when arrow keys are pressed\r\n        event.preventDefault();\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, TemplateRef } from '@angular/core';\r\nimport { Observable ,  Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { TabsetService } from '../tabset.service';\r\n\r\nlet uniqueTabId = 0;\r\n\r\n@Component({\r\n    selector: 'ux-tab',\r\n    template: `<div role=\"tabpanel\"\r\n     class=\"tab-pane\"\r\n     [class.active]=\"active$ | async\"\r\n     [id]=\"id + '-panel'\"\r\n     [attr.aria-labelledby]=\"id\"\r\n     [attr.aria-hidden]=\"!(active$ | async)\">\r\n  <ng-content></ng-content>\r\n</div>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TabComponent implements OnDestroy {\r\n\r\n    @Input() id: string = `ux-tab-${++uniqueTabId}`;\r\n    @Input() disabled: boolean = false;\r\n    @Input() heading: string;\r\n    @Input() customClass: string;\r\n\r\n    @Output() select = new EventEmitter<void>();\r\n    @Output() deselect = new EventEmitter<void>();\r\n\r\n    @Input() set active(value: boolean) {\r\n        if (value) {\r\n            this._tabset.select(this);\r\n        }\r\n    }\r\n\r\n    headingRef: TemplateRef<any>;\r\n    active$: Observable<boolean> = this._tabset.active$.pipe(map(active => active === this));\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _tabset: TabsetService) {\r\n        _tabset.add(this);\r\n\r\n        this._subscription = this.active$.subscribe(active => active ? this.select.emit() : this.deselect.emit());\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._tabset.remove(this);\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n}","import { Directive, TemplateRef } from '@angular/core';\r\nimport { TabComponent } from './tab.component';\r\n\r\n@Directive({\r\n    selector: '[uxTabHeading]'\r\n})\r\nexport class TabHeadingDirective {\r\n\r\n    constructor(templateRef: TemplateRef<any>, tab: TabComponent) {\r\n        tab.headingRef = templateRef;\r\n    }\r\n\r\n}","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { TabsetService } from '../tabset.service';\r\nimport { TabComponent } from './tab.component';\r\n\r\n@Directive({\r\n    selector: '[uxTabFocus]'\r\n})\r\nexport class TabFocusDirective implements OnInit, OnDestroy {\r\n\r\n    @Input() uxTabFocus: TabComponent;\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(private _tabset: TabsetService, private _elementRef: ElementRef) { }\r\n\r\n    ngOnInit(): void {\r\n        this._subscription = this._tabset.highlighted$.pipe(\r\n            filter(() => this._tabset.focused$.value === true),\r\n            filter(() => this._tabset.highlighted$.value === this.uxTabFocus),\r\n        ).subscribe(() => this._elementRef.nativeElement.focus());\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TabsetComponent } from './tabset.component';\r\nimport { TabsetService } from './tabset.service';\r\nimport { TabComponent } from './tab/tab.component';\r\nimport { TabHeadingDirective } from './tab/tab-heading.directive';\r\nimport { TabFocusDirective } from './tab/tab-focus.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [TabsetComponent, TabComponent, TabHeadingDirective],\r\n    declarations: [TabsetComponent, TabComponent, TabHeadingDirective, TabFocusDirective],\r\n})\r\nexport class TabsetModule { }","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-timeline',\r\n    template: `<div class=\"timeline\">\r\n    <ng-content></ng-content>\r\n</div>\r\n`\r\n})\r\nexport class TimelineComponent {\r\n}","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ux-timeline-event',\r\n    template: `<div class=\"timeline-badge\" [ngClass]=\"badgeColor\">\r\n    <span>{{badgeTitle}}</span>\r\n</div>\r\n<div class=\"timeline-panel\">\r\n    <ng-content></ng-content>\r\n</div>\r\n`\r\n})\r\nexport class TimelineEventComponent {\r\n\r\n    @Input() badgeColor: string;\r\n    @Input() badgeTitle: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TimelineComponent } from './timeline.component';\r\nimport { TimelineEventComponent } from './timeline-event/timeline-event.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [\r\n        TimelineComponent,\r\n        TimelineEventComponent\r\n    ],\r\n    declarations: [\r\n        TimelineComponent,\r\n        TimelineEventComponent\r\n    ]\r\n})\r\nexport class TimelineModule { }\r\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nconst TOGGLESWITCH_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ToggleSwitchComponent),\r\n    multi: true\r\n};\r\n\r\nlet uniqueToggleSwitchId = 0;\r\n\r\n@Component({\r\n    selector: 'ux-toggleswitch',\r\n    template: `<label [attr.for]=\"inputId\"\r\n       class=\"ux-toggleswitch\"\r\n       [class.ux-toggleswitch-checked]=\"value\"\r\n       [class.ux-toggleswitch-disabled]=\"disabled\"\r\n       [class.ux-toggleswitch-focused]=\"focused\">\r\n\r\n    <input class=\"ux-toggleswitch-input\"\r\n           type=\"checkbox\"\r\n           role=\"switch\"\r\n           [id]=\"inputId\"\r\n           [checked]=\"value\"\r\n           [disabled]=\"disabled\"\r\n           [attr.name]=\"name\"\r\n           [tabindex]=\"tabindex\"\r\n           [attr.aria-label]=\"ariaLabel\"\r\n           [attr.aria-labelledby]=\"ariaLabelledby\"\r\n           [attr.aria-checked]=\"value\"\r\n           (focus)=\"focused = true\"\r\n           (blur)=\"focused = false\"\r\n           (change)=\"toggle()\"\r\n           (click)=\"$event.stopPropagation()\">\r\n\r\n    <div class=\"ux-toggleswitch-container\">\r\n        <div class=\"ux-toggleswitch-bg\"></div>\r\n        <div class=\"ux-toggleswitch-nub\"></div>\r\n    </div>\r\n\r\n    <span class=\"ux-toggleswitch-label\">\r\n        <ng-content></ng-content>\r\n    </span>\r\n</label>`,\r\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR]\r\n})\r\nexport class ToggleSwitchComponent implements ControlValueAccessor {\r\n\r\n    private _toggleSwitchId: string = `ux-toggleswitch-${++uniqueToggleSwitchId}`;\r\n\r\n    @Input() id: string = this._toggleSwitchId;\r\n    @Input() name: string | null;\r\n    @Input() tabindex: number = 0;\r\n    @Input() clickable: boolean = true;\r\n    @Input() disabled: boolean = false;\r\n    @Input('aria-label') ariaLabel: string = '';\r\n    @Input('aria-labelledby') ariaLabelledby: string = null;\r\n\r\n    @Output() valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: boolean) {\r\n        this._value = value;\r\n\r\n        // Update value output\r\n        this.valueChange.emit(value);\r\n\r\n        // Notify ngModel\r\n        this.onChangeCallback(value);\r\n        this.onTouchedCallback();\r\n    }\r\n\r\n    get inputId(): string {\r\n        return `${this.id || this._toggleSwitchId}-input`;\r\n    }\r\n\r\n    private _value: boolean = false;\r\n\r\n    focused: boolean = false;\r\n    onTouchedCallback: () => void = () => { };\r\n    onChangeCallback: (_: any) => void = () => { };\r\n\r\n    toggle(): void {\r\n        if (!this.disabled && this.clickable) {\r\n            this.value = !this.value;\r\n        }\r\n    }\r\n\r\n    writeValue(value: boolean): void {\r\n        this.value = !!value;\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ToggleSwitchComponent } from './toggleswitch.component';\r\n\r\n@NgModule({\r\n    imports: [ FormsModule ],\r\n    exports: [ ToggleSwitchComponent ],\r\n    declarations: [ ToggleSwitchComponent ]\r\n})\r\nexport class ToggleSwitchModule { }\r\n","import { Directive, HostListener, Output, EventEmitter, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[uxToolbarSearchButton]'\r\n})\r\nexport class ToolbarSearchButtonDirective {\r\n\r\n    @Output()\r\n    clicked = new EventEmitter<void>();\r\n\r\n    get width(): number {\r\n        return this._elementRef.nativeElement.offsetWidth;\r\n    }\r\n\r\n    constructor(private _elementRef: ElementRef) { }\r\n\r\n    @HostListener('click')\r\n    clickHandler() {\r\n        this.clicked.emit();\r\n    }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Optional, Output } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\n\r\nconst KEYS = {\r\n    ENTER: 13,\r\n    ESCAPE: 27\r\n};\r\n\r\n@Directive({\r\n    selector: '[uxToolbarSearchField]'\r\n})\r\nexport class ToolbarSearchFieldDirective {\r\n\r\n    @Output()\r\n    cancel = new EventEmitter<void>();\r\n\r\n    @Output()\r\n    submit = new EventEmitter<string>();\r\n\r\n    get text(): string {\r\n        // Use ngModel if specified on the host; otherwise read the DOM\r\n        if (this._ngModel) {\r\n            return this._ngModel.value;\r\n        }\r\n\r\n        return this._elementRef.nativeElement.value;\r\n    }\r\n\r\n    constructor(\r\n        private _elementRef: ElementRef,\r\n        @Optional() private _ngModel: NgModel) { }\r\n\r\n    focus() {\r\n        setTimeout(() => {\r\n            this._elementRef.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    blur() {\r\n        setTimeout(() => {\r\n            this._elementRef.nativeElement.blur();\r\n        });\r\n    }\r\n\r\n    clear() {\r\n        // Use ngModel if specified on the host; otherwise use the DOM\r\n        if (this._ngModel) {\r\n            this._ngModel.reset();\r\n        } else {\r\n            this._elementRef.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    keydownHandler(event: KeyboardEvent) {\r\n        setTimeout(() => {\r\n            if (event.keyCode === KEYS.ENTER) {\r\n                this.submit.emit(this.text);\r\n            } else if (event.keyCode === KEYS.ESCAPE) {\r\n                this._elementRef.nativeElement.blur();\r\n                this.cancel.emit();\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Input, Output } from '@angular/core';\r\nimport { ColorService } from '../../services/color/color.service';\r\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\r\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\r\n\r\n\r\n@Component({\r\n    selector: 'ux-toolbar-search',\r\n    template: `<ng-content></ng-content>`,\r\n    animations: [\r\n        trigger('expanded', [\r\n            state(\r\n                'collapsed',\r\n                style({\r\n                    width: '{{initialWidth}}'\r\n                }),\r\n                {\r\n                    params: { initialWidth: '30px' }\r\n                }\r\n            ),\r\n            state(\r\n                'expanded',\r\n                style({\r\n                    width: '100%'\r\n                })\r\n            ),\r\n            transition('collapsed <=> expanded', [animate('0.3s ease-out')])\r\n        ])\r\n    ]\r\n})\r\nexport class ToolbarSearchComponent implements AfterContentInit {\r\n\r\n    @HostBinding('class.expanded')\r\n    @Input()\r\n    get expanded(): boolean {\r\n        return this._expanded;\r\n    }\r\n\r\n    set expanded(value: boolean) {\r\n        this._expanded = value;\r\n\r\n        this.expandedChange.emit(value);\r\n\r\n        if (value) {\r\n            // Set focus on the input when expanded\r\n            this.field.focus();\r\n        } else {\r\n            // Clear text when contracted\r\n            this.field.clear();\r\n\r\n            // Remove focus (works around an IE issue where the caret remains visible)\r\n            this.field.blur();\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    @HostBinding('class')\r\n    direction: 'left' | 'right' = 'right';\r\n\r\n    @Input()\r\n    @HostBinding('class.inverse')\r\n    inverse = false;\r\n\r\n    @Input()\r\n    set background(value: string) {\r\n        this.backgroundColor = this._colorService.resolve(value) || 'transparent';\r\n    }\r\n\r\n    @Output()\r\n    expandedChange = new EventEmitter<boolean>();\r\n\r\n    @Output()\r\n    search = new EventEmitter<string>();\r\n\r\n    private _expanded: boolean = false;\r\n\r\n    @HostBinding('@expanded')\r\n    get expandedAnimation(): any {\r\n        return {\r\n            value: this.expanded ? 'expanded' : 'collapsed',\r\n            params: {\r\n                initialWidth: this.button.width + 'px'\r\n            }\r\n        };\r\n    }\r\n\r\n    @HostBinding('style.position') position = 'relative';\r\n    @HostBinding('style.background-color') backgroundColor = 'transparent';\r\n    @ContentChild(ToolbarSearchFieldDirective) field: ToolbarSearchFieldDirective;\r\n    @ContentChild(ToolbarSearchButtonDirective) button: ToolbarSearchButtonDirective;\r\n\r\n    private _placeholder: HTMLElement;\r\n\r\n    constructor(\r\n        private _elementRef: ElementRef,\r\n        private _colorService: ColorService,\r\n        @Inject(DOCUMENT) private _document: any) {\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        // Subscribe to the submit event on the input field, triggering the search event\r\n        this.field.submit.subscribe((text: string) => this.search.emit(text));\r\n\r\n        // Subscribe to cancel events coming from the input field\r\n        this.field.cancel.subscribe(() => this.expanded = false);\r\n\r\n        // Subscribe to the button click event\r\n        this.button.clicked.subscribe(() => {\r\n            if (this.expanded && this.field.text) {\r\n                this.search.emit(this.field.text);\r\n            } else {\r\n                this.expanded = !this.expanded;\r\n            }\r\n        });\r\n\r\n        // Create placeholder element to avoid changing layout when switching to position: absolute\r\n        this.createPlaceholder();\r\n    }\r\n\r\n    @HostListener('@expanded.start', ['$event'])\r\n    animationStart(event: AnimationEvent) {\r\n        if (event.toState === 'expanded') {\r\n            this.position = 'absolute';\r\n            this.enablePlaceholder(true);\r\n        }\r\n    }\r\n\r\n    @HostListener('@expanded.done', ['$event'])\r\n    animationDone(event: AnimationEvent) {\r\n        if (event.toState === 'collapsed') {\r\n            this.position = 'relative';\r\n            this.enablePlaceholder(false);\r\n        }\r\n    }\r\n\r\n    private createPlaceholder() {\r\n        // Get width and height of the component\r\n        const styles = getComputedStyle(this._elementRef.nativeElement);\r\n\r\n        // Create invisible div with the same dimensions\r\n        this._placeholder = this._document.createElement('div');\r\n        this._placeholder.style.display = 'none';\r\n        this._placeholder.style.width = this.button.width + 'px';\r\n        this._placeholder.style.height = styles.height;\r\n        this._placeholder.style.visibility = 'hidden';\r\n\r\n        // Add as a sibling\r\n        this._elementRef.nativeElement.parentNode.insertBefore(this._placeholder, this._elementRef.nativeElement);\r\n    }\r\n\r\n    private enablePlaceholder(enabled: boolean) {\r\n        this._placeholder.style.display = (enabled ? 'inline-block' : 'none');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ToolbarSearchComponent } from './toolbar-search.component';\r\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\r\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\r\n\r\nconst DECLARATIONS = [\r\n    ToolbarSearchComponent,\r\n    ToolbarSearchFieldDirective,\r\n    ToolbarSearchButtonDirective\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS,\r\n    providers: [],\r\n})\r\nexport class ToolbarSearchModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, ResponseContentType } from '@angular/http';\r\nimport { Observable ,  of ,  Observer } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AudioService {\r\n\r\n    private _audioBuffer: AudioBuffer;\r\n    private _audioBufferSource: AudioBufferSourceNode;\r\n    private _audioContext: AudioContext;\r\n    private _gainNode: GainNode;\r\n    private _analyserNode: AnalyserNode;\r\n\r\n    constructor(private _http: Http) { }\r\n\r\n    getAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\r\n        return Observable.create((observer: Observer<AudioMetadata>) => {\r\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\r\n\r\n                const filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\r\n                const extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\r\n                const blob = response.blob();\r\n                let description;\r\n\r\n                switch (extension) {\r\n                    case 'mp3':\r\n                        description = 'MPEG audio layer 3 file';\r\n                        break;\r\n\r\n                    case 'wma':\r\n                        description = 'Windows media audio file';\r\n                        break;\r\n\r\n                    case 'wav':\r\n                        description = 'WAVE audio file';\r\n                        break;\r\n\r\n                    case 'ogg':\r\n                        description = 'Ogg Vorbis file';\r\n                        break;\r\n\r\n                    case 'aac':\r\n                        description = 'Advanced audio coding file';\r\n                        break;\r\n\r\n                    case 'midi':\r\n                        description = 'Musical instrument digital interface file';\r\n                        break;\r\n\r\n                    default:\r\n                        description = 'Audio file';\r\n                        break;\r\n                }\r\n\r\n                observer.next({\r\n                    filename: filename,\r\n                    extension: extension,\r\n                    description: description,\r\n                    size: blob.size\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    getWaveformFromUrl(url: string): Observable<Float32Array[]> {\r\n\r\n        // if audio context is not support return a stream of empty data\r\n        if (!(<any>window).AudioContext) {\r\n            return of<Float32Array[]>([new Float32Array(0)]);\r\n        }\r\n\r\n        this._audioContext = new AudioContext();\r\n        this.createVolumeNode();\r\n        this.createAnalyserNode();\r\n\r\n        return Observable.create((observer: Observer<Float32Array[]>) => {\r\n\r\n            // load the media from the URL provided\r\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\r\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\r\n\r\n                    // create the buffer source\r\n                    this.createBufferSource(audioBuffer);\r\n\r\n                    let dataPoints: Float32Array[] = [];\r\n                    const channels = this._audioBuffer.numberOfChannels;\r\n\r\n                    // extract the data from each channel\r\n                    for (let channelIdx = 0; channelIdx < channels; channelIdx++) {\r\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\r\n                    }\r\n\r\n                    observer.next(dataPoints);\r\n                    observer.complete();\r\n\r\n                    // cleanup after ourselves\r\n                    dataPoints = null;\r\n                }, (error) => observer.error(error));\r\n            }, (error) => observer.error(error));\r\n        });\r\n    }\r\n\r\n    getWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\r\n\r\n        const waveform: WaveformPoint[] = [];\r\n        const duration = channels.length > 0 ? channels[0].length : 0;\r\n\r\n        // convert each channel data to a series of waveform points\r\n        for (let idx = 0; idx < duration; idx += skip) {\r\n\r\n            // get all the channel data for a specific point\r\n            const points = channels.map(channel => channel[idx]);\r\n\r\n            // find the minimum point and maximum points at each position across all channels\r\n            waveform.push({\r\n                min: points.reduce((previous, current) => current < previous ? current : previous),\r\n                max: points.reduce((previous, current) => current > previous ? current : previous)\r\n            });\r\n        }\r\n\r\n        return waveform;\r\n    }\r\n\r\n    private getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\r\n        return Observable.create((observer: Observer<AudioBuffer>) => {\r\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\r\n                observer.next(audioBuffer);\r\n                observer.complete();\r\n            }, (error) => observer.error(error));\r\n        });\r\n    }\r\n\r\n    private getOfflineAudioContext(): OfflineAudioContext {\r\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\r\n    }\r\n\r\n    private createBufferSource(audioBuffer: AudioBuffer): void {\r\n        this.disconnectSource();\r\n\r\n        this._audioBuffer = audioBuffer;\r\n        this._audioBufferSource = this._audioContext.createBufferSource();\r\n        this._audioBufferSource.buffer = this._audioBuffer;\r\n        this._audioBufferSource.connect(this._analyserNode);\r\n    }\r\n\r\n    private createVolumeNode(): void {\r\n        this._gainNode = this._audioContext.createGain();\r\n        this._gainNode.connect(this._audioContext.destination);\r\n    }\r\n\r\n    private createAnalyserNode(): void {\r\n        this._analyserNode = this._audioContext.createAnalyser();\r\n        this._analyserNode.connect(this._gainNode);\r\n    }\r\n\r\n    private disconnectSource(): void {\r\n        if (this._audioBufferSource) {\r\n            this._audioBufferSource.disconnect();\r\n        }\r\n    }\r\n}\r\n\r\nexport interface WaveformPoint {\r\n    min: number;\r\n    max: number;\r\n}\r\n\r\nexport interface AudioMetadata {\r\n    filename: string;\r\n    extension: string;\r\n    description: string;\r\n    size: number;\r\n}","import { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AudioService } from './audio.service';\r\n\r\n@NgModule({\r\n    imports: [ HttpModule ],\r\n    providers: [AudioService]\r\n})\r\nexport class AudioServiceModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { concat, fromEvent, Observable, Observer } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FrameExtractionService {\r\n\r\n    private createVideoPlayer(source: string): HTMLVideoElement {\r\n        let videoPlayer = document.createElement('video');\r\n        videoPlayer.preload = 'auto';\r\n        videoPlayer.src = source;\r\n        return videoPlayer;\r\n    }\r\n\r\n    private createCanvas(width: number, height: number): HTMLCanvasElement {\r\n        let canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        return canvas;\r\n    }\r\n\r\n    private goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<Event> {\r\n        videoPlayer.currentTime = time;\r\n        return fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\r\n    }\r\n\r\n    private getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\r\n\r\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\r\n\r\n            // go to specified frame\r\n            let subscription = this.goToFrame(videoPlayer, time).subscribe(() => {\r\n                // create image from current frame\r\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\r\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\r\n                observer.complete();\r\n                subscription.unsubscribe();\r\n            });\r\n        });\r\n    }\r\n\r\n    getFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\r\n\r\n        // create required elements\r\n        let videoPlayer = this.createVideoPlayer(source);\r\n        let canvas = this.createCanvas(width, height);\r\n\r\n        let frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\r\n\r\n        // ensure we release memory after we are finished\r\n        frameSubscription.subscribe(null, null, () => {\r\n            videoPlayer = null;\r\n            canvas = null;\r\n        });\r\n\r\n        return frameSubscription;\r\n    }\r\n\r\n    getFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\r\n\r\n        // create required elements\r\n        let videoPlayer = this.createVideoPlayer(source);\r\n        let canvas = this.createCanvas(width, height);\r\n\r\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\r\n\r\n            fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\r\n\r\n                // calculate the frames required\r\n                let frames = [];\r\n\r\n                for (let idx = start; idx < end; idx += skip) {\r\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\r\n                }\r\n\r\n                concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\r\n                    videoPlayer = null;\r\n                    canvas = null;\r\n                    observer.complete();\r\n                });\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport interface ExtractedFrame {\r\n    image: string;\r\n    width: number;\r\n    height: number;\r\n    time: number;\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { FrameExtractionService } from './frame-extraction.service';\r\n\r\n@NgModule({\r\n    providers: [FrameExtractionService],\r\n})\r\nexport class FrameExtractionModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject ,  Observable ,  from ,  Observer ,  Subject } from 'rxjs';\r\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/index';\r\nimport { MediaPlayerType } from './media-player.component';\r\n\r\n@Injectable()\r\nexport class MediaPlayerService {\r\n\r\n    source: string;\r\n    type: MediaPlayerType = 'video';\r\n    loaded: boolean = false;\r\n\r\n    /*\r\n        Create observables for media player events\r\n    */\r\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    abortEvent: Subject<void> = new Subject<void>();\r\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    durationChangeEvent: Subject<number> = new Subject<number>();\r\n    endedEvent: Subject<void> = new Subject<void>();\r\n    errorEvent: Subject<any> = new Subject<any>();\r\n    loadedDataEvent: Subject<any> = new Subject<any>();\r\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\r\n    loadStartEvent: Subject<void> = new Subject<void>();\r\n    pauseEvent: Subject<void> = new Subject<void>();\r\n    playEvent: Subject<void> = new Subject<void>();\r\n    playingEvent: Subject<boolean> = new Subject<boolean>();\r\n    rateChangeEvent: Subject<number> = new Subject<number>();\r\n    seekedEvent: Subject<number> = new Subject<number>();\r\n    seekingEvent: Subject<number> = new Subject<number>();\r\n    stalledEvent: Subject<void> = new Subject<void>();\r\n    suspendEvent: Subject<void> = new Subject<void>();\r\n    timeUpdateEvent: Subject<number> = new Subject<number>();\r\n    volumeChangeEvent: Subject<number> = new Subject<number>();\r\n    waitingEvent: Subject<void> = new Subject<void>();\r\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\r\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\r\n\r\n        // repeat until the whole video has fully loaded\r\n        let interval = setInterval(() => {\r\n\r\n            let buffered = this._mediaPlayer.buffered as TimeRanges;\r\n            observer.next(buffered);\r\n\r\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\r\n                observer.complete();\r\n                clearInterval(interval);\r\n            }\r\n        }, 1000);\r\n    });\r\n\r\n    private _mediaPlayer: HTMLMediaElement;\r\n    private _hostElement: HTMLElement;\r\n    private _fullscreen: boolean = false;\r\n    private _quietMode: boolean;\r\n\r\n    constructor(private _frameExtractionService: FrameExtractionService) {}\r\n\r\n    /*\r\n        Create all the getters and setters the can be used by media player extensions\r\n    */\r\n    get mediaPlayer(): HTMLMediaElement {\r\n        return this._mediaPlayer;\r\n    }\r\n\r\n    get quietMode(): boolean {\r\n        return this._quietMode;\r\n    }\r\n\r\n    set quietMode(value: boolean) {\r\n\r\n        // quiet mode cannot be enabled on audio player\r\n        if (this.type === 'audio') {\r\n            value = false;\r\n        }\r\n\r\n        this._quietMode = value;\r\n        this.quietModeEvent.next(value);\r\n    }\r\n\r\n    get mediaPlayerWidth(): number {\r\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\r\n    }\r\n\r\n    get mediaPlayerHeight(): number {\r\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\r\n    }\r\n\r\n    get audioTracks(): AudioTrackList {\r\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\r\n    }\r\n\r\n    get autoplay(): boolean {\r\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\r\n    }\r\n    set autoplay(value: boolean) {\r\n        this._mediaPlayer.autoplay = value;\r\n    }\r\n\r\n    get buffered(): TimeRanges {\r\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\r\n    }\r\n\r\n    get crossOrigin(): string {\r\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\r\n    }\r\n    set crossOrigin(value: string) {\r\n        this._mediaPlayer.crossOrigin = value;\r\n    }\r\n\r\n    get currentSrc(): string {\r\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\r\n    }\r\n\r\n    get currentTime(): number {\r\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\r\n    }\r\n    set currentTime(value: number) {\r\n        this._mediaPlayer.currentTime = value;\r\n    }\r\n\r\n    get defaultMuted(): boolean {\r\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\r\n    }\r\n    set defaultMuted(value: boolean) {\r\n        this._mediaPlayer.defaultMuted = value;\r\n    }\r\n\r\n    get defaultPlaybackRate(): number {\r\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\r\n    }\r\n    set defaultPlaybackRate(value: number) {\r\n        this._mediaPlayer.defaultPlaybackRate = value;\r\n    }\r\n\r\n    get duration(): number {\r\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\r\n    }\r\n\r\n    get ended(): boolean {\r\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\r\n    }\r\n\r\n    get loop(): boolean {\r\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\r\n    }\r\n    set loop(value: boolean) {\r\n        this._mediaPlayer.loop = value;\r\n    }\r\n\r\n    get muted(): boolean {\r\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\r\n    }\r\n    set muted(value: boolean) {\r\n        this._mediaPlayer.muted = value;\r\n    }\r\n\r\n    get networkState(): number {\r\n        return this._mediaPlayer.networkState;\r\n    }\r\n\r\n    get paused(): boolean {\r\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\r\n    }\r\n\r\n    get playbackRate(): number {\r\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\r\n    }\r\n    set playbackRate(value: number) {\r\n        this._mediaPlayer.playbackRate = value;\r\n    }\r\n\r\n    get played(): TimeRanges {\r\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\r\n    }\r\n\r\n    get preload(): string {\r\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\r\n    }\r\n    set preload(value: string) {\r\n        this._mediaPlayer.preload = value;\r\n    }\r\n\r\n    get readyState(): number {\r\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\r\n    }\r\n\r\n    get seekable(): TimeRanges {\r\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\r\n    }\r\n\r\n    get seeking(): boolean {\r\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\r\n    }\r\n\r\n    get src(): string {\r\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\r\n    }\r\n    set src(value: string) {\r\n        this._mediaPlayer.src = value;\r\n    }\r\n\r\n    get textTracks(): TextTrackList {\r\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\r\n    }\r\n\r\n    get videoTracks(): VideoTrackList {\r\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\r\n    }\r\n\r\n    get volume(): number {\r\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\r\n    }\r\n    set volume(value: number) {\r\n        this._mediaPlayer.volume = value;\r\n    }\r\n\r\n    get fullscreen(): boolean {\r\n        return this._mediaPlayer ? this._fullscreen : false;\r\n    }\r\n    set fullscreen(value: boolean) {\r\n        this._fullscreen = value;\r\n        this.fullscreenEvent.next(value);\r\n    }\r\n\r\n    setMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\r\n        this._hostElement = hostElement;\r\n        this._mediaPlayer = mediaPlayer;\r\n\r\n        this.initEvent.next(true);\r\n    }\r\n\r\n    /**\r\n     * Toggle playing state\r\n     */\r\n    togglePlay(): void {\r\n\r\n        // prevent any action is not loaded\r\n        if (this.loaded === false) {\r\n            return;\r\n        }\r\n\r\n        if (this.paused) {\r\n            this.play();\r\n        } else {\r\n            this.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts playing the audio/video\r\n     */\r\n    play(): void {\r\n        this._mediaPlayer.play();\r\n    }\r\n\r\n    /**\r\n     * Pauses the currently playing audio/video\r\n     */\r\n    pause(): void {\r\n        this._mediaPlayer.pause();\r\n    }\r\n\r\n    /**\r\n     * Re-loads the audio/video element\r\n     */\r\n    load(): void {\r\n        this._mediaPlayer.load();\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser can play the specified audio/video type\r\n     */\r\n    canPlayType(type: string): string {\r\n        return this._mediaPlayer.canPlayType(type);\r\n    }\r\n\r\n    /**\r\n     * Adds a new text track to the audio/video\r\n     */\r\n    addTextTrack(kind: string, label: string, language: string): TextTrack {\r\n        return this._mediaPlayer.addTextTrack(kind, label, language);\r\n    }\r\n\r\n    /**\r\n     * Attempt to display media in fullscreen mode\r\n     */\r\n    requestFullscreen(): void {\r\n\r\n        if (this._hostElement.requestFullscreen) {\r\n            this._hostElement.requestFullscreen();\r\n        } else if (this._hostElement.webkitRequestFullscreen) {\r\n            this._hostElement.webkitRequestFullscreen();\r\n        } else if ((<any>this._hostElement).msRequestFullscreen) {\r\n            (<any>this._hostElement).msRequestFullscreen();\r\n        } else if ((<any>this._hostElement).mozRequestFullScreen) {\r\n            (<any>this._hostElement).mozRequestFullScreen();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exit full screen mode\r\n     */\r\n    exitFullscreen(): void {\r\n\r\n        if ((<any>this._hostElement).exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        } else if ((<any>document).msExitFullscreen) {\r\n            (<any>document).msExitFullscreen();\r\n        } else if ((<any>document).mozCancelFullScreen) {\r\n            (<any>document).mozCancelFullScreen();\r\n        }\r\n    }\r\n\r\n    fullscreenChange(event: Event) {\r\n        this.fullscreen = (<any>document).fullscreen || document.webkitIsFullScreen || (<any>document).mozFullScreen || (<any>document).msFullscreenElement !== null && (<any>document).msFullscreenElement !== undefined;\r\n        this.fullscreenEvent.next(this.fullscreen);\r\n    }\r\n\r\n    /**\r\n     * Toggle Fullscreen State\r\n     */\r\n    toggleFullscreen(): void {\r\n        if (this.fullscreen) {\r\n            this.exitFullscreen();\r\n        } else {\r\n            this.requestFullscreen();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extract the frames from the video\r\n     */\r\n    getFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\r\n\r\n        if (this.type === 'video') {\r\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\r\n        }\r\n\r\n        return from([]);\r\n    }\r\n}","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Observable ,  fromEvent ,  of ,  Subject } from 'rxjs';\r\nimport { debounceTime, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { AudioMetadata, AudioService } from '../../services/audio/index';\r\nimport { MediaPlayerService } from './media-player.service';\r\n\r\n@Component({\r\n    selector: 'ux-media-player',\r\n    template: `<div class=\"video-player-container\" *ngIf=\"type === 'video'\">\r\n\r\n    <video class=\"video-player\"\r\n        #player\r\n        [src]=\"source\"\r\n        (abort)=\"mediaPlayerService.abortEvent.next()\"\r\n        (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\r\n        (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\"\r\n        (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\"\r\n        (ended)=\"mediaPlayerService.endedEvent.next()\"\r\n        (error)=\"mediaPlayerService.errorEvent.next($event)\"\r\n        (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\"\r\n        (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\r\n        (loadstart)=\"mediaPlayerService.loadStartEvent.next()\"\r\n        (pause)=\"mediaPlayerService.pauseEvent.next()\"\r\n        (play)=\"mediaPlayerService.playEvent.next()\"\r\n        (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\r\n        (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\"\r\n        (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\"\r\n        (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\r\n        (stalled)=\"mediaPlayerService.stalledEvent.next()\"\r\n        (suspend)=\"mediaPlayerService.suspendEvent.next()\"\r\n        (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\r\n        (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\"\r\n        (waiting)=\"mediaPlayerService.waitingEvent.next()\"\r\n        (click)=\"mediaPlayerService.mediaClickEvent.next($event)\">\r\n    </video>\r\n\r\n    <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\r\n        <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\r\n            <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\r\n            <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\r\n        </svg>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<div class=\"audio-player\" *ngIf=\"type === 'audio'\">\r\n\r\n    <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\r\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n            <g transform=\"translate(-98.000000, -458.000000)\">\r\n                <g transform=\"translate(98.000000, 458.000000)\">\r\n                    <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\r\n                    <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\r\n                    <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\r\n                    <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\r\n                        stroke=\"#60798D\"></path>\r\n                    <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\r\n                    <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\r\n                </g>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n\r\n    <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\r\n    <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\r\n    <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\r\n\r\n    <audio #player\r\n        [src]=\"source\"\r\n        (abort)=\"mediaPlayerService.abortEvent.next()\"\r\n        (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\r\n        (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\"\r\n        (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\"\r\n        (ended)=\"mediaPlayerService.endedEvent.next()\"\r\n        (error)=\"mediaPlayerService.errorEvent.next($event)\"\r\n        (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\"\r\n        (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\r\n        (loadstart)=\"mediaPlayerService.loadStartEvent.next()\"\r\n        (pause)=\"mediaPlayerService.pauseEvent.next()\"\r\n        (play)=\"mediaPlayerService.playEvent.next()\"\r\n        (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\r\n        (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\"\r\n        (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\"\r\n        (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\r\n        (stalled)=\"mediaPlayerService.stalledEvent.next()\"\r\n        (suspend)=\"mediaPlayerService.suspendEvent.next()\"\r\n        (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\r\n        (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\"\r\n        (waiting)=\"mediaPlayerService.waitingEvent.next()\"\r\n        (click)=\"mediaPlayerService.mediaClickEvent.next($event)\">\r\n    </audio>\r\n</div>\r\n\r\n<div class=\"control-bar\">\r\n    <ux-media-player-timeline></ux-media-player-timeline>\r\n    <ux-media-player-controls></ux-media-player-controls>\r\n</div>`,\r\n    providers: [MediaPlayerService],\r\n    host: {\r\n        'tabindex': '0',\r\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\r\n        '[class.standard]': '!mediaPlayerService.fullscreen',\r\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\r\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\r\n        '[class.hover]': 'hovering',\r\n        '[class.video]': 'type === \"video\"',\r\n        '[class.audio]': 'type === \"audio\"',\r\n        '(mouseenter)': 'hovering = true',\r\n        '(mouseleave)': 'hovering = false',\r\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\r\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\r\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\r\n    }\r\n})\r\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @ViewChild('player') private _playerRef: ElementRef;\r\n\r\n    hovering: boolean = false;\r\n    audioMetadata: Observable<AudioMetadata>;\r\n\r\n    get source(): string {\r\n        return this.mediaPlayerService.source;\r\n    }\r\n\r\n    @Input()\r\n    set source(value: string) {\r\n        this.mediaPlayerService.source = value;\r\n    }\r\n\r\n    get type(): MediaPlayerType {\r\n        return this.mediaPlayerService.type;\r\n    }\r\n\r\n    @Input()\r\n    set type(value: MediaPlayerType) {\r\n        this.mediaPlayerService.type = value;\r\n    }\r\n\r\n    get quietMode(): boolean {\r\n        return this.mediaPlayerService.quietMode;\r\n    }\r\n\r\n    @Input()\r\n    set quietMode(value: boolean) {\r\n        this.mediaPlayerService.quietMode = value;\r\n    }\r\n\r\n    private _onDestroy = new Subject<void>();\r\n\r\n    constructor(public mediaPlayerService: MediaPlayerService, private _audioService: AudioService, private _elementRef: ElementRef) {\r\n\r\n        // show controls when hovering and in quiet mode\r\n        fromEvent(this._elementRef.nativeElement, 'mousemove').pipe(\r\n            switchMap((event: MouseEvent) => {\r\n                this.hovering = true;\r\n                return of(event);\r\n            }),\r\n            debounceTime(2000),\r\n            takeUntil(this._onDestroy)\r\n        ).subscribe(() => this.hovering = false);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\r\n\r\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\r\n        this.mediaPlayerService.playingEvent.pipe(takeUntil(this._onDestroy)).subscribe(() => this.mediaPlayerService.playing.next(true));\r\n        this.mediaPlayerService.pauseEvent.pipe(takeUntil(this._onDestroy)).subscribe(() => this.mediaPlayerService.playing.next(false));\r\n        this.mediaPlayerService.mediaClickEvent.pipe(takeUntil(this._onDestroy)).subscribe(() => this.mediaPlayerService.togglePlay());\r\n        this.mediaPlayerService.loadedMetadataEvent.pipe(takeUntil(this._onDestroy)).subscribe(() => this.mediaPlayerService.loaded = true);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n    }\r\n}\r\n\r\nexport type MediaPlayerType = 'video' | 'audio';\r\n\r\nexport interface MediaPlayerBuffer {\r\n    start: number;\r\n    end: number;\r\n}","import { Directive } from '@angular/core';\r\nimport { MediaPlayerService } from '../media-player.service';\r\n\r\n@Directive({\r\n    selector: '[mediaPlayerBaseExtension]'\r\n})\r\nexport class MediaPlayerBaseExtensionDirective {\r\n    constructor(public mediaPlayerService: MediaPlayerService) { }\r\n}","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { fromEvent ,  Subject } from 'rxjs';\r\nimport { switchMap, takeUntil } from 'rxjs/operators';\r\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\r\n\r\n\r\n@Component({\r\n    selector: 'ux-media-player-timeline',\r\n    template: `<p class=\"current-time\">{{ current | duration }}</p>\r\n\r\n<div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\r\n    (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\r\n\r\n    <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\r\n\r\n    <div class=\"media-progress-bar\" [style.width.%]=\"position\">\r\n        <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\r\n            (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\r\n    </div>\r\n\r\n    <div class=\"scrub-handle\"\r\n         [class.scrub-handle-hidden]=\"!scrub.visible\"\r\n         [style.left.px]=\"scrub.position\"\r\n         [uxTooltip]=\"popTemplate\"\r\n         placement=\"top\"\r\n         [showTriggers]=\"[]\"\r\n         [hideTriggers]=\"[]\"\r\n         #pop=\"ux-tooltip\"\r\n         [tooltipDelay]=\"100\"\r\n         [tooltipDisabled]=\"duration === 0\"></div>\r\n</div>\r\n\r\n<p class=\"duration-time\">{{ duration | duration }}</p>\r\n\r\n<ng-template #popTemplate>\r\n    <span>{{ scrub.time | duration }}</span>\r\n</ng-template>`,\r\n    host: {\r\n        '(document:mouseup)': 'mouseDown = false',\r\n        '[class.quiet]': 'quietMode || fullscreen'\r\n    }\r\n})\r\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @ViewChild('progressThumb') thumb: ElementRef;\r\n    @ViewChild('timeline') timelineRef: ElementRef;\r\n\r\n    current: number = 0;\r\n    position: number = 0;\r\n    duration: number = 0;\r\n    buffered: MediaPlayerBuffered[] = [];\r\n    mouseDown: boolean = false;\r\n    quietMode: boolean = false;\r\n    fullscreen: boolean = false;\r\n    scrub = { visible: false, position: 0, time: 0 };\r\n\r\n    private _onDestroy = new Subject<void>();\r\n\r\n    ngOnInit(): void {\r\n\r\n        // watch for changes to the current time\r\n        this.mediaPlayerService.durationChangeEvent.pipe(takeUntil(this._onDestroy)).subscribe(duration => this.duration = duration);\r\n        this.mediaPlayerService.quietModeEvent.pipe(takeUntil(this._onDestroy)).subscribe(quietMode => this.quietMode = quietMode);\r\n        this.mediaPlayerService.fullscreenEvent.pipe(takeUntil(this._onDestroy)).subscribe(fullscreen => {\r\n            this.fullscreen = fullscreen;\r\n            this.scrub.position = 0;\r\n        });\r\n\r\n        this.mediaPlayerService.timeUpdateEvent.pipe(takeUntil(this._onDestroy)).subscribe(current => {\r\n            this.current = current;\r\n            this.position = (this.current / this.duration) * 100;\r\n        });\r\n\r\n        this.mediaPlayerService.progressEvent.pipe(takeUntil(this._onDestroy)).subscribe((buffered: TimeRanges) => {\r\n            this.buffered = [];\r\n\r\n            for (let idx = 0; idx < buffered.length; idx++) {\r\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\r\n            }\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        const mousedown$ = fromEvent(this.thumb.nativeElement, 'mousedown');\r\n        const mousemove$ = fromEvent(document, 'mousemove');\r\n        const mouseup$ = fromEvent(document, 'mouseup');\r\n\r\n        mousedown$.pipe(\r\n            switchMap(() => mousemove$.pipe(takeUntil(mouseup$))),\r\n            takeUntil(this._onDestroy)\r\n        ).subscribe(() => this.scrub.visible = false);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n    }\r\n\r\n    updateScrub(event?: MouseEvent): void {\r\n\r\n        const target = event.target as HTMLElement;\r\n\r\n        if (target.classList.contains('media-progress-bar-thumb')) {\r\n            return;\r\n        }\r\n\r\n        const timeline = this.timelineRef.nativeElement as HTMLDivElement;\r\n        const bounds = timeline.getBoundingClientRect();\r\n\r\n        this.scrub.position = event.offsetX;\r\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\r\n\r\n        if (this.mouseDown) {\r\n            this.mediaPlayerService.pause();\r\n            this.mediaPlayerService.currentTime = this.scrub.time;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface MediaPlayerBuffered {\r\n    start: number;\r\n    end: number;\r\n}\r\n","import { Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { fromEvent ,  timer ,  Subject } from 'rxjs';\r\nimport { debounceTime, filter, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\r\n\r\n@Component({\r\n    selector: 'ux-media-player-controls',\r\n    template: `<div class=\"volume-container\">\r\n\r\n    <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\r\n        <div class=\"volume-slider-icon\" #volumeIcon>\r\n            <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [uxTooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\r\n        </div>\r\n        \r\n        <div class=\"volume-slider-node\">\r\n            <div class=\"volume-slider\" #volumeSlider>\r\n                <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\r\n                <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"spacer\"></div>\r\n\r\n<svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\r\n    <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\r\n    <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\r\n</svg>\r\n\r\n<svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\r\n    <polygon points=\"0.4,0 0.4,64 44.6,32\" />\r\n</svg>\r\n\r\n<svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\r\n    <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\r\n    <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\r\n</svg>\r\n\r\n<svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\r\n    <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\r\n    <polygon points=\"0,64 0,0 44.1,32 \" />\r\n</svg>\r\n\r\n<div class=\"spacer\"></div>\r\n\r\n<span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\r\n    (click)=\"setFullscreen()\"></span>\r\n\r\n<ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>`,\r\n    host: {\r\n        '[class.quiet]': 'quietMode || fullscreen'\r\n    }\r\n})\r\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, OnDestroy {\r\n\r\n    playing: boolean;\r\n    quietMode: boolean;\r\n    fullscreen: boolean = false;\r\n    volumeActive: boolean = false;\r\n    volumeDragging: boolean = false;\r\n\r\n    @ViewChild('volumeIcon') volumeIcon: ElementRef;\r\n    @ViewChild('volumeSlider') volumeSlider: ElementRef;\r\n    @ViewChild('volumeContainer') volumeContainer: ElementRef;\r\n\r\n    private _volume: number = 50;\r\n    private _previousVolume = 50;\r\n    private _onDestroy = new Subject<void>();\r\n\r\n    get volume(): number {\r\n        return this._volume;\r\n    }\r\n\r\n    set volume(value: number) {\r\n\r\n        if (value === 0 && this._volume !== 0) {\r\n            this._previousVolume = this._volume;\r\n        }\r\n\r\n        this._volume = Math.min(Math.max(value, 0), 100);\r\n        this.mediaPlayerService.volume = this._volume / 100;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.mediaPlayerService.playEvent.pipe(takeUntil(this._onDestroy)).subscribe(_ => this.playing = true);\r\n        this.mediaPlayerService.pauseEvent.pipe(takeUntil(this._onDestroy)).subscribe(_ => this.playing = false);\r\n        this.mediaPlayerService.quietModeEvent.pipe(takeUntil(this._onDestroy)).subscribe(quietMode => this.quietMode = quietMode);\r\n        this.mediaPlayerService.volumeChangeEvent.pipe(takeUntil(this._onDestroy)).subscribe(volume => this.volume = volume * 100);\r\n        this.mediaPlayerService.initEvent.pipe(debounceTime(1), filter(init => init === true), takeUntil(this._onDestroy)).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\r\n        this.mediaPlayerService.fullscreenEvent.pipe(takeUntil(this._onDestroy)).subscribe(fullscreen => this.fullscreen = fullscreen);\r\n\r\n        const mouseenter$ = fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\r\n        const mouseenterContainer$ = fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\r\n        const mouseleaveContainer$ = fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\r\n\r\n        mouseenter$.pipe(takeUntil(this._onDestroy)).subscribe(() => this.volumeActive = true);\r\n        mouseleaveContainer$.pipe(\r\n            switchMap(() => timer(1500).pipe(takeUntil(mouseenterContainer$))),\r\n            takeUntil(this._onDestroy)\r\n        ).subscribe(() => this.volumeActive = false);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n    }\r\n\r\n    toggleMute(): void {\r\n        if (this.volume === 0) {\r\n            this.volume = this._previousVolume;\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n    }\r\n\r\n    togglePlay(): void {\r\n        if (this.playing) {\r\n            this.mediaPlayerService.pause();\r\n        } else {\r\n            this.mediaPlayerService.play();\r\n        }\r\n    }\r\n\r\n    setFullscreen(): void {\r\n        this.mediaPlayerService.toggleFullscreen();\r\n    }\r\n\r\n    goToStart(): void {\r\n        this.mediaPlayerService.currentTime = 0;\r\n    }\r\n\r\n    goToEnd(): void {\r\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\r\n    }\r\n\r\n    dragStart(event: MouseEvent): void {\r\n        event.preventDefault();\r\n        this.volumeDragging = true;\r\n\r\n        const thumb = event.target as HTMLDivElement;\r\n        thumb.focus();\r\n    }\r\n\r\n    @HostListener('document:mousemove', ['$event'])\r\n    dragMove(event: MouseEvent): void {\r\n        if (!this.volumeDragging) {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        const slider = this.volumeSlider.nativeElement as HTMLDivElement;\r\n        const bounds = slider.getBoundingClientRect();\r\n\r\n        const x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\r\n\r\n        // convert to a percentage\r\n        this.volume = (x / bounds.width) * 100;\r\n    }\r\n\r\n    @HostListener('document:mouseup')\r\n    dragEnd(): void {\r\n        this.volumeDragging = false;\r\n    }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'duration'\r\n})\r\nexport class DurationPipe implements PipeTransform {\r\n    \r\n    transform(seconds: number): any {\r\n\r\n        let minutes = Math.floor(seconds / 60);\r\n        let hours = Math.floor(minutes / 60);\r\n        let days = Math.floor(hours / 24);\r\n\r\n        hours = hours - (days * 24);\r\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\r\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\r\n\r\n        if (hours > 0) {\r\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\r\n        } else {\r\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\r\n        }\r\n    }\r\n\r\n    pad(value: number): string {\r\n        if (value < 10) {\r\n            return `0${value}`;\r\n        }\r\n\r\n        return value.toString();\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { DurationPipe } from './duration.pipe';\r\n\r\n@NgModule({\r\n    exports: [DurationPipe],\r\n    declarations: [DurationPipe]\r\n})\r\nexport class DurationPipeModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'fileSize'\r\n})\r\nexport class FileSizePipe implements PipeTransform {\r\n\r\n    transform(value: number): any {\r\n\r\n        // allow for async values\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        \r\n        let units = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n\r\n        // calculate the which unit bracket the values should be a part of\r\n        let idx = Math.floor(Math.log(value) / Math.log(1024));\r\n        let formattedValue = value / Math.pow(1024, idx);\r\n        \r\n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { FileSizePipe } from './file-size.pipe';\r\n\r\n@NgModule({\r\n    exports: [FileSizePipe],\r\n    declarations: [FileSizePipe]\r\n})\r\nexport class FileSizePipeModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MediaPlayerComponent } from './media-player.component';\r\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\r\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\r\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\r\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\r\nimport { AudioServiceModule } from '../../services/audio/index';\r\nimport { DurationPipeModule } from '../../pipes/duration/index';\r\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\r\nimport { MediaPlayerService } from './media-player.service';\r\nimport { TooltipModule } from '../tooltip/index';\r\n\r\nconst DECLARATIONS = [\r\n    MediaPlayerComponent,\r\n    MediaPlayerTimelineExtensionComponent,\r\n    MediaPlayerBaseExtensionDirective,\r\n    MediaPlayerControlsExtensionComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FrameExtractionModule,\r\n        TooltipModule,\r\n        AudioServiceModule,\r\n        DurationPipeModule,\r\n        FileSizePipeModule\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS,\r\n    providers: [MediaPlayerService]\r\n})\r\nexport class MediaPlayerModule { }\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({ \r\n    selector: '[uxVirtualScrollLoading]' \r\n})\r\nexport class VirtualScrollLoadingDirective { }","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[uxVirtualScrollLoadButton]' \r\n})\r\nexport class VirtualScrollLoadButtonDirective { }","import { Directive } from '@angular/core';\r\n\r\n@Directive({ \r\n    selector: '[uxVirtualScrollCell]' \r\n})\r\nexport class VirtualScrollCellDirective {\r\n\r\n}","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { ResizeService } from '../../directives/resize/index';\r\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\r\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\r\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\r\nimport { BehaviorSubject ,  Observable ,  Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'ux-virtual-scroll',\r\n    template: `<div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\r\n<div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\r\n\r\n    <!-- Virtually Render Cells -->\r\n    <ng-container *ngFor=\"let cell of cells | async\">\r\n        <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\r\n    </ng-container>\r\n\r\n    <!-- Loading Indicator -->\r\n    <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\r\n\r\n    <!-- Loading Button -->\r\n    <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\r\n        <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\r\n    </div>\r\n    \r\n</div>`\r\n})\r\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\r\n\r\n    @Input() collection: Observable<any[]> = Observable.create();\r\n    @Input() cellHeight: number;\r\n    @Input() loadOnScroll: boolean = true;\r\n\r\n    @Output() loading: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n    @ContentChild(VirtualScrollCellDirective, { read: TemplateRef }) cellTemplate: TemplateRef<any>;\r\n    @ContentChild(VirtualScrollLoadingDirective, { read: TemplateRef }) loadingIndicatorTemplate: TemplateRef<any>;\r\n    @ContentChild(VirtualScrollLoadButtonDirective, { read: TemplateRef }) loadButtonTemplate: TemplateRef<any>;\r\n\r\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n    scrollTop: number = 0;\r\n    isLoading: boolean = false;\r\n    pageNumber: number = 0;\r\n    data: any[] = [];\r\n    loadingComplete: boolean = false;\r\n\r\n    private _subscription: Subscription;\r\n    private _height: number;\r\n\r\n    constructor(private _elementRef: ElementRef, resizeService: ResizeService) {\r\n\r\n        // watch for any future changes to size\r\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => this._height = event.height);\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        if (!this.cellHeight) {\r\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\r\n        }\r\n\r\n        // subscribe to the collection\r\n        this.setupObservable();\r\n\r\n        // load the first page of data\r\n        this.loadNextPage();\r\n    }\r\n\r\n    ngAfterContentInit(): void {\r\n        // re-render cells now that we can display any loading indicator or loading button\r\n        this.renderCells();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\r\n            this.setupObservable();\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    setupObservable(): void {\r\n\r\n        // if there is a current subscription, unsubscribe\r\n        if (this._subscription && this._subscription.unsubscribe) {\r\n            this._subscription.unsubscribe();\r\n        }\r\n\r\n        this._subscription = this.collection.subscribe(collection => {\r\n            this.data.push(...collection);\r\n            this.renderCells();\r\n            this.isLoading = false;\r\n        }, null, () => {\r\n            this.loadingComplete = true;\r\n        });\r\n    }\r\n\r\n    @HostListener('scroll') renderCells(): void {\r\n        this.cells.next(this.getVisibleCells());\r\n\r\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\r\n            const remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\r\n\r\n            // if the current cells take up less than the height of the component then load the next page\r\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\r\n                this.loadNextPage();\r\n            }\r\n        }\r\n    }\r\n\r\n    getVisibleCells(): any[] {\r\n\r\n        // store the initial element height\r\n        if (!this._height) {\r\n            this._height = this._elementRef.nativeElement.offsetHeight;\r\n        }\r\n\r\n        // perform some calculations\r\n        const scrollTop = this._elementRef.nativeElement.scrollTop;\r\n        const startCell = Math.floor(scrollTop / this.cellHeight);\r\n        const endCell = Math.ceil(this._height / this.cellHeight) + 1;\r\n\r\n        // update the scroll position\r\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\r\n\r\n        // return a sublist of items visible on the screen\r\n        return this.data.slice(startCell, startCell + endCell);\r\n    }\r\n\r\n    getTotalHeight(): number {\r\n        return this.cellHeight * this.data.length;\r\n    }\r\n\r\n    loadNextPage(): void {\r\n        this.isLoading = true;\r\n        this.loading.next(this.pageNumber);\r\n        this.pageNumber++;\r\n    }\r\n\r\n    reset(): void {\r\n\r\n        // reset all values\r\n        this.scrollTop = 0;\r\n        this.data = [];\r\n        this._height = undefined;\r\n        this.pageNumber = 0;\r\n        this.loadingComplete = false;\r\n\r\n        // set scroll position\r\n        this._elementRef.nativeElement.scrollTop = 0;\r\n\r\n        // clear the current cells\r\n        this.renderCells();\r\n\r\n        // reload first page\r\n        this.loadNextPage();\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { VirtualScrollComponent } from './virtual-scroll.component';\r\nimport { ResizeModule } from '../../directives/resize/index';\r\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\r\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\r\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\r\n\r\nconst DECLARATIONS = [\r\n    VirtualScrollComponent,\r\n    VirtualScrollLoadingDirective,\r\n    VirtualScrollLoadButtonDirective,\r\n    VirtualScrollCellDirective\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ResizeModule\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS\r\n})\r\nexport class VirtualScrollModule { }\r\n","import { AfterViewInit, Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[uxAutoGrow]'\r\n})\r\nexport class AutoGrowDirective implements AfterViewInit {\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\r\n    // ensure this is a textarea or else throw error\r\n    if (_elementRef.nativeElement.tagName.toLowerCase() !== 'textarea') {\r\n      throw new Error('uxAutoGrow directive can only be used on <textarea> elements.');\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.update();\r\n  }\r\n\r\n  @HostListener('input')\r\n  update(): void {\r\n\r\n    // perform sizing\r\n    this._renderer.setStyle(this._elementRef.nativeElement, 'overflowY', 'hidden');\r\n    this._renderer.setStyle(this._elementRef.nativeElement, 'height', 'auto');\r\n\r\n    // get the new total height and element height\r\n    const { scrollHeight } = this._elementRef.nativeElement;\r\n    const { maxHeight } = getComputedStyle(this._elementRef.nativeElement);\r\n\r\n    // determine what the maximum allowed height is\r\n    const maximum = !isNaN(parseFloat(maxHeight)) ? parseFloat(maxHeight) : Infinity;\r\n\r\n    // if there is a max height specifed we want to show the scrollbars\r\n    if (maximum < scrollHeight) {\r\n      this._renderer.setStyle(this._elementRef.nativeElement, 'overflowY', 'auto');\r\n      this._renderer.setStyle(this._elementRef.nativeElement, 'height', maximum + 'px');\r\n    } else {\r\n      this._renderer.setStyle(this._elementRef.nativeElement, 'height', scrollHeight + 'px');\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { AutoGrowDirective } from './auto-grow.directive';\r\n\r\n@NgModule({\r\n    exports: [AutoGrowDirective],\r\n    declarations: [AutoGrowDirective]\r\n})\r\nexport class AutoGrowModule { }\r\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[uxFixedHeaderTable]'\r\n})\r\nexport class FixedHeaderTableDirective implements OnInit {\r\n\r\n  @Input() tableHeight: number | string;\r\n  @Output() tablePaging: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  private _tableHead: HTMLElement;\r\n  private _tableBody: HTMLElement;\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // add class to the table\r\n    this._renderer.addClass(this._elementRef.nativeElement, 'ux-fixed-header-table');\r\n\r\n    // locate the important elements\r\n    this._tableHead = this._elementRef.nativeElement.querySelector('thead');\r\n    this._tableBody = this._elementRef.nativeElement.querySelector('tbody');\r\n\r\n    // bind to scroll events on the table body\r\n    this._renderer.listen(this._tableBody, 'scroll', this.onScroll.bind(this));\r\n\r\n    // resize the table header to account for scrollbar\r\n    this.setLayout();\r\n\r\n    // trigger the loading of the first page\r\n    this.tablePaging.emit();\r\n  }\r\n\r\n  /**\r\n   * Get the table element\r\n   * Primarily used by column width directive\r\n   */\r\n  getTable(): HTMLTableElement {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Handle scroll events\r\n   */\r\n  private onScroll(): void {\r\n\r\n    // determine if we are scrolled to the bottom and if so load the next page\r\n    if (this._tableBody.scrollTop === (this._tableBody.scrollHeight - this._tableBody.offsetHeight)) {\r\n      this.tablePaging.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the size of the table header to account for the scrollbar.\r\n   * This is important to keep the columns aligned\r\n   */\r\n  private setLayout(): void {\r\n\r\n    // calculate the size of the scrollbar\r\n    const scrollbar = this._tableBody.offsetWidth - this._tableBody.clientWidth;\r\n\r\n    // add padding to the header to account for this\r\n    this._renderer.setStyle(this._tableHead, 'padding-right', scrollbar + 'px');\r\n\r\n    // set the desired height of the table body\r\n    this._renderer.setStyle(this._tableBody, 'height', typeof this.tableHeight === 'number' ? `${this.tableHeight}px` : this.tableHeight);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FixedHeaderTableDirective } from './fixed-header-table.directive';\r\n\r\n@NgModule({\r\n    exports: [FixedHeaderTableDirective],\r\n    declarations: [FixedHeaderTableDirective]\r\n})\r\nexport class FixedHeaderTableModule { }\r\n","import { Directive, ElementRef, HostBinding, Input, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[uxFloatLabel]',\r\n    host: {\r\n        'class': 'ux-float-label'\r\n    }\r\n})\r\nexport class FloatLabelDirective implements OnInit, OnChanges, OnDestroy {\r\n\r\n    @Input('uxFloatLabel')\r\n    input: HTMLInputElement;\r\n\r\n    @Input()\r\n    value: any;\r\n\r\n    @Input()\r\n    mode: 'focus' | 'input' = 'focus';\r\n\r\n    @HostBinding('class.ux-float-label-raised')\r\n    raised: boolean = false;\r\n\r\n\r\n    private _focused = false;\r\n    private _eventHandles: any[] = [];\r\n\r\n    constructor(private _elementRef: ElementRef, private _renderer: Renderer2) { }\r\n\r\n    ngOnInit(): void {\r\n        this._eventHandles.push(\r\n            this._renderer.listen(this.input, 'focus', this.inputFocus.bind(this)),\r\n            this._renderer.listen(this.input, 'blur', this.inputBlur.bind(this)),\r\n            this._renderer.listen(this.input, 'input', this.inputChange.bind(this))\r\n        );\r\n\r\n        // Check initial input value\r\n        this.raised = this.hasText();\r\n\r\n        // Ensure that the `for` attribute is set\r\n        if (!this._elementRef.nativeElement.getAttribute('for') && this.input.getAttribute('id')) {\r\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'for', this.input.getAttribute('id'));\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        if (!(this.mode === 'focus' && this._focused)) {\r\n            this.raised = this.hasText();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        // Unsubscribe event handles\r\n        this._eventHandles.forEach((eventHandle) => eventHandle());\r\n    }\r\n\r\n    private hasText(): boolean {\r\n        if (this.value === undefined) {\r\n            return !!this.input.value;\r\n        }\r\n        return !!this.value;\r\n    }\r\n\r\n    private inputFocus(): void {\r\n        if (this.mode === 'focus') {\r\n            this._focused = true;\r\n            this.raised = true;\r\n        }\r\n    }\r\n\r\n    private inputBlur(): void {\r\n        if (this.mode === 'focus') {\r\n            this._focused = false;\r\n            this.raised = this.hasText();\r\n        }\r\n    }\r\n\r\n    private inputChange(): void {\r\n        if (this.mode === 'input') {\r\n            this.raised = this.hasText();\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { FloatLabelDirective } from './float-label.directive';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [FloatLabelDirective],\r\n    declarations: [FloatLabelDirective],\r\n    providers: [],\r\n})\r\nexport class FloatLabelModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HelpCenterService {\r\n\r\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\r\n\r\n    registerItem(item: HelpCenterItem): void {\r\n\r\n        // get the current items\r\n        let items = this.items.getValue();\r\n\r\n        // add the new item to the list\r\n        items.push(item);\r\n\r\n        // update the observable\r\n        this.items.next(items);\r\n    }\r\n\r\n    unregisterItem(item: HelpCenterItem): void {\r\n\r\n        // get the current items\r\n        let items = this.items.getValue();\r\n\r\n        // remove the item being unregistered\r\n        items = items.filter(itm => itm !== item);\r\n\r\n        // update the observable\r\n        this.items.next(items);\r\n    }\r\n}\r\n\r\nexport interface HelpCenterItem {\r\n    icon?: string;\r\n    title: string;\r\n    select?: () => void;\r\n}","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\r\n\r\n@Directive({ selector: '[uxHelpCenterItem]' })\r\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\r\n\r\n    @Input() uxHelpCenterItem: HelpCenterItem;\r\n\r\n    constructor(private _helpCenterService: HelpCenterService) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        // register the item in the service\r\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        // remove this item when it is destroyed\r\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { HelpCenterItemDirective } from './help-center-item.directive';\r\nimport { HelpCenterService } from './help-center.service';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [HelpCenterItemDirective],\r\n    declarations: [HelpCenterItemDirective],\r\n    providers: [HelpCenterService],\r\n})\r\nexport class HelpCenterModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\r\nimport { HoverActionDirective } from './hover-action.directive';\r\n\r\n@Injectable()\r\nexport class HoverActionService {\r\n\r\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    private _container: HoverActionContainerDirective;\r\n    private _focused: boolean = false;\r\n    private _hovered: boolean = false;\r\n    private _actions: HoverActionDirective[] = [];\r\n\r\n    register(action: HoverActionDirective): void {\r\n        this._actions.push(action);\r\n    }\r\n\r\n    unregister(action: HoverActionDirective): void {\r\n        this._actions = this._actions.filter(actn => actn !== action);\r\n    }\r\n\r\n    setContainer(container: HoverActionContainerDirective): void {\r\n        this._container = container;\r\n    }\r\n\r\n    setFocusState(focus: boolean): void {\r\n        this._focused = focus;\r\n        this.updateVisibility();\r\n    }\r\n\r\n    setHoverState(hover: boolean): void {\r\n        this._hovered = hover;\r\n        this.updateVisibility();\r\n    }\r\n\r\n    next(): void {\r\n\r\n        // if container has focus then focus the first hover action\r\n        if (this.containerHasFocus()) {\r\n            this.focusActionAtIndex(0);\r\n            return this.updateVisibility();\r\n        }\r\n\r\n        // if a hover action has focus then focus the next action\r\n        if (this.actionHasFocus()) {\r\n            let index = this.getFocusedActionIndex() + 1;\r\n            this.focusActionAtIndex(index);\r\n            this.updateVisibility();\r\n        }\r\n    }\r\n\r\n    previous(): void {\r\n        // if a hover action has focus then focus the previous action\r\n        if (this.actionHasFocus()) {\r\n            let index = this.getFocusedActionIndex() - 1;\r\n\r\n            if (index >= 0) {\r\n                this.focusActionAtIndex(index);\r\n            } else {\r\n                this._container.focus();\r\n            }\r\n        }\r\n\r\n        this.updateVisibility();\r\n    }\r\n\r\n    updateVisibility(): void {\r\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\r\n    }\r\n\r\n    private focusActionAtIndex(index: number): void {\r\n        if (index >= 0 && index < this._actions.length) {\r\n            this._actions[index].focus();\r\n        }\r\n    }\r\n\r\n    private getFocusedActionIndex(): number {\r\n        return this._actions.findIndex(action => action === this.getFocusedAction());\r\n    }\r\n\r\n    private containerHasFocus(): boolean {\r\n        return this._focused;\r\n    }\r\n\r\n    private actionHasFocus(): boolean {\r\n        return !!this.getFocusedAction();\r\n    }\r\n\r\n    private getFocusedAction(): HoverActionDirective {\r\n        return this._actions.find(action => action.focused);\r\n    }\r\n}","import { Directive, ElementRef, HostListener, Input, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { HoverActionService } from './hover-action.service';\r\n\r\n@Directive({\r\n    selector: '[uxHoverActionContainer]',\r\n    providers: [HoverActionService],\r\n    host: {\r\n        '[class.hover-action-container-active]': 'active',\r\n        '[tabindex]': 'tabindex'\r\n    }\r\n})\r\nexport class HoverActionContainerDirective implements OnDestroy {\r\n\r\n    @Input() tabindex: number = 0;\r\n    active: boolean = false;\r\n\r\n    private active$: Subscription;\r\n\r\n    constructor(private _elementRef: ElementRef, private _hoverActionService: HoverActionService) {\r\n        // register the container element with the service\r\n        this._hoverActionService.setContainer(this);\r\n\r\n        // apply a class based on the active state of the container and it's actions\r\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.active$.unsubscribe();\r\n    }\r\n\r\n    @HostListener('click') focus(): void {\r\n        this._elementRef.nativeElement.focus();\r\n    }\r\n\r\n    @HostListener('focus') onFocus(): void {\r\n        this._hoverActionService.setFocusState(true);\r\n    }\r\n\r\n    @HostListener('blur') onBlur(): void {\r\n        this._hoverActionService.setFocusState(false);\r\n    }\r\n\r\n    @HostListener('mouseenter') onHover(): void {\r\n        this._hoverActionService.setHoverState(true);\r\n    }\r\n\r\n    @HostListener('mouseleave') onLeave(): void {\r\n        this._hoverActionService.setHoverState(false);\r\n    }\r\n\r\n    @HostListener('keydown.arrowright') next(): void {\r\n        this._hoverActionService.next();\r\n    }\r\n}","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\r\nimport { HoverActionService } from './hover-action.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[uxHoverAction]',\r\n    host: {\r\n        '[class.hover-action-active]': 'active',\r\n        '[class.hover-action-focused]': 'focused',\r\n        '[tabindex]': 'tabindex'\r\n    }\r\n})\r\nexport class HoverActionDirective implements OnDestroy {\r\n\r\n    @Input() tabindex: number = 1;\r\n    active: boolean = false;\r\n    focused: boolean = false;\r\n\r\n    private active$: Subscription;\r\n\r\n    constructor(private _elementRef: ElementRef, private _hoverActionService: HoverActionService) {\r\n\r\n        // register the action\r\n        this._hoverActionService.register(this);\r\n\r\n        // watch for changes to the activeness of the container\r\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._hoverActionService.unregister(this);\r\n        this.active$.unsubscribe();\r\n    }\r\n\r\n    focus(): void {\r\n        this._elementRef.nativeElement.focus();\r\n    }\r\n\r\n    @HostListener('focus') onFocus(): void {\r\n        this.focused = true;\r\n        this._hoverActionService.updateVisibility();\r\n    }\r\n\r\n    @HostListener('blur') onBlur(): void {\r\n        this.focused = false;\r\n        this._hoverActionService.updateVisibility();\r\n    }\r\n\r\n    @HostListener('keydown.arrowleft', ['$event']) previous(event: MouseEvent): void {\r\n        event.stopPropagation();        \r\n        this._hoverActionService.previous();\r\n    }\r\n\r\n    @HostListener('keydown.arrowright', ['$event']) next(event: MouseEvent): void {\r\n        event.stopPropagation();\r\n        this._hoverActionService.next();\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\r\nimport { HoverActionDirective } from './hover-action.directive';\r\n\r\nconst DECLARATIONS = [\r\n    HoverActionDirective,\r\n    HoverActionContainerDirective\r\n];\r\n\r\n@NgModule({\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS\r\n})\r\nexport class HoverActionModule { }\r\n","import { Directive, EmbeddedViewRef, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[uxLayoutSwitcherItem]'\r\n})\r\nexport class LayoutSwitcherItemDirective {\r\n\r\n    @Input('uxLayoutSwitcherItem') private _config: LayoutSwitcherItem;\r\n\r\n    private _embeddedView: EmbeddedViewRef<any>;\r\n\r\n    constructor(private _templateRef: TemplateRef<any>, private _viewContainerRef: ViewContainerRef) { }\r\n\r\n    getLayout(): TemplateRef<any> {\r\n        return this._templateRef;\r\n    }\r\n\r\n    getConfig(): LayoutSwitcherItem {\r\n        return this._config;\r\n    }\r\n\r\n    activate(): void {\r\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n    }\r\n\r\n    deactivate(): void {\r\n        let index = this._viewContainerRef.indexOf(this._embeddedView);\r\n        this._viewContainerRef.remove(index);\r\n        this._embeddedView = null;\r\n    }\r\n\r\n}\r\n\r\nexport interface LayoutSwitcherItem {\r\n    group?: string;\r\n    minWidth?: number;\r\n    maxWidth?: number;\r\n}","import { Directive, ElementRef, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ResizeService } from '../resize/index';\r\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\r\n\r\n@Directive({\r\n    selector: '[uxLayoutSwitcher]'\r\n})\r\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\r\n\r\n    @Input() group: string;\r\n    @ContentChildren(LayoutSwitcherItemDirective) private _layouts: QueryList<LayoutSwitcherItemDirective>;\r\n    \r\n    private _width: number;\r\n    private _activeLayout: LayoutSwitcherItemDirective;\r\n\r\n    constructor(private _elementRef: ElementRef, resizeService: ResizeService,\r\n        private _viewContainerRef: ViewContainerRef) {\r\n\r\n        // watch for changes to the container size\r\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => {\r\n            this._width = event.width;\r\n\r\n            // render the appropriate layout\r\n            this.updateActiveLayout();\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n        // if the active group has changed then render the appropriate layout\r\n        if (changes.group.currentValue !== changes.group.previousValue) {\r\n            this.updateActiveLayout();\r\n        }\r\n    }\r\n\r\n    getActiveLayout(): LayoutSwitcherItemDirective | null {\r\n\r\n        // if there are currently no layouts then do nothing\r\n        if (!this._layouts) {\r\n            return null;\r\n        }\r\n\r\n        // otherwise find layouts that match the active group and that meet the constraints\r\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\r\n\r\n            let minWidth = layout.getConfig().minWidth || 0;\r\n            let maxWidth = layout.getConfig().maxWidth || Infinity;\r\n\r\n            return this._width >= minWidth && this._width < maxWidth;\r\n        });\r\n    }\r\n\r\n    updateActiveLayout(): void {\r\n\r\n        // get the layout that should be shown\r\n        let layout = this.getActiveLayout();\r\n\r\n        // check if we are currently showing the layout\r\n        if (this._activeLayout === layout) {\r\n            return;\r\n        }\r\n\r\n        // remove the current layout\r\n        if (this._activeLayout) {\r\n            this._activeLayout.deactivate();\r\n        }\r\n\r\n        // store the new active layout\r\n        this._activeLayout = layout;\r\n\r\n        // if there is an active layout then activate\r\n        if (this._activeLayout) {\r\n            this._activeLayout.activate();\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit(): void {\r\n\r\n        // store the initial current element width\r\n        this._width = this._elementRef.nativeElement.offsetWidth;\r\n\r\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\r\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\r\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\r\nimport { ResizeModule } from '../resize/index';\r\n\r\nconst DECLARATIONS = [\r\n    LayoutSwitcherDirective,\r\n    LayoutSwitcherItemDirective\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        ResizeModule\r\n    ],\r\n    exports: DECLARATIONS,\r\n    declarations: DECLARATIONS,\r\n    providers: [],\r\n})\r\nexport class LayoutSwitcherModule { }\r\n","import { SelectionService } from '../selection.service';\r\n\r\nexport class SelectionStrategy {\r\n\r\n  constructor(protected selectionService: SelectionService) { }\r\n\r\n  mousedown(event: MouseEvent, data: any): void { }\r\n\r\n  click(event: MouseEvent, data: any): void { }\r\n\r\n  keydown(event: KeyboardEvent, data: any): void { }\r\n\r\n  /**\r\n   * Select the item - default behavior\r\n   */\r\n  select(...data: any[]): void {\r\n    this.selectionService.select(...data);\r\n  }\r\n\r\n  /**\r\n   * Toggle the item's selected state - default behavior\r\n   */\r\n  toggle(...data: any[]): void {\r\n    this.selectionService.toggle(...data);\r\n  }\r\n\r\n  /**\r\n   * Deselect the item - default behavior\r\n   */\r\n  deselect(...data: any[]): void {\r\n    this.selectionService.deselect(...data);\r\n  }\r\n\r\n  /**\r\n   * Select all items - default behavior\r\n   */\r\n  selectAll(): void {\r\n    this.select(...this.selectionService.dataset);\r\n  }\r\n\r\n  /**\r\n   * Deselect all items - default behavior\r\n   */\r\n  deselectAll(): void {\r\n    this.deselect(...this.selectionService.dataset);\r\n  }\r\n\r\n  destroy(): void { }\r\n}\r\n","import { SelectionStrategy } from './selection.strategy';\r\n\r\nexport class RowSelectionStrategy extends SelectionStrategy {\r\n\r\n  // store the most recently selected row\r\n  private _selection: Selection = { start: null, end: null };\r\n\r\n  /**\r\n   * By default on shift click the browser will highlight\r\n   * text. This looks bad and we don't want this to occur\r\n   */\r\n  mousedown(event: MouseEvent): void {\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * When a row is clicked we want to handle selection\r\n   */\r\n  click(event: MouseEvent, data: any): void {\r\n\r\n    // determine which modifier keys are pressed\r\n    const { ctrlKey, shiftKey } = event;\r\n\r\n    // if the shift key is pressed we want to perform a multiple selection\r\n    if (shiftKey) {\r\n      return this.multipleSelect(data);\r\n    }\r\n\r\n    // if the control key is pressed we want to perform an additive toggle selection\r\n    if (ctrlKey) {\r\n      return this.toggle(data);\r\n    }\r\n\r\n    // perform a single selection where all other rows are deselected\r\n    this.singleSelect(data);\r\n  }\r\n\r\n  /**\r\n   * To support full keyboard control we need to support the following:\r\n   * 1. Arrow keys to navigate up and down\r\n   * 2. Spacebar to toggle selection\r\n   * 3. Shift + Arrow keys to multiple select\r\n   * 4. Ctrl + Arrow keys to allow retained selection and navigation\r\n   */\r\n  keydown(event: KeyboardEvent, data: any): void {\r\n\r\n    switch (event.keyCode) {\r\n\r\n      case KeyCode.UpArrow:\r\n      case KeyCode.DownArrow:\r\n        event.preventDefault();\r\n        this.navigate(event, data);\r\n        break;\r\n        \r\n      case KeyCode.Spacebar:\r\n        event.preventDefault();\r\n        this.selectionService.strategy.toggle(data, true);\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override the standard toggle function to store or clear the\r\n   * most recently selected item\r\n   */\r\n  toggle(data: any, activate: boolean = false): void {\r\n    super.toggle(data);\r\n\r\n    // store or clear the selection\r\n    this.selectionService.isSelected(data) ? this.setSelectionStart(data) : this.clearSelection();\r\n\r\n    // if we want to keep the item activated then activate\r\n    if (activate) {\r\n      this.selectionService.activate(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all other selected items and select only\r\n   * the most recently selected item\r\n   */\r\n  private singleSelect(data: any): void {\r\n\r\n    // deselect all other rows if neither modifier key is pressed\r\n    this.deselectAll();\r\n\r\n    // select the current row\r\n    this.select(data);\r\n\r\n    // store the current item as the selection start\r\n    this.setSelectionStart(data);\r\n  }\r\n\r\n  /**\r\n   * Handle multiple selection:\r\n   * 1. If no start item selected - select it\r\n   * 2. If a start item has been selected - select all in between\r\n   * 3. If a start and end item have been selected clear the range and then select the new range\r\n   */\r\n  private multipleSelect(data: any): void {\r\n\r\n    // if no selection currently exists then perform initial selection\r\n    if (!this._selection.start) {\r\n\r\n      // select the row\r\n      this.select(data);\r\n\r\n      // store the starting point\r\n      return this.setSelectionStart(data);\r\n    }\r\n\r\n    // if a multiple selection already took place - clear the previous selection\r\n    if (this._selection.start && this._selection.end) {\r\n      this.deselect(...this.getSelectedItems());\r\n    }\r\n\r\n    // set the new selection end point\r\n    this.setSelectionEnd(data);\r\n\r\n    // select all the items in the range\r\n    this.select(...this.getSelectedItems());\r\n  }\r\n\r\n  /**\r\n   * Set the selection start point. If there was previously a\r\n   * selection end point then clear it as this is a new selection\r\n   */\r\n  private setSelectionStart(data: any): void {\r\n    this._selection.start = data;\r\n    this._selection.end = null;\r\n\r\n    // activate the item\r\n    this.selectionService.activate(data);\r\n  }\r\n\r\n  /**\r\n   * Set the selection end point\r\n   */\r\n  private setSelectionEnd(data: any): void {\r\n    this._selection.end = data;\r\n\r\n    // activate the item\r\n    this.selectionService.activate(data);\r\n  }\r\n\r\n  /**\r\n   * Clear both start and end selection points\r\n   */\r\n  private clearSelection(deactivate: boolean = true): void {\r\n\r\n    // reset the selected item\r\n    this._selection = { start: null, end: null };\r\n\r\n    // remove the current active item\r\n    if (deactivate) {\r\n      this.selectionService.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine all the items affected by the current selection.\r\n   * Note that the end point may be above the start point so\r\n   * we need to account for this.\r\n   */\r\n  private getSelectedItems(): any[] {\r\n\r\n    // get the latest dataset\r\n    const { dataset } = this.selectionService;\r\n\r\n    // get the indexes of the start and end point\r\n    const startIdx = dataset.indexOf(this._selection.start);\r\n    const endIdx = dataset.indexOf(this._selection.end);\r\n\r\n    // get the region of the array that is selected - note the endIdx may be before the startIdx so account for this\r\n    return dataset.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\r\n  }\r\n\r\n  /**\r\n   * Activate the sibling item when arrow keys are pressed\r\n   */\r\n  private navigate(event: KeyboardEvent, data: any): void {\r\n\r\n    // determine which modifier keys are pressed\r\n    const { ctrlKey, shiftKey } = event;\r\n\r\n    // if no modifier keys are pressed then deselect all and clear the selection\r\n    if (!ctrlKey && !shiftKey) {\r\n      this.deselectAll();\r\n      this.clearSelection(false);\r\n    }\r\n\r\n    // activate the sibling - if the up arrow is pressed then navigate to the previous sibling\r\n    const sibling = this.selectionService.activateSibling(event.keyCode === KeyCode.UpArrow);\r\n\r\n    // if the shift key is pressed then we also want to toggle the state if the item\r\n    if (shiftKey && sibling) {\r\n\r\n      // if there is no current selection start then select the current row\r\n      if (!this._selection.start) {\r\n        this.multipleSelect(data);\r\n      }\r\n\r\n      this.multipleSelect(sibling);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface Selection {\r\n  start: any;\r\n  end: any;\r\n}\r\n\r\nenum KeyCode {\r\n  UpArrow = 38,\r\n  DownArrow = 40,\r\n  Spacebar = 32\r\n}\r\n","import { SelectionStrategy } from './selection.strategy';\r\n\r\nexport class SimpleSelectionStrategy extends SelectionStrategy {\r\n\r\n  /**\r\n   * When the item is clicked simply toggle the current selected state\r\n   */\r\n  click(event: MouseEvent, data: any): void {\r\n    this.toggle(data);\r\n  }\r\n\r\n  /**\r\n   * Add basic keyboard support for navigating\r\n   * and selecting/deselecting items\r\n   */\r\n  keydown(event: KeyboardEvent, data: any): void {\r\n\r\n    switch (event.keyCode) {\r\n      \r\n      case KeyCode.UpArrow:\r\n        event.preventDefault();\r\n        return this.selectionService.activateSibling(true);\r\n        \r\n      case KeyCode.DownArrow:\r\n        event.preventDefault();\r\n        return this.selectionService.activateSibling(false);\r\n      \r\n      case KeyCode.Spacebar:\r\n        event.preventDefault();      \r\n        return this.toggle(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override the standard toggle function to always activate the item\r\n   */\r\n  toggle(data: any): void {\r\n    super.toggle(data);\r\n    this.selectionService.activate(data);\r\n  }\r\n}\r\n\r\nenum KeyCode {\r\n  UpArrow = 38,\r\n  DownArrow = 40,\r\n  Spacebar = 32\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject ,  Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { RowSelectionStrategy } from './strategies/row-selection.strategy';\r\nimport { SelectionStrategy } from './strategies/selection.strategy';\r\nimport { SimpleSelectionStrategy } from './strategies/simple-selection.strategy';\r\n\r\n@Injectable()\r\nexport class SelectionService implements OnDestroy {\r\n\r\n  private _selection = new Set();\r\n  private _rowStrategy = new RowSelectionStrategy(this);\r\n  private _simpleStrategy = new SimpleSelectionStrategy(this);\r\n\r\n  dataset: any[] = [];\r\n  enabled: boolean = true;\r\n  clickEnabled: boolean = true;\r\n  keyboardEnabled: boolean = true;\r\n  strategy: SelectionStrategy = this._simpleStrategy;\r\n\r\n  active$ = new BehaviorSubject<any>(null);\r\n  selection$ = new BehaviorSubject<any[]>([]);\r\n\r\n  ngOnDestroy(): void {\r\n    this._rowStrategy.destroy();\r\n    this._simpleStrategy.destroy();\r\n  }\r\n\r\n  /**\r\n   * If the item is not currently selected then add it\r\n   * to the list of selected items\r\n   */\r\n  select(...selections: any[]): void {\r\n\r\n    // add each selection to the set\r\n    selections.forEach(selection => this._selection.add(selection));\r\n\r\n    // propagate the changes\r\n    this.selectionHasMutated();\r\n  }\r\n\r\n  /**\r\n   * Remove an item from the list of selected items\r\n   */\r\n  deselect(...selections: any[]): void {\r\n    // remove each item from the set\r\n    selections.forEach(selection => this._selection.delete(selection));\r\n\r\n    // propagate the changes\r\n    this.selectionHasMutated();\r\n  }\r\n\r\n  /**\r\n   * Toggle the selected state of any specified items\r\n   */\r\n  toggle(...selections: any[]): void {\r\n    selections.forEach(selection => this.isSelected(selection) ? this.deselect(selection) : this.select(selection));\r\n  }\r\n\r\n  /**\r\n   * Determine whether or not a specific item is currently selected\r\n   */\r\n  isSelected(data: any): boolean {\r\n    return this._selection.has(data);\r\n  }\r\n\r\n  /**\r\n   * Return an observable specifically for notifying the subscriber\r\n   * only when the selection state of a specific object has changed\r\n   */\r\n  selected$(data: any): Observable<boolean> {\r\n    return this.selection$.pipe(map(() => this.isSelected(data)), distinctUntilChanged());\r\n  }\r\n\r\n  /**\r\n   * Define how selections should be performed.\r\n   * This allows us to use an strategy pattern to handle the various keyboard\r\n   * and mouse interactions while keeping each mode separated and\r\n   * easily extensible if we want to add more modes in future!\r\n   */\r\n  setMode(mode: SelectionMode): void {\r\n\r\n    switch (mode.toLowerCase().trim()) {\r\n\r\n      case 'simple':\r\n        this.strategy = this._simpleStrategy;\r\n        break;\r\n\r\n      case 'row':\r\n        this.strategy = this._rowStrategy;\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`The selection mode '${mode}' does not exist. Valid modes are 'simple' or 'row'.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the current active item\r\n   */\r\n  activate(data: any): void {\r\n    this.active$.next(data);\r\n  }\r\n\r\n  /**\r\n   * Deactive all items\r\n   */\r\n  deactivate(): void {\r\n    this.active$.next(null);\r\n  }\r\n\r\n  /**\r\n   * Activate the sibling of the current active item.\r\n   * If previous is set to true the previous sibling will be activated\r\n   * rather than the next sibling. This function will also return the\r\n   * data of the newly activated sibling\r\n   */\r\n  activateSibling(previous: boolean = false): any {\r\n\r\n    // get the currently active item\r\n    const current = this.active$.getValue();\r\n\r\n    // check if there is a current active item\r\n    if (!current) {\r\n      return;\r\n    }\r\n\r\n    // get the index of the current item\r\n    const idx = this.dataset.indexOf(current);\r\n    const target = this.dataset[previous ? idx - 1 : idx + 1];\r\n\r\n    // check if the target exists\r\n    if (target) {\r\n      this.activate(target);\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  setDisabled(disabled: boolean): void {\r\n    // store the current disabled state\r\n    this.enabled = !disabled;\r\n\r\n    // clear any stateful data\r\n    this.active$.next(null);\r\n    this._selection.clear();\r\n\r\n    // emit the selection change information\r\n    this.selectionHasMutated();\r\n  }\r\n\r\n  private selectionHasMutated(): void {\r\n    this.selection$.next(Array.from(this._selection));\r\n  }\r\n}\r\n\r\nexport type SelectionMode = 'simple' | 'row';\r\n","import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SelectionService } from './selection.service';\r\n\r\n@Directive({\r\n  selector: '[uxSelectionItem]',\r\n  exportAs: 'ux-selection-item'\r\n})\r\nexport class SelectionItemDirective implements OnInit, OnDestroy {\r\n\r\n  @Input() uxSelectionItem: any;\r\n\r\n  @Input() @HostBinding('class.ux-selection-selected')\r\n  set selected(selected: boolean) {\r\n    selected ? this.select() : this.deselect();\r\n  }\r\n\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n  \r\n  @Input() @HostBinding('tabindex') tabindex: number = 0;\r\n  @Output() selectedChange = new EventEmitter<boolean>();\r\n\r\n  @HostBinding('class.ux-selection-focused') active: boolean = false;\r\n\r\n  private _selected: boolean = false;\r\n  private _subscriptions = new Subscription();\r\n\r\n  constructor(private _selectionService: SelectionService, private _elementRef: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // if there is no associated data then throw an error\r\n    if (!this.uxSelectionItem) {\r\n      throw new Error('The uxSelectionItem directive must have data associated with it.');\r\n    }\r\n\r\n    // subscribe to selection changes on this item\r\n    this._subscriptions.add(this._selectionService.selected$(this.uxSelectionItem).subscribe(selected => {\r\n\r\n      // store the selected state\r\n      this._selected = selected;\r\n\r\n      // emit the selected state\r\n      this.selectedChange.emit(selected);\r\n    }));\r\n\r\n    // subscribe to changes to the active state\r\n    this._subscriptions.add(this._selectionService.active$.pipe(map(active => active === this.uxSelectionItem)).subscribe(active => {\r\n\r\n      // store the focus state\r\n      this.active = active;\r\n\r\n      // if it is active then focus the element\r\n      if (active === true) {\r\n        this._elementRef.nativeElement.focus();\r\n      }\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscriptions.unsubscribe();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) click(event: MouseEvent): void {\r\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\r\n      this._selectionService.strategy.click(event, this.uxSelectionItem);\r\n    }\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event']) mousedown(event: MouseEvent): void {\r\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\r\n      this._selectionService.strategy.mousedown(event, this.uxSelectionItem);\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown', ['$event']) keydown(event: KeyboardEvent): void {\r\n    if (this._selectionService.enabled && this._selectionService.keyboardEnabled) {\r\n      this._selectionService.strategy.keydown(event, this.uxSelectionItem);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Select this item using the current strategy\r\n   */\r\n  select(): void {\r\n    if (this._selectionService.enabled) {\r\n      this._selectionService.strategy.select(this.uxSelectionItem);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deselect this item using the current strategy\r\n   */\r\n  deselect(): void {\r\n    if (this._selectionService.enabled) {\r\n      this._selectionService.strategy.deselect(this.uxSelectionItem);\r\n    }\r\n  }\r\n}\r\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, HostBinding, HostListener, Input, OnDestroy, Output, QueryList } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { SelectionItemDirective } from './selection-item.directive';\r\nimport { SelectionMode, SelectionService } from './selection.service';\r\n\r\n\r\n@Directive({\r\n  selector: '[uxSelection]',\r\n  exportAs: 'ux-selection',\r\n  providers: [ SelectionService ]\r\n})\r\nexport class SelectionDirective implements AfterContentInit, OnDestroy {\r\n\r\n  @Input() set uxSelection(items: any[]) {\r\n    this._selectionService.select(...items);\r\n  }\r\n\r\n  @Input() set disabled(disabled: boolean) {\r\n    this._selectionService.setDisabled(disabled);\r\n  }\r\n\r\n  @Input() set mode(mode: SelectionMode) {\r\n    this._selectionService.setMode(mode);\r\n  }\r\n\r\n  @Input() set clickSelection(enabled: boolean) {\r\n    this._selectionService.clickEnabled = enabled;\r\n  }\r\n\r\n  @Input() set keyboardSelection(enabled: boolean) {\r\n    this._selectionService.keyboardEnabled = enabled;\r\n  }\r\n\r\n  @Input() @HostBinding('tabindex') tabindex: number = 0;\r\n\r\n  @Output() uxSelectionChange = new EventEmitter<any[]>();\r\n\r\n  @ContentChildren(SelectionItemDirective) items: QueryList<SelectionItemDirective>;\r\n\r\n  private _subscriptions = new Subscription();\r\n\r\n  constructor(private _selectionService: SelectionService) {\r\n    this._subscriptions.add(_selectionService.selection$.subscribe(items => this.uxSelectionChange.emit(items)));\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    // provide the initial list of selection items\r\n    this.update();\r\n\r\n    // if the list changes then inform the service\r\n    this._subscriptions.add(this.items.changes.subscribe(() => this.update()));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._subscriptions.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * If the directive element receives focus then activate the first item\r\n   */\r\n  @HostListener('focus') focus(): void {\r\n    if (this._selectionService.enabled && this._selectionService.dataset.length > 0) {\r\n      this._selectionService.activate(this._selectionService.dataset[0]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the dataset to reflect the latest selection items\r\n   */\r\n  update(): void {\r\n    this._selectionService.dataset = this.items.map(item => item.uxSelectionItem);\r\n  }\r\n\r\n  /**\r\n   * Select all the items in the list\r\n   */\r\n  selectAll(): void {\r\n    if (this._selectionService.enabled) {\r\n      this._selectionService.strategy.selectAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deselect all currently selected items\r\n   */\r\n  deselectAll(): void {\r\n    if (this._selectionService.enabled) {\r\n      this._selectionService.strategy.deselectAll();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SelectionItemDirective } from './selection-item.directive';\r\nimport { SelectionDirective } from './selection.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [SelectionDirective, SelectionItemDirective],\r\n  exports: [SelectionDirective, SelectionItemDirective]\r\n})\r\nexport class SelectionModule { }\r\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'stringFilter'\r\n})\r\n@Injectable()\r\nexport class StringFilterPipe implements PipeTransform {\r\n    transform(items: any[], value: string): any[] {  \r\n        if (!items) {\r\n            return [];\r\n        }\r\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\r\n    }\r\n}","import { StringFilterPipe } from './string-filter.pipe';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    exports: [StringFilterPipe],\r\n    declarations: [StringFilterPipe]\r\n})\r\nexport class StringFilterModule { }\r\n","import { StorageAdapter } from './storage-adapter';\r\n\r\nexport class CookieAdapter implements StorageAdapter {\r\n\r\n    getItem(key: string): string {\r\n\r\n        if (document.cookie) {\r\n\r\n            // get all the cookies for this site\r\n            const cookies = document.cookie.split(';');\r\n\r\n            // process the cookies into a from we can easily manage\r\n            const match = cookies\r\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\r\n                .find(cookie => cookie.key === key);\r\n\r\n            return match ? match.value : null;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        document.cookie = `${key}=${value}; path=/`;\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n\r\n        document.cookie.split(';').forEach(cookie => {\r\n            const eqPos = cookie.indexOf('=');\r\n            const name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\r\n\r\n            if (name === key) {\r\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\r\n            }\r\n        });\r\n    }\r\n\r\n    clear(): void {\r\n\r\n        // call remove item on each cookie\r\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\r\n            .forEach(cookie => this.removeItem(cookie));\r\n    }\r\n\r\n    getSupported(): StorageAdapter {\r\n        // cookies are supported in all browsers\r\n        return this;\r\n    }\r\n\r\n}","import { StorageAdapter } from './storage-adapter';\r\nimport { CookieAdapter } from './cookie-adapter';\r\n\r\nexport class LocalStorageAdapter implements StorageAdapter {\r\n\r\n    getItem(key: string): string {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        localStorage.setItem(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    clear(): void {\r\n        localStorage.clear();\r\n    }\r\n\r\n    getSupported(): StorageAdapter {\r\n\r\n        // if local storage variable does not exist fall back to cookies\r\n        if (!localStorage) {\r\n            return new CookieAdapter();\r\n        }\r\n\r\n        // try to make a test save to local storage to see if there are any exceptions\r\n        try {\r\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\r\n            localStorage.removeItem('ux-persistent-data-service');\r\n\r\n            return this;\r\n        } catch (err) {\r\n            return new CookieAdapter();\r\n        }\r\n    }\r\n\r\n}","import { StorageAdapter } from './storage-adapter';\r\nimport { CookieAdapter } from './cookie-adapter';\r\n\r\nexport class SessionStorageAdapter implements StorageAdapter {\r\n\r\n    getItem(key: string): string {\r\n        return sessionStorage.getItem(key);\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        sessionStorage.setItem(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        sessionStorage.removeItem(key);\r\n    }\r\n\r\n    clear(): void {\r\n        sessionStorage.clear();\r\n    }\r\n\r\n    getSupported(): StorageAdapter {\r\n\r\n        // if local storage variable does not exist fall back to cookies\r\n        if (!sessionStorage) {\r\n            return new CookieAdapter();\r\n        }\r\n\r\n        // try to make a test save to local storage to see if there are any exceptions\r\n        try {\r\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\r\n            sessionStorage.removeItem('ux-persistent-data-service');\r\n\r\n            return this;\r\n        } catch (err) {\r\n            return new CookieAdapter();\r\n        }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { StorageAdapter } from './adapters/storage-adapter';\r\nimport { CookieAdapter } from './adapters/cookie-adapter';\r\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\r\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\r\n\r\n@Injectable()\r\nexport class PersistentDataService {\r\n\r\n    /**\r\n     * Save the item in some form of persistent storage\r\n     */\r\n    setItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\r\n        this.getAdapter(type).setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * Get a stored value from persistent storage\r\n     */\r\n    getItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\r\n        return this.getAdapter(type).getItem(key);\r\n    }\r\n\r\n    /**\r\n     * Remove a stored value from persistent storage\r\n     */\r\n    removeItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\r\n        this.getAdapter(type).removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Remove a stored value from persistent storage\r\n     */\r\n    clear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\r\n        this.getAdapter(type).clear();\r\n    }\r\n\r\n    /**\r\n     * Return the appropriate adapter based on the type requested\r\n     */\r\n    private getAdapter(type: PersistentDataStorageType): StorageAdapter {\r\n\r\n        switch (type) {\r\n\r\n            case PersistentDataStorageType.Cookie:\r\n                return new CookieAdapter();\r\n\r\n            case PersistentDataStorageType.LocalStorage:\r\n                const localStorageAdapter = new LocalStorageAdapter();\r\n                return localStorageAdapter.getSupported();\r\n\r\n            case PersistentDataStorageType.SessionStorage:\r\n                const sessionStorageAdapter = new SessionStorageAdapter();\r\n                return sessionStorageAdapter.getSupported();\r\n        }\r\n    }\r\n}\r\n\r\nexport enum PersistentDataStorageType {\r\n    LocalStorage,\r\n    Cookie,\r\n    SessionStorage\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { PersistentDataService } from './persistent-data.service';\r\n\r\n@NgModule({\r\n    providers: [PersistentDataService],\r\n})\r\nexport class PersistentDataModule { }\r\n","export abstract class StorageAdapter {\r\n    abstract getItem(key: string): string;\r\n    abstract setItem(key: string, value: string): void;\r\n    abstract removeItem(key: string): void;\r\n    abstract clear(): void;\r\n    abstract getSupported(): StorageAdapter;\r\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'contact-group'\r\n})\r\nexport class ContactsNg1Component extends UpgradeComponent {\r\n\r\n    @Input() contacts: Contact[];\r\n    @Input() organization: string;\r\n    @Input() size: 'medium' | 'small';\r\n    @Input() colors: any;\r\n    @Input() maxContacts: number;\r\n\r\n    @Output() overflowClick: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('contactGroup', elementRef, injector);\r\n    }\r\n}\r\n\r\nexport interface Contact {\r\n    test: string;\r\n    status: 'active' | 'passive';\r\n    customTooltip?: {\r\n        template: string,\r\n        tooltipPosition: string;\r\n        data?: any;\r\n    };\r\n}\r\n\r\nexport interface Organization {\r\n    text: string;\r\n    label: 'external' | 'risk';\r\n    tooltip?: string;\r\n    customTooltip?: {\r\n        template: string,\r\n        tooltipPosition: string;\r\n        data?: any;\r\n    };\r\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'expand-input'\r\n})\r\nexport class ExpandInputNg1Component extends UpgradeComponent {\r\n\r\n    @Input() elname: string;\r\n    @Input() placeHolder: string;\r\n    @Input() className: string;\r\n    @Input() clearTextIcon: string;\r\n    @Input() closeSearch: string;\r\n    @Input() expandAlways: boolean;\r\n    @Input() onEnter: Function;\r\n\r\n    @Output() focus: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('expandInput', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'floating-action-button'\r\n})\r\nexport class FloatingActionButtonNg1Component extends UpgradeComponent {\r\n\r\n    @Input() items: FloatingActionButtonItem[] = [];\r\n    @Input() primary: string;\r\n    @Input() direction: 'top' | 'right' | 'bottom' | 'left';\r\n    @Input() fabTooltip: string;\r\n    @Input() fabTooltipPlacement: 'top' | 'right' | 'bottom' | 'left';\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('floatingActionButton', elementRef, injector);\r\n    }\r\n}\r\n\r\nexport interface FloatingActionButtonItem {\r\n    icon: string;\r\n    event: Function;\r\n    tooltip?: string;\r\n    tooltipPlacement?: string;\r\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'flot'\r\n})\r\nexport class FlotNg1Component extends UpgradeComponent {\r\n\r\n    @Input() dataset: any;\r\n    @Input() options: any;\r\n    @Input() callback: any;\r\n    @Input() donutLabels: any;\r\n    @Output() onPlotClick = new EventEmitter<any>();\r\n    @Output() onPlotHover = new EventEmitter<any>();\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxFlotNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'grid'\r\n})\r\nexport class GridNg1Component extends UpgradeComponent {\r\n\r\n    @Input() source: any[] = [];\r\n    @Input() columns: GridColumn[] = [];\r\n\r\n    /**\r\n     * The following inputs are undocumented\r\n     */\r\n    @Input() options: any;\r\n    @Input() events: any;\r\n    @Input() plugins: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('grid', elementRef, injector);\r\n    }\r\n}\r\n\r\nexport interface GridColumn {\r\n    title: string;\r\n    template: string;\r\n    width?: string;\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'hierarchy-bar'\r\n})\r\nexport class HierarchyBarNg1Component extends UpgradeComponent {\r\n\r\n    @Input() data: any[];\r\n    @Input() options: HierarchyBarOptions;\r\n    @Input() selectNode: any;\r\n    @Input() containerClass: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('hierarchyBar', elementRef, injector);\r\n    }\r\n}\r\n\r\nexport interface HierarchyBarOptions {\r\n    enabled: boolean;\r\n    overview?: Function;\r\n    image: Function;\r\n    valueFormatter: Function;\r\n    action?: {\r\n        title: string;\r\n        event: Function;\r\n    };\r\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'marquee-wizard'\r\n})\r\nexport class MarqueeWizardNg1Component extends UpgradeComponent {\r\n\r\n    @Input() wizardIcon: string;\r\n    @Input() wizardSteps: MarqueeWizardStep[];\r\n    @Input() buttonOptions: MarqueeWizardOptions;\r\n    @Input() onChanging: Function;\r\n    @Input() onFinished: Function;\r\n    @Input() onFinishing: Function;\r\n    @Input() onCanceled: Function;\r\n    @Input() isVisited: boolean;\r\n    @Input() sideInfo: MarqueeWizardSideInfo;\r\n\r\n    @Output() wizardStepsChange: EventEmitter<MarqueeWizardStep[]> = new EventEmitter<MarqueeWizardStep[]>();\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('marqueeWizard', elementRef, injector);\r\n    }\r\n}\r\n\r\nexport interface MarqueeWizardStep {\r\n    title: string;\r\n    html?: string;\r\n    header?: string;\r\n    templateUrl?: string;\r\n    hidden?: boolean;\r\n    error?: boolean;\r\n    completed?: boolean;\r\n    visited?: boolean;\r\n}\r\n\r\nexport interface MarqueeWizardOptions {\r\n    nextText?: string;\r\n    previousText?: string;\r\n    finishText?: string;\r\n    showNext?: boolean;\r\n    showPrevious?: boolean;\r\n    showFinish?: boolean;\r\n    nextTooltip?: string;\r\n    previousTooltip?: string;\r\n    finishTooltip?: string;\r\n    previousEnabled?: boolean;\r\n    nextEnabled?: boolean;\r\n    finishEnabled?: boolean;\r\n}\r\n\r\nexport interface MarqueeWizardSideInfo {\r\n    title: string;\r\n    description: string;\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'nested-donut'\r\n})\r\nexport class NestedDonutNg1Component extends UpgradeComponent {\r\n\r\n    @Input() dataset: any;\r\n    @Input() options: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxNestedDonutNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'organization-chart'\r\n})\r\nexport class OrganizationChartNg1Component extends UpgradeComponent {\r\n\r\n    @Input() data: any;\r\n    @Input() options: any;\r\n    @Output() dataChange = new EventEmitter<any>();\r\n    @Output() optionsChange = new EventEmitter<any>();\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxOrganizationChartNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'partition-map'\r\n})\r\nexport class PartitionMapNg1Component extends UpgradeComponent {\r\n\r\n    @Input() chartData: any;\r\n    @Input() chartOptions: any;\r\n    @Input() chartLoading: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxPartitionMapNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'bar-chart'\r\n})\r\nexport class PeityBarChartNg1Component extends UpgradeComponent {\r\n\r\n    @Input() data: any;\r\n    @Input() options: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxPeityBarChartNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'line-chart'\r\n})\r\nexport class PeityLineChartNg1Component extends UpgradeComponent {\r\n\r\n    @Input() data: any;\r\n    @Input() options: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxPeityLineChartNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'pie-chart'\r\n})\r\nexport class PeityPieChartNg1Component extends UpgradeComponent {\r\n\r\n    @Input() data: any;\r\n    @Input() options: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxPeityPieChartNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'updating-line-chart'\r\n})\r\nexport class PeityUpdatingLineChartNg1Component extends UpgradeComponent {\r\n\r\n    @Input() data: any;\r\n    @Input() options: any;\r\n    @Input() method: any;\r\n    @Input() updateinterval: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxPeityUpdatingLineChartNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'sankey'\r\n})\r\nexport class SankeyNg1Component extends UpgradeComponent {\r\n\r\n    @Input() chartSize: any;\r\n    @Input() chartData: any;\r\n    @Input() options: any;\r\n    @Input() click: any;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxSankeyNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'search-toolbar'\r\n})\r\nexport class SearchToolbarNg1Component extends UpgradeComponent {\r\n\r\n    @Input() searchTypeahead: any[];\r\n    @Input() placeHolder: string;\r\n    @Input() closeSearch: string;\r\n    @Input() onSearch: Function;\r\n    @Input() onFocus: Function;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('searchToolbar', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'select-table'\r\n})\r\nexport class SelectTableNg1Component extends UpgradeComponent {\r\n\r\n    @Input() values: any[];\r\n    @Input() multipleSelect: boolean;\r\n    @Input() selectKey: string;\r\n    @Input() selected: string;\r\n    @Input() searchText: string;\r\n    @Input() tableHeight: string;\r\n    @Input() selectHiddenItems: 'clear' | 'reselect';\r\n\r\n    @Output() selectedChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('selectTable', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter, forwardRef } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const SLIDER_CHART_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SliderChartNg1Component),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: 'slider-chart',\r\n    providers: [SLIDER_CHART_VALUE_ACCESSOR]\r\n})\r\nexport class SliderChartNg1Component extends UpgradeComponent implements ControlValueAccessor {\r\n\r\n    @Input() sliderOptions: any;\r\n    @Input() ngModel: any;\r\n    @Input() chartOptions: any;\r\n    @Input() chartData: any;\r\n\r\n    @Output() ngModelChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('sliderChart', elementRef, injector);\r\n    }\r\n\r\n    writeValue(obj: any): void { }\r\n\r\n    registerOnChange(fn: any): void { }\r\n\r\n    registerOnTouched(fn: any): void { }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'social-chart'\r\n})\r\nexport class SocialChartNg1Component extends UpgradeComponent {\r\n\r\n    @Input() data: any;\r\n    @Input() options: any;\r\n    @Input() width: any;\r\n    @Input() height: any;\r\n    @Input() api: any;\r\n    @Input() communities: any;\r\n    @Input() detailStyle: any;\r\n    @Input() popoverStyle: any;\r\n    @Input() nodeDetail: any;\r\n    @Input() edgeDetail: any;\r\n    @Input() nodePopover: any;\r\n    @Input() edgePopover: any;\r\n    @Input() forceAtlasDuration: any;\r\n    @Input() nodeSizeAttribute: any;\r\n    @Input() startMaximized: any;\r\n    @Input() startMaximised: any;\r\n    @Input() showMaximizeControl: any;\r\n    @Input() showMaximiseControl: any;\r\n    @Input() socialChartContainer: any;\r\n    @Input() fullscreenButtonPosition: any;\r\n    @Input() localStrings: any;\r\n    @Input() chartTitle: any;\r\n    @Input() titleDisplayTime: any;\r\n    @Input() edgeWeightInfluence: any;\r\n    @Input() minLabels: any;\r\n    \r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('uxSocialChartNg1', elementRef, injector);\r\n    }\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'sort-direction-toggle'\r\n})\r\nexport class SortDirectionToggleNg1Component extends UpgradeComponent {\r\n\r\n    @Input() label: string;\r\n    @Input() sorters: SortDirectionToggleSorter[];\r\n    @Input() descend: boolean;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('sortDirectionToggle', elementRef, injector);\r\n    }\r\n}\r\n\r\nexport interface SortDirectionToggleSorter {\r\n    name: string;\r\n    sort: string;\r\n    defaultSorter: boolean;\r\n    select: Function;\r\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'treegrid'\r\n})\r\nexport class TreeGridNg1Component extends UpgradeComponent {\r\n\r\n    @Input() data: TreeGridData[] | Function;\r\n    @Input() columns: TreeGridColumn[];\r\n    @Input() treeData: TreeGridData[];\r\n    @Input() selected: any[];\r\n    @Input() currentRow: any;\r\n    @Input() options: TreeGridOptions;\r\n\r\n    @Output() optionsChange: EventEmitter<TreeGridOptions> = new EventEmitter<TreeGridOptions>();\r\n    @Output() selectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n    @Output() currentRowChange: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() treeDataChange: EventEmitter<TreeGridData[]> = new EventEmitter<TreeGridData[]>();    \r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('treegrid', elementRef, injector);\r\n    }\r\n}\r\n\r\nexport interface TreeGridColumn {\r\n    name: string;\r\n    value?: string | Function;\r\n    template?: string;\r\n    headerClass?: string;\r\n    cellClass?: string;\r\n    width?: string;\r\n    tooltip?: string;\r\n    tooltipPlacement?: 'top' | 'bottom' | 'left' | 'right';\r\n}\r\n\r\nexport interface TreeGridData {\r\n    dataItem: any;\r\n    children: any[];\r\n    expanded: boolean;\r\n    expanding: boolean;\r\n    level: number;\r\n    api: any;\r\n}\r\n\r\nexport interface TreeGridOptions {\r\n    childrenProperty?: string;\r\n    hasChildren?: Function;\r\n    maxDepth?: number;\r\n    expandTopLevel?: boolean;\r\n    select?: any;\r\n    expander?: any;\r\n    icons?: any;\r\n    rowClass?: string | Function;\r\n    sort?: Function;\r\n}","import { Directive, ElementRef, Injector, Input } from '@angular/core';\r\nimport { UpgradeComponent } from '@angular/upgrade/static';\r\n\r\n@Directive({\r\n    selector: 'thumbnail'\r\n})\r\nexport class ThumbnailNg1Component extends UpgradeComponent {\r\n\r\n    @Input() url: string;\r\n    @Input() show: boolean;\r\n    @Input() width: string;\r\n    @Input() height: string;\r\n\r\n    constructor(elementRef: ElementRef, injector: Injector) {\r\n        super('thumbnail', elementRef, injector);\r\n    }\r\n}","import { Injectable, Inject, Injector } from '@angular/core';\r\nimport { INavigationMenuService } from './navigation-menu.interface';\r\n\r\n@Injectable()\r\nexport class NavigationMenuService implements INavigationMenuService {\r\n\r\n    constructor( @Inject('$navigationMenu') private _navigationMenuService: INavigationMenuService) { }\r\n\r\n    show(): void {\r\n        this._navigationMenuService.show();\r\n    }\r\n\r\n    hide(): void {\r\n        this._navigationMenuService.hide();\r\n    }\r\n\r\n    visible(): boolean {\r\n        return this._navigationMenuService.visible();\r\n    }\r\n\r\n    collapseAtWidth(): number {\r\n        return this._navigationMenuService.collapseAtWidth();\r\n    }\r\n\r\n    setCollapseAtWidth(width: number): void {\r\n        this._navigationMenuService.setCollapseAtWidth(width);\r\n    }\r\n\r\n    setDefaultCollapseAtWidth(): void {\r\n        this._navigationMenuService.setDefaultCollapseAtWidth();\r\n    }\r\n\r\n}\r\n\r\nexport function navigationMenuServiceFactory(injector: Injector) {\r\n    return injector.get('$navigationMenu');\r\n}\r\n\r\nexport const navigationMenuServiceProvider = {\r\n    provide: '$navigationMenu',\r\n    useFactory: navigationMenuServiceFactory,\r\n    deps: ['$injector']\r\n};","import { Injectable, Inject, Injector } from '@angular/core';\r\nimport { IPdfService, PdfColumns, PdfOptions, PdfDocument } from './pdf.interface';\r\n\r\n@Injectable()\r\nexport class PdfService implements IPdfService {\r\n    \r\n    constructor(@Inject('$pdf') private _pdfService: IPdfService) { }\r\n    \r\n    createTable(columns: PdfColumns, rows: any[], options: PdfOptions = {}): PdfDocument {\r\n        return this._pdfService.createTable(columns, rows, options);\r\n    }\r\n}\r\n\r\nexport function pdfServiceFactory(injector: Injector) {\r\n    return injector.get('$pdf');\r\n}\r\n\r\nexport const pdfServiceProvider = {\r\n    provide: '$pdf',\r\n    useFactory: pdfServiceFactory,\r\n    deps: ['$injector']\r\n};","import { Injectable, Inject, Injector } from '@angular/core';\r\nimport { ITimeAgoService, TimeAgoLocalizedTimes } from './time-ago.interface';\r\n\r\n@Injectable()\r\nexport class TimeAgoService implements ITimeAgoService {\r\n\r\n    constructor(@Inject('timeAgoService') private _timeAgoService: ITimeAgoService) { }\r\n\r\n    setStrings(strings: TimeAgoLocalizedTimes): void {\r\n        this._timeAgoService.setStrings(strings);\r\n    }\r\n\r\n    timeSince(past: Date, present: Date): string {\r\n        return this._timeAgoService.timeSince(past, present);\r\n    }\r\n\r\n    timeSinceNow(moment: Date): string {\r\n        return this._timeAgoService.timeSinceNow(moment);\r\n    }\r\n\r\n}\r\n\r\nexport function timeAgoServiceFactory(injector: Injector) {\r\n    return injector.get('timeAgoService');\r\n}\r\n\r\nexport const timeAgoServiceProvider = {\r\n    provide: 'timeAgoService',\r\n    useFactory: timeAgoServiceFactory,\r\n    deps: ['$injector']\r\n};","import { NgModule, Injector } from '@angular/core';\r\n\r\nimport { FloatingActionButtonNg1Component } from './components/floating-action-button/floating-action-button.component';\r\nimport { FlotNg1Component } from './components/flot/flot.component';\r\nimport { NestedDonutNg1Component } from './components/nested-donut/nested-donut.component';\r\nimport { OrganizationChartNg1Component } from './components/organization-chart/organization-chart.component';\r\nimport { PartitionMapNg1Component } from './components/partition-map/partition-map.component';\r\nimport { PeityBarChartNg1Component } from './components/peity-chart/peity-bar-chart.component';\r\nimport { PeityLineChartNg1Component } from './components/peity-chart/peity-line-chart.component';\r\nimport { PeityPieChartNg1Component } from './components/peity-chart/peity-pie-chart.component';\r\nimport { PeityUpdatingLineChartNg1Component } from './components/peity-chart/peity-updating-line-chart.component';\r\nimport { SankeyNg1Component } from './components/sankey-chart/sankey.component';\r\nimport { SocialChartNg1Component } from './components/social-chart/social-chart.component';\r\nimport { TimeAgoService, timeAgoServiceProvider } from './services/time-ago/time-ago.service';\r\nimport { PdfService, pdfServiceProvider } from './services/pdf/pdf.service';\r\nimport { NavigationMenuService, navigationMenuServiceProvider } from './services/navigation-menu/navigation-menu.service';\r\nimport { GridNg1Component } from './components/grid/grid.component';\r\nimport { ThumbnailNg1Component } from './components/thumbnail/thumbnail.component';\r\nimport { HierarchyBarNg1Component } from './components/hierarchy-bar/hierarchy-bar.component';\r\nimport { ContactsNg1Component } from './components/contacts/contacts.component';\r\nimport { ExpandInputNg1Component } from './components/expand-input/expand-input.component';\r\nimport { SortDirectionToggleNg1Component } from './components/sort-direction-toggle/sort-direction-toggle.component';\r\nimport { SearchToolbarNg1Component } from './components/search-toolbar/search-toolbar.component';\r\nimport { TreeGridNg1Component } from './components/tree-grid/tree-grid.component';\r\nimport { SelectTableNg1Component } from './components/select-table/select-table.component';\r\nimport { MarqueeWizardNg1Component } from './components/marquee-wizard/marquee-wizard.component';\r\nimport { SliderChartNg1Component } from './components/slider-chart/slider-chart.directive';\r\n\r\nconst declarations = [\r\n    ContactsNg1Component,\r\n    ExpandInputNg1Component,\r\n    FloatingActionButtonNg1Component,\r\n    FlotNg1Component,\r\n    GridNg1Component,\r\n    HierarchyBarNg1Component,\r\n    MarqueeWizardNg1Component,\r\n    NestedDonutNg1Component,\r\n    OrganizationChartNg1Component,\r\n    PartitionMapNg1Component,\r\n    PeityBarChartNg1Component,\r\n    PeityLineChartNg1Component,\r\n    PeityPieChartNg1Component,\r\n    PeityUpdatingLineChartNg1Component,\r\n    SankeyNg1Component,\r\n    SearchToolbarNg1Component,\r\n    SelectTableNg1Component,\r\n    SliderChartNg1Component,\r\n    SocialChartNg1Component,\r\n    SortDirectionToggleNg1Component,\r\n    TreeGridNg1Component,\r\n    ThumbnailNg1Component,\r\n];\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: declarations,\r\n    declarations: declarations,\r\n    providers: [\r\n        navigationMenuServiceProvider,\r\n        pdfServiceProvider,\r\n        timeAgoServiceProvider,\r\n        TimeAgoService,\r\n        PdfService,\r\n        NavigationMenuService,\r\n    ],\r\n})\r\nexport class HybridModule { }\r\n"],"names":["Component","Input","NgModule","CommonModule","RouterModule","Subscription","BehaviorSubject","fromEvent","Injectable","RendererFactory2","NgZone","EventEmitter","debounceTime","Directive","ElementRef","Output","filter","map","ChangeDetectionStrategy","ContentChild","TemplateRef","HostBinding","ViewChild","NG_VALUE_ACCESSOR","forwardRef","FormsModule","Subject","ContentChildren","delay","distinctUntilChanged","takeUntil","tslib_1.__extends","ViewEncapsulation","Pipe","combineLatest","months","Host","Observable","from","of","dropdown","ChangeDetectorRef","tooltip","ComponentPortal","ViewContainerRef","Overlay","ScrollDispatcher","Renderer2","OverlayModule","ObserversModule","((dragulaNamespace)).default","tslib_1.__values","DECLARATIONS","TypeaheadModule","BsDropdownDirective","BsDropdownModule","HostListener","trigger","transition","query","style","stagger","animate","TooltipDirective","Attribute","first","ViewChildren","ESCAPE","QueryList","NavigationEnd","Optional","SkipSelf","Router","ActivatedRoute","state","Inject","DOCUMENT","ComponentFactoryResolver","typeahead","filterOperator","auditTime","uniqueId","NG_VALIDATORS","EXPORTS","NgModel","ResponseContentType","Http","HttpModule","concat","switchMap","timer","KeyCode","Injector","UpgradeComponent"],"mappings":"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"}
